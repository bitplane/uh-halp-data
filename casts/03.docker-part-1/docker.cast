{"version": 2, "width": 124, "height": 30, "timestamp": 1735931914, "env": {"SHELL": "/bin/bash", "TERM": "xterm-256color"}}
[0.008056, "o", "\u001b[?1049h\u001b[22;0;0t\u001b[?1h\u001b=\u001b[H\u001b[2J\u001b[?12l\u001b[?25h\u001b[?1000l\u001b[?1002l\u001b[?1003l\u001b[?1006l\u001b[?1005l\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[?1006l\u001b[?1000l\u001b[?1002l\u001b[?1003l\u001b[?2004l\u001b[1;1H\u001b[1;30r\u001b[>c\u001b[>q\u001b[12;38H\u001b[?1006h\u001b[?1002h\u001b[?2004h"]
[0.008936, "o", "\u001b[?25l\u001b[H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ cd src\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src\u001b(B\u001b[m$ cd uh-halp-data/\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ ls -l\u001b[K\r\ntotal 36\u001b[K\r\ndrwxrwxr-x 7 gaz gaz  4096 Jan  3 19:17 \u001b[34m\u001b[1mcasts\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 3 gaz gaz 12288 Jan  3 19:18 \u001b[34m\u001b[1mdata\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 3 gaz gaz  4096 Jan  3 19:16 \u001b[34m\u001b[1mdata.bak\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 2 gaz gaz  4096 Jan  3 19:13 \u001b[34m\u001b[1mlog\u001b(B\u001b[m\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  3176 Jan  3 19:02 Makefile\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  2550 Jan  1 07:28 README.md\u001b[K\r\ndrwxrwxr-x 2 gaz gaz  4096 Jan  3 19:03 \u001b[34m\u001b[1mscripts\u001b(B\u001b[m\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:18 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[12;38H\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[?1006l\u001b[?1000l\u001b[?1002l\u001b[?1003l\u001b[?2004l\u001b[1;1H\u001b[1;30r\u001b[12;38H\u001b[?1006h\u001b[?1002h\u001b[?2004h\u001b[?25l\u001b[H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ cd src\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src\u001b(B\u001b[m$ cd uh-halp-data/\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ ls -l\u001b[K\r\ntotal 36\u001b[K\r\ndrwxrwxr-x 7 gaz gaz  4096 Jan  3 19:17 \u001b[34m\u001b[1mcasts\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 3 gaz gaz 12288 Jan  3 19:18 \u001b[34m\u001b[1mdata\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 3 gaz gaz  4096 Jan  3 19:16 \u001b[34m\u001b[1mdata.bak\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 2 gaz gaz  4096 Jan  3 19:13 \u001b[34m\u001b[1mlog\u001b(B\u001b[m\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  3176 Jan  3 19:02 Makefile\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  2550 Jan  1 07:28 README.md\u001b[K\r\ndrwxrwxr-x 2 gaz gaz  4096 Jan  3 19:03 \u001b[34m\u001b[1mscripts\u001b(B\u001b[m\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:18 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[12;38H"]
[0.080951, "o", "\u001b[?7727h\u001b[?7727h"]
[1.378781, "o", "v"]
[1.550698, "o", "i"]
[1.597946, "o", "m"]
[1.698741, "o", " "]
[1.911729, "o", "M"]
[2.145147, "o", "a"]
[2.498926, "o", "kefile "]
[2.900835, "o", "\r\n\u001b[?2004l"]
[2.930591, "o", "\u001b[?25l\u001b[H\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[?12l\u001b[?25h\u001b[H\u001b[?2004h"]
[2.931039, "o", "\u001b[1;29r\u001b[29S\u001b[29;1H\"Makefile\"\u001b[1;30r\u001b[29;11H\u001b[?25l"]
[2.931163, "o", " 71L, 3176B"]
[2.933621, "o", "\u001b[2;1Hâ–½\r  \r\n           \u001b[H"]
[2.93597, "o", "\u001b[36m# So we can actually have some persistence\r\n\u001b[1m.ONESHELL:\u001b(B\u001b[m\u001b[K\r\n\u001b[36m\u001b[1m.SHELLFLAGS \u001b(B\u001b[m:= -c -e\u001b[K\u001b[5;1H\u001b[36m\u001b[1mMAX_PACKAGES\u001b(B\u001b[m=15000\r\n\u001b[36m\u001b[1mPACKAGE_BLACKLIST\u001b(B\u001b[m=^pcp\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^mythexport\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^prewikka\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^slapd\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^mailman3-web\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^freedombox\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^kubuntu-installer-prompt\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^runit\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^amazon-ec2-net-utils\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^xemacs21-nomule\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^uvtool-libvirt\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^epoptes\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^namazu2\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^sympa\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^firebuild\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^epic4\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^epic5\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^initramfs-tools\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^linux-image-6.8.0-1009-xilinx|\u001b[36m\u001b[1m$$\u001b(B\u001b[m^sympa\u001b[36m\u001b[1m$$\u001b[10;1Hall:\r\n\u001b(B\u001b[m\u001b[35m    @\u001b[38;5;130mbash -c \"touch ./data/*\"\r\n\u001b[35m    @\u001b[36m\u001b[1m$(MAKE)\u001b(B\u001b[m\u001b[38;5;130m data/04.run-help-extractor\r\n    \u001b[36m# finished? really? give yourself a pat on the mouth\u001b[15;1H## Step 1a: List default binaries installed in Ubuntu.\r\n\u001b[1mdata/01a.ubuntu-bin:\u001b(B\u001b[m scripts/01a.standard-binaries.sh\r\n\u001b[35m    @\u001b[38;5;130mecho \"01 - Getting standard binary names\"\r\n\u001b[35m    @\u001b[38;5;130m./scripts/01a.standard-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\r\n\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[21;1H\u001b[36m## Step 1b: List all possible Ubuntu binaries from all available packages\r\n\u001b[1mdata/01b.ubuntu-binaries-and-packages:\u001b(B\u001b[m scripts/01b.all-ubuntu-binaries.sh\r\n\u001b[35m    @\u001b[38;5;130mecho \"01 - Getting all possible binary names\"\r\n\u001b[35m    @\u001b[38;5;130m./scripts/01b.all-ubuntu-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\r\n\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[27;1H\u001b[36m## Step 1 final: combine the outputs into a list of binaries.\r\n\u001b[1mdata/01.binaries:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages data/01a.ubuntu-bin scripts/01c.combine.sh\u001b[29;107H1,1\u001b[11CTop\u001b[H\u001b[?12l\u001b[?25h"]
[3.41635, "o", "\u001b[?25l\u001b[30m\u001b[44m\u001b[30d[0] 0:sudo- 1:vim*                                                                   \"gaz@orin: ~/src/uh-ha\" 19:18 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;1H"]
[3.43283, "o", "\u001b[29;107H2\u001b[2;1H"]
[3.948099, "o", "\u001b[29;107H3\u001b[3;1H"]
[3.952417, "o", "\u001b[29;107H4,0-1\u001b[4;1H"]
[3.9938, "o", "\u001b[29;107H5,1  \u001b[5;1H"]
[4.012657, "o", "\u001b[29;107H6\u001b[6;1H"]
[4.053698, "o", "\u001b[29;107H7,0-1\u001b[9;1H"]
[4.071456, "o", "\u001b[29;107H8,1  \u001b[10;1H"]
[4.11254, "o", "\u001b[29;107H9,1-4\u001b[11;4H"]
[4.131348, "o", "\u001b[29;107H10,1-4\u001b[12;4H"]
[4.172353, "o", "\u001b[29;108H1\u001b[13;4H"]
[4.191752, "o", "\u001b[29;108H2,0-1\u001b[14;1H"]
[4.230306, "o", "\u001b[29;108H3,1  \u001b[15;1H"]
[4.250987, "o", "\u001b[29;108H4\u001b[16;1H"]
[4.289887, "o", "\u001b[29;108H5,1-4\u001b[17;4H"]
[4.309136, "o", "\u001b[29;108H6\u001b[18;4H"]
[4.348477, "o", "\u001b[29;108H7\u001b[19;4H"]
[4.388366, "o", "\u001b[29;108H8,0-1\u001b[20;1H"]
[4.408177, "o", "\u001b[29;108H9,1  \u001b[21;1H"]
[4.448403, "o", "\u001b[29;107H20\u001b[22;1H"]
[4.467898, "o", "\u001b[29;108H1,1-4\u001b[23;4H"]
[4.50719, "o", "\u001b[29;108H2\u001b[24;4H"]
[4.527227, "o", "\u001b[29;108H3\u001b[25;4H"]
[4.567411, "o", "\u001b[29;108H4,0-1\u001b[26;1H"]
[4.585781, "o", "\u001b[29;108H5,1  \u001b[27;1H"]
[4.626025, "o", "\u001b[29;108H6\u001b[28;1H"]
[4.645586, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mecho \"01 - Combining the binary lists\"\u001b[39m\u001b[29;106H\u001b[1K\u001b[C27,1-4\u001b[9X\u001b[9C2%\u001b[K\u001b[1;30r\u001b[28;4H"]
[4.685299, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130m./scripts/01c.combine.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[29;107H\u001b[39m28,1-4\u001b[9X\u001b[9C4%\u001b[K\u001b[1;30r\u001b[28;4H"]
[4.705944, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[29;107H\u001b[39m29,1-4\u001b[9X\u001b[9C6%\u001b[K\u001b[1;30r\u001b[28;4H"]
[4.745908, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[29;107H30,0-1\u001b[9X\u001b[9C8%\u001b[K\u001b[1;30r\u001b[28;1H"]
[4.765163, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[36m## Step 2: Use LLM to rank the binaries in popularity order.\u001b[29;107H\u001b[39m31,1\u001b[10X\u001b[10C11%\u001b[K\u001b[1;30r\u001b[28;1H"]
[4.803787, "o", "\u001b[1;28r\u001b[1;1H\u001b[3M\u001b[26;1H\u001b[36m\u001b[1mdata/02a.popularity-contest:\u001b(B\u001b[m data/01.binaries\r\n\u001b[35m    @\u001b[38;5;130mecho \"02 - Running popularity contest\"\r\n\u001b[35m    @\u001b[38;5;130mtimestamp=\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130m(date -u +\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mY-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mm-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130md_\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mH\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mM\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mS)\u001b[29;107H\u001b[39m32,1\u001b[10X\u001b[10C13%\u001b[K\u001b[1;30r\u001b[26;1H"]
[4.823736, "o", "\u001b[29;108H3,1-4\u001b[27;4H"]
[4.863671, "o", "\u001b[29;108H4\u001b[28;4H"]
[4.883093, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130m./scripts/02.popularity_contest.py data/01.binaries log > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\"\u001b[29;107H\u001b[39m35,1-4\u001b[8X\u001b[8C16%\u001b[K\u001b[1;30r\u001b[28;4H"]
[4.922353, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mcp \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[29;107H\u001b[39m36,1-4\u001b[8X\u001b[8C18%\u001b[K\u001b[1;30r\u001b[28;4H"]
[5.617934, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[29;107H37,0-1\u001b[8X\u001b[8C20%\u001b[K\u001b[1;30r\u001b[28;1H"]
[5.773754, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[36m## Step 3a: Prioritize the packages based on the binary rankings.\u001b[29;107H\u001b[39m38,1\u001b[10X\u001b[10C23%\u001b[K\u001b[1;30r\u001b[28;1H"]
[5.935904, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[36m\u001b[1mdata/03a.package-priority:\u001b(B\u001b[m data/02a.popularity-contest scripts/03a.package_priority.py\u001b[29;107H39,1\u001b[10X\u001b[10C25%\u001b[K\u001b[1;30r\u001b[28;1H"]
[6.075397, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mecho \"03 - Calculating package priority\"\u001b[29;107H\u001b[39m40,1-4\u001b[8X\u001b[8C27%\u001b[K\u001b[1;30r\u001b[28;4H"]
[6.22141, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130m./scripts/03a.package_priority.py > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[29;107H\u001b[39m41,1-4\u001b[8X\u001b[8C30%\u001b[K\u001b[1;30r\u001b[28;4H"]
[6.394995, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[29;107H\u001b[39m42,1-4\u001b[8X\u001b[8C32%\u001b[K\u001b[1;30r\u001b[28;4H"]
[6.55317, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[29;107H43,0-1\u001b[8X\u001b[8C34%\u001b[K\u001b[1;30r\u001b[28;1H"]
[6.676548, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[36m## Step 3b: Limit the number of packages based on how many we want to install.\u001b[29;107H\u001b[39m44,1\u001b[10X\u001b[10C37%\u001b[K\u001b[1;30r\u001b[28;1H"]
[6.828194, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[36m\u001b[1mdata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\u001b[29;107H45,1\u001b[10X\u001b[10C39%\u001b[K\u001b[1;30r\u001b[28;1H"]
[6.991415, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\u001b[29;107H\u001b[39m46,1-4\u001b[8X\u001b[8C41%\u001b[K\u001b[1;30r\u001b[28;4H"]
[7.377902, "o", "\u001b[29;108H5,1  \u001b[27;1H"]
[7.718567, "o", "\u001b[29;108H6,1-4\u001b[28;4H"]
[7.878238, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[29;107H\u001b[39m47,1-4\u001b[8X\u001b[8C44%\u001b[K\u001b[1;30r\u001b[28;4H"]
[8.036523, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[29;107H\u001b[39m48,1-4\u001b[8X\u001b[8C46%\u001b[K\u001b[1;30r\u001b[28;4H"]
[8.193018, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[29;107H\u001b[39m49,1-4\u001b[8X\u001b[8C48%\u001b[K\u001b[1;30r\u001b[28;4H"]
[8.351896, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[29;107H\u001b[39m50,1-4\u001b[8X\u001b[8C51%\u001b[K\u001b[1;30r\u001b[28;4H"]
[8.5095, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[29;107H\u001b[39m51,1-4\u001b[8X\u001b[8C53%\u001b[K\u001b[1;30r\u001b[28;4H"]
[8.668864, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[29;107H\u001b[39m52,1-4\u001b[8X\u001b[8C55%\u001b[K\u001b[1;30r\u001b[28;4H"]
[8.829643, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[29;107H53,0-1\u001b[8X\u001b[8C58%\u001b[K\u001b[1;30r\u001b[28;1H"]
[8.990795, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[36m## Step 3c: Get binary names from the packages we installed, plus the defaults.\u001b[29;107H\u001b[39m54,1\u001b[10X\u001b[10C60%\u001b[K\u001b[1;30r\u001b[28;1H"]
[9.627467, "o", "\u001b[29;108H3,0-1\u001b[27;1H"]
[10.12749, "o", "\u001b[29;108H2,1-4\u001b[26;4H"]
[10.153001, "o", "\u001b[29;108H1\u001b[25;4H"]
[10.174347, "o", "\u001b[29;108H0\u001b[24;4H"]
[10.213462, "o", "\u001b[29;107H49\u001b[23;4H"]
[10.234616, "o", "\u001b[29;108H8\u001b[22;4H"]
[10.275175, "o", "\u001b[29;108H7\u001b[21;4H"]
[10.294026, "o", "\u001b[29;108H6\u001b[20;4H"]
[10.334591, "o", "\u001b[29;108H5,1  \u001b[19;1H"]
[10.353807, "o", "\u001b[29;108H4\u001b[18;1H"]
[10.393574, "o", "\u001b[29;108H3,0-1\u001b[17;1H"]
[10.434013, "o", "\u001b[29;108H2,1-4\u001b[16;4H"]
[10.452546, "o", "\u001b[29;108H1\u001b[15;4H"]
[10.492025, "o", "\u001b[29;108H0\u001b[14;4H"]
[10.512263, "o", "\u001b[29;107H39,1  \u001b[13;1H"]
[10.867866, "o", "\u001b[29;108H8\u001b[12;1H"]
[11.946948, "o", "\u001b[29;110H65\u001b[12;65H"]
[12.39396, "o", "\u001b[29;111H4\u001b[12;64H"]
[12.793743, "o", "\u001b[29;108H9\u001b[13;64H"]
[13.756689, "o", "\u001b[29;110H86\u001b[13;86H"]
[17.488178, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[35m\u001b[H    @\u001b[38;5;130mecho \"01 - Combining the binary lists\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01c.combine.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[22X\u001b[3;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[4;62H\u001b[1K\u001b[36m\r\n## Step 2: Use LLM to rank the binaries in popularity order.\u001b[39m\u001b[2X\u001b[36m\u001b[1m\r\ndata/02a.popularity-contest:\u001b(B\u001b[m data/01.binaries\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130mecho \"02 - Running popularity contest\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130mtimestamp=\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130m(date -u +\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mY-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mm-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130md_\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mH\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mM\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mS)\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/02.popularity_contest.py data/01.binaries log >\u001b[35m\r\n    @\u001b[38;5;130mcp \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[29X\u001b[11;62H\u001b[1K\u001b[36m\r\n## Step 3a: Prioritize the packages based on the binary rankin\u001b[1m\r\ndata/03a.package-priority:\u001b(B\u001b[m data/02a.popularity-contest scripts\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Calculating package priority\"\u001b[39m\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03a.package_priority.py > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[13X\u001b[16;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[17;62H\u001b[1K\u001b[36m\r\n## Step 3b: Limit the number of packages based on how many we \u001b[1m\r\ndata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\u001b[39m\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[20X\u001b[35m\r\n    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[21X\u001b[23;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[5X\u001b[25;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[26;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[27;62H\u001b[1K\u001b[36m\r\n## Step 3c: Get binary names from the packages we installed, p\u001b[39m\u001b[29;62H\u001b[1K\u001b[1;64H\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:vim*                                                                                    \"orin\" 19:18 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;64H\u001b[?2004l"]
[17.488487, "o", "\u001b[?25l\bâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                                   \"orin\" 19:18 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;64H"]
[17.489895, "o", "\u001b[1;29r\u001b[1;62H\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\u001b[H\u001b[35m    @\u001b[38;5;130mecho \"01 - Combining the binary lists\"\r\n\u001b[35m    @\u001b[38;5;130m./scripts/01c.combine.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\r\n\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[5;1H\u001b[36m## Step 2: Use LLM to rank the binaries in popularity order.\r\n\u001b[1mdata/02a.popularity-contest:\u001b(B\u001b[m data/01.binaries\r\n\u001b[35m    @\u001b[38;5;130mecho \"02 - Running popularity contest\"\r\n\u001b[35m    @\u001b[38;5;130mtimestamp=\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130m(date -u +\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mY-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mm-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130md_\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mH\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mM\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mS)\r\n\u001b[35m    @\u001b[38;5;130m./scripts/02.popularity_contest.py data/01.binaries log >\r\n \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\"\r\n\u001b[35m    @\u001b[38;5;130mcp \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[13;1H\u001b[36m## Step 3a: Prioritize the packages based on the binary rankin\r\ngs.\r\n\u001b[1mdata/03a.package-priority:\u001b(B\u001b[m data/02a.popularity-contest scripts\r\n/03a.package_priority.py\r\n\u001b[35m    @\u001b[38;5;130mecho \"03 - Calculating package priority\"\r\n\u001b[35m    @\u001b[38;5;130m./scripts/03a.package_priority.py > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\r\n\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[21;1H\u001b[36m## Step 3b: Limit the number of packages based on how many we \r\nwant to install.\r\n\u001b[1mdata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\r\n\u001b[35m    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\r\n\u001b[35m    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\r\n\u001b[35m    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[1;30r\u001b[1;64H\u001b(B\u001b[m\u001b[26;34H\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\r\n\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\r\n\u001b[35m    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[29;45H\u001b[39m39,86\u001b[9C55%\u001b[1;64H"]
[17.574712, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ \u001b[?2004h"]
[17.575381, "o", "\u001b[?25l\u001b[21Dâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                            \"gaz@orin: ~\" 19:18 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;84H"]
[19.448198, "o", "\u001b[2;64H\u001b[?2004l"]
[19.448522, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ \u001b[?2004h"]
[19.448763, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[2;84H"]
[19.932885, "o", "\u001b[3;64H\u001b[?2004l"]
[19.933544, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ \u001b[?2004h"]
[19.93411, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[3;84H"]
[19.960896, "o", "\u001b[4;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ "]
[19.961418, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[4;84H"]
[19.9811, "o", "\u001b[5;64H\u001b[?2004l"]
[19.981345, "o", "\u001b[?2004h(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ "]
[19.981756, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[5;84H"]
[20.023736, "o", "\u001b[6;64H\u001b[?2004l"]
[20.023992, "o", "\u001b[?2004h"]
[20.024272, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ "]
[20.024558, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[6;84H"]
[20.044497, "o", "\u001b[7;64H\u001b[?2004l"]
[20.044939, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ \u001b[?2004h"]
[20.045453, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[7;84H"]
[20.086809, "o", "\u001b[8;64H\u001b[?2004l"]
[20.08733, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ \u001b[?2004h"]
[20.08782, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[8;84H"]
[20.110865, "o", "\u001b[9;64H\u001b[?2004l"]
[20.111081, "o", "\u001b[?2004h(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ "]
[20.11161, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[9;84H"]
[20.129195, "o", "\u001b[10;64H\u001b[?2004l"]
[20.129565, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ \u001b[?2004h"]
[20.130129, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[10;84H"]
[20.255281, "o", "\u001b[11;64H\u001b[?2004l\u001b[?2004h"]
[20.255384, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ "]
[20.256017, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[11;84H"]
[20.45996, "o", "\u001b[12;64H\u001b[?2004l"]
[20.460111, "o", "\u001b[?2004h"]
[20.460147, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ "]
[20.460601, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[12;84H"]
[20.608054, "o", "\u001b[13;64H\u001b[?2004l"]
[20.608597, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ \u001b[?2004h"]
[20.609277, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[13;84H"]
[20.730548, "o", "\u001b[14;64H\u001b[?2004l"]
[20.730789, "o", "\u001b[?2004h(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ "]
[20.731225, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[14;84H"]
[20.903588, "o", "\u001b[15;64H\u001b[?2004l\u001b[?2004h"]
[20.903795, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ "]
[20.904147, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[15;84H"]
[22.661808, "o", "c"]
[22.709088, "o", "d"]
[22.833838, "o", " "]
[22.958978, "o", "s"]
[23.128477, "o", "r"]
[23.344727, "o", "c"]
[24.266079, "o", "\u001b[16;64H"]
[24.266373, "o", "\u001b[?2004l"]
[24.26652, "o", "\u001b[?2004h"]
[24.266933, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src\u001b(B\u001b[m$ "]
[24.2671, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                        \"gaz@orin: ~/src\" 19:18 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[16;88H"]
[24.957374, "o", "c"]
[25.00625, "o", "d"]
[25.140314, "o", " "]
[25.186946, "o", "\u001b[?25l\u001b[30m\u001b[44m\u001b[30;1H[0] 0:sudo- 1:bash*                                                                        \"gaz@orin: ~/src\" 19:19 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[16;91H"]
[25.395913, "o", "u"]
[25.645669, "o", "h"]
[25.86089, "o", "-halp-data/"]
[26.313335, "o", "\u001b[17;64H\u001b[?2004l"]
[26.313577, "o", "\u001b[?2004h(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ "]
[26.314177, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:19 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[17;101H"]
[26.730682, "o", "l"]
[27.020267, "o", "s"]
[27.373912, "o", " "]
[27.545918, "o", "-"]
[27.616403, "o", "l"]
[27.861035, "o", "\u001b[18;64H\u001b[?2004l"]
[27.864112, "o", "total 36\u001b[19;64H"]
[27.864803, "o", "drwxrwxr-x 7 gaz gaz  4096 Jan  3 19:17 \u001b[34m\u001b[1mcasts\u001b[20;64H\u001b(B\u001b[mdrwxrwxr-x 3 gaz gaz 12288 Jan  3 19:18 \u001b[34m\u001b[1mdata\u001b[21;64H\u001b(B\u001b[mdrwxrwxr-x 3 gaz gaz  4096 Jan  3 19:16 \u001b[34m\u001b[1mdata.bak\u001b[22;64H\u001b(B\u001b[mdrwxrwxr-x 2 gaz gaz  4096 Jan  3 19:13 \u001b[34m\u001b[1mlog\u001b[23;64H\u001b(B\u001b[m-rw-rw-r-- 1 gaz gaz  3176 Jan  3 19:02 Makefile\u001b[24;64H-rw-rw-r-- 1 gaz gaz  2550 Jan  1 07:28 README.md\u001b[25;64Hdrwxrwxr-x 2 gaz gaz  4096 Jan  3 19:03 \u001b[34m\u001b[1mscripts\u001b[26;64H\u001b(B\u001b[m"]
[27.865308, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[?2004h"]
[27.865496, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[26;101H"]
[28.909282, "o", "v"]
[28.978408, "o", "i"]
[29.059756, "o", "m"]
[29.142819, "o", " "]
[29.339669, "o", "s"]
[29.38838, "o", "c"]
[29.647506, "o", "ripts/"]
[31.707907, "o", "0"]
[31.81715, "o", "3"]
[32.06369, "o", "a"]
[32.283856, "o", ".package_\u001b[27;64Hpriority.py "]
[33.230342, "o", "\u001b[28;64H\u001b[?2004l"]
[33.261385, "o", "\u001b[?25l\u001b[1d\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\u001b[?12l\u001b[?25h\u001b[1d\u001b[?2004h"]
[33.262512, "o", "\u001b[1;29r\u001b[1;64H\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\"scripts/03a.package_priority.py\"\u001b[1;30r\u001b[29;97H\u001b[?25l\u001b[33D<ripts/03a.package_priority.py\" 88L, 2901B"]
[33.266223, "o", "\u001b[2;64Hâ–½\b  \u001b[3;64H           \u001b[1;64H"]
[33.268901, "o", "\u001b[36m#!/usr/bin/env python3\u001b[39m\u001b[2;64H\u001b[K\n\u001b[35mimport\u001b[39m argparse\u001b[4;64H\u001b[35mimport\u001b[39m logging\u001b[6;64H\u001b[33mdef\u001b[39m \u001b[36m\u001b[1mload_binaries\u001b(B\u001b[m(file_name):\u001b[7;64H    \u001b[38;5;130m\"\"\"Loads binaries and their associated data from a file.\"\u001b[8;64H\"\"\u001b[9;64H\u001b[39m    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[10;72Hbinary_dict = {}\u001b[11;72H\u001b[33mfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[12;76Hline = line.strip()\u001b[13;76H\u001b[33mif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[14;80H\u001b[33mcontinue\u001b[16;76H\u001b[39mparts = line.split()\u001b[18;76H\u001b[33mif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[19;80Hpath_binary, repo = parts\u001b[20;80Hpath, binary = path_binary.rsplit(\u001b[38;5;130m'/'\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[21;64H\u001b[38;5;130m'/'\u001b[39m \u001b[33min\u001b[39m path_binary \u001b[33melse\u001b[39m (\u001b[38;5;130m''\u001b[39m, path_binary)\u001b[22;80Hbinary_dict[binary] = {\u001b[23;84H\u001b[38;5;130m\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[24;84H\u001b[38;5;130m\"repo\"\u001b[39m: repo,\u001b[25;84H\u001b[38;5;130m\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[26;80H\u001b[39m}\u001b[27;76H\u001b[33melif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[28;80Hbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[29;107H1,1\u001b[11CTop\u001b[1;64H\u001b[?12l\u001b[?25h"]
[33.744857, "o", "\u001b[?25l\bâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:vim*                                                                   \"gaz@orin: ~/src/uh-ha\" 19:19 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;64H"]
[33.859414, "o", "\u001b[29;107H2,0-1\u001b[2;64H"]
[34.355748, "o", "\u001b[29;107H3,1  \u001b[3;64H"]
[34.381753, "o", "\u001b[29;107H4\u001b[4;64H"]
[34.402747, "o", "\u001b[29;107H5,0-1\u001b[5;64H"]
[34.444601, "o", "\u001b[29;107H6,1  \u001b[6;64H"]
[34.465998, "o", "\u001b[29;107H7\u001b[7;64H"]
[34.508143, "o", "\u001b[29;107H8\u001b[9;64H"]
[34.527822, "o", "\u001b[29;107H9\u001b[10;64H"]
[34.570882, "o", "\u001b[29;107H10,1\u001b[11;64H"]
[34.591005, "o", "\u001b[29;108H1\u001b[12;64H"]
[34.612348, "o", "\u001b[29;108H2\u001b[13;64H"]
[34.653264, "o", "\u001b[29;108H3\u001b[14;64H"]
[34.674551, "o", "\u001b[29;108H4,0-1\u001b[15;64H"]
[34.714811, "o", "\u001b[29;108H5,1  \u001b[16;64H"]
[34.734586, "o", "\u001b[29;108H6,0-1\u001b[17;64H"]
[34.776891, "o", "\u001b[29;108H7,1  \u001b[18;64H"]
[34.796821, "o", "\u001b[29;108H8\u001b[19;64H"]
[34.838945, "o", "\u001b[29;108H9\u001b[20;64H"]
[34.859957, "o", "\u001b[29;107H20\u001b[22;64H"]
[34.901598, "o", "\u001b[29;108H1\u001b[23;64H"]
[34.922716, "o", "\u001b[29;108H2\u001b[24;64H"]
[34.964248, "o", "\u001b[29;108H3\u001b[25;64H"]
[34.98397, "o", "\u001b[29;108H4\u001b[26;64H"]
[35.004471, "o", "\u001b[29;108H5\u001b[27;64H"]
[35.047091, "o", "\u001b[29;108H6\u001b[28;64H"]
[35.068025, "o", "\u001b[?25l\u001b[1d\u001b[K\u001b[35m\nimport\u001b[39m argparse\u001b[K\u001b[35m\u001b[3;64Himport\u001b[39m logging\u001b[K\u001b[4;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_binaries\u001b(B\u001b[m(file_name):\u001b[K\u001b[6;64H    \u001b[38;5;130m\"\"\"Loads binaries and their associated data from a file.\"\u001b[7;64H\"\"\u001b[39m\u001b[K\u001b[8;64H    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[9;64H\u001b[8X\u001b[8Cbinary_dict = {}\u001b[K\u001b[10;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[11;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[12;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[13;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[14;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[16;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[18;64H\u001b[16X\u001b[16Cpath_binary, repo = parts\u001b[K\u001b[19;64H\u001b[16X\u001b[16Cpath, binary = path_binary.rsplit(\u001b[38;5;130m'/'\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\u001b[20;64H'/'\u001b[39m \u001b[33min\u001b[39m path_binary \u001b[33melse\u001b[39m (\u001b[38;5;130m''\u001b[39m, path_binary)\u001b[K\u001b[21;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[22;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[23;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: repo,\u001b[K\u001b[24;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[25;64H\u001b[16X\u001b[16C}\u001b[K\u001b[26;64H\u001b[12X\u001b[33m\u001b[12Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[K\u001b[27;64H\u001b[16X\u001b[16Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[K\u001b[28;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[29;64H\u001b[43X\u001b[43C27,1\u001b[11X\u001b[11C1%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[35.108688, "o", "\u001b[?25l\u001b[35m\u001b[1dimport\u001b[39m argparse\u001b[K\u001b[35m\u001b[2;64Himport\u001b[39m logging\u001b[K\u001b[3;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_binaries\u001b(B\u001b[m(file_name):\u001b[K\u001b[5;64H    \u001b[38;5;130m\"\"\"Loads binaries and their associated data from a file.\"\u001b[6;64H\"\"\u001b[39m\u001b[K\u001b[7;64H    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[8;64H\u001b[8X\u001b[8Cbinary_dict = {}\u001b[K\u001b[9;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[10;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[11;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[12;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[13;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[15;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[17;64H\u001b[16X\u001b[16Cpath_binary, repo = parts\u001b[K\u001b[18;64H\u001b[16X\u001b[16Cpath, binary = path_binary.rsplit(\u001b[38;5;130m'/'\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\u001b[19;64H'/'\u001b[39m \u001b[33min\u001b[39m path_binary \u001b[33melse\u001b[39m (\u001b[38;5;130m''\u001b[39m, path_binary)\u001b[K\u001b[20;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[21;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[22;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: repo,\u001b[K\u001b[23;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[24;64H\u001b[16X\u001b[16C}\u001b[K\u001b[25;64H\u001b[12X\u001b[33m\u001b[12Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[K\u001b[26;64H\u001b[16X\u001b[16Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[K\u001b[27;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[28;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[29;64H\u001b[43X\u001b[43C28,1\u001b[11X\u001b[11C3%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[35.129654, "o", "\u001b[?25l\u001b[35m\u001b[1dimport\u001b[39m logging\u001b[K\u001b[2;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_binaries\u001b(B\u001b[m(file_name):\u001b[K\u001b[4;64H    \u001b[38;5;130m\"\"\"Loads binaries and their associated data from a file.\"\u001b[5;64H\"\"\u001b[39m\u001b[K\u001b[6;64H    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[7;64H\u001b[8X\u001b[8Cbinary_dict = {}\u001b[K\u001b[8;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[9;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[10;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[11;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[12;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[14;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[16;64H\u001b[16X\u001b[16Cpath_binary, repo = parts\u001b[K\u001b[17;64H\u001b[16X\u001b[16Cpath, binary = path_binary.rsplit(\u001b[38;5;130m'/'\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\u001b[18;64H'/'\u001b[39m \u001b[33min\u001b[39m path_binary \u001b[33melse\u001b[39m (\u001b[38;5;130m''\u001b[39m, path_binary)\u001b[K\u001b[19;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[20;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[21;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: repo,\u001b[K\u001b[22;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[23;64H\u001b[16X\u001b[16C}\u001b[K\u001b[24;64H\u001b[12X\u001b[33m\u001b[12Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[K\u001b[25;64H\u001b[16X\u001b[16Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[K\u001b[26;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[27;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[28;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[29;64H\u001b[43X\u001b[43C29,1\u001b[11X\u001b[11C4%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[35.170089, "o", "\u001b[?25l\u001b[1d\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_binaries\u001b(B\u001b[m(file_name):\u001b[K\u001b[3;64H    \u001b[38;5;130m\"\"\"Loads binaries and their associated data from a file.\"\u001b[4;64H\"\"\u001b[39m\u001b[K\u001b[5;64H    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[6;64H\u001b[8X\u001b[8Cbinary_dict = {}\u001b[K\u001b[7;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[8;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[9;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[10;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[11;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[13;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[15;64H\u001b[16X\u001b[16Cpath_binary, repo = parts\u001b[K\u001b[16;64H\u001b[16X\u001b[16Cpath, binary = path_binary.rsplit(\u001b[38;5;130m'/'\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\u001b[17;64H'/'\u001b[39m \u001b[33min\u001b[39m path_binary \u001b[33melse\u001b[39m (\u001b[38;5;130m''\u001b[39m, path_binary)\u001b[K\u001b[18;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[19;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[20;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: repo,\u001b[K\u001b[21;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[22;64H\u001b[16X\u001b[16C}\u001b[K\u001b[23;64H\u001b[12X\u001b[33m\u001b[12Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[K\u001b[24;64H\u001b[16X\u001b[16Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[K\u001b[25;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[26;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[27;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[28;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[29;64H\u001b[43X\u001b[43C30,1\u001b[11X\u001b[11C6%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[35.190158, "o", "\u001b[?25l\u001b[33m\u001b[1ddef\u001b[39m \u001b[36m\u001b[1mload_binaries\u001b(B\u001b[m(file_name):\u001b[K\u001b[2;64H    \u001b[38;5;130m\"\"\"Loads binaries and their associated data from a file.\"\u001b[3;64H\"\"\u001b[39m\u001b[K\u001b[4;64H    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[5;64H\u001b[8X\u001b[8Cbinary_dict = {}\u001b[K\u001b[6;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[7;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[8;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[9;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[10;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[12;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[14;64H\u001b[16X\u001b[16Cpath_binary, repo = parts\u001b[K\u001b[15;64H\u001b[16X\u001b[16Cpath, binary = path_binary.rsplit(\u001b[38;5;130m'/'\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\u001b[16;64H'/'\u001b[39m \u001b[33min\u001b[39m path_binary \u001b[33melse\u001b[39m (\u001b[38;5;130m''\u001b[39m, path_binary)\u001b[K\u001b[17;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[18;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[19;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: repo,\u001b[K\u001b[20;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[21;64H\u001b[16X\u001b[16C}\u001b[K\u001b[22;64H\u001b[12X\u001b[33m\u001b[12Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[K\u001b[23;64H\u001b[16X\u001b[16Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[K\u001b[24;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[25;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[26;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[27;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[28;64H\u001b[16X\u001b[16C}\u001b[K\u001b[29;64H\u001b[43X\u001b[43C31,1\u001b[11X\u001b[11C8%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[35.22987, "o", "\u001b[?25l\u001b[1d    \u001b[38;5;130m\"\"\"Loads binaries and their associated data from a file.\"\u001b[2;64H\"\"\u001b[39m\u001b[K\u001b[3;64H    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[4;64H\u001b[8X\u001b[8Cbinary_dict = {}\u001b[K\u001b[5;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[6;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[7;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[8;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[9;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[11;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[13;64H\u001b[16X\u001b[16Cpath_binary, repo = parts\u001b[K\u001b[14;64H\u001b[16X\u001b[16Cpath, binary = path_binary.rsplit(\u001b[38;5;130m'/'\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\u001b[15;64H'/'\u001b[39m \u001b[33min\u001b[39m path_binary \u001b[33melse\u001b[39m (\u001b[38;5;130m''\u001b[39m, path_binary)\u001b[K\u001b[16;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[17;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[18;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: repo,\u001b[K\u001b[19;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[20;64H\u001b[16X\u001b[16C}\u001b[K\u001b[21;64H\u001b[12X\u001b[33m\u001b[12Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[K\u001b[22;64H\u001b[16X\u001b[16Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[K\u001b[23;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[24;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[25;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[26;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[27;64H\u001b[16X\u001b[16C}\u001b[K\u001b[28;64H\u001b[K\n\u001b[43X\u001b[43C32,0-1\u001b[9X\u001b[9C9%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[35.250396, "o", "\u001b[?25l\u001b[1d    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[2;64H\u001b[8X\u001b[8Cbinary_dict = {}\u001b[K\u001b[3;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[4;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[5;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[6;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[7;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[9;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[11;64H\u001b[16X\u001b[16Cpath_binary, repo = parts\u001b[K\u001b[12;64H\u001b[16X\u001b[16Cpath, binary = path_binary.rsplit(\u001b[38;5;130m'/'\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\u001b[13;64H'/'\u001b[39m \u001b[33min\u001b[39m path_binary \u001b[33melse\u001b[39m (\u001b[38;5;130m''\u001b[39m, path_binary)\u001b[K\u001b[14;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[15;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[16;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: repo,\u001b[K\u001b[17;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[18;64H\u001b[16X\u001b[16C}\u001b[K\u001b[19;64H\u001b[12X\u001b[33m\u001b[12Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[K\u001b[20;64H\u001b[16X\u001b[16Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[K\u001b[21;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[22;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[23;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[24;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[25;64H\u001b[16X\u001b[16C}\u001b[K\u001b[26;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m binary_dict\u001b[K\u001b[28;64H\u001b[K\n\u001b[43X\u001b[43C33,1\u001b[10X\u001b[10C11%\u001b[K\u001b[?12l\u001b[?25h\u001b[27;64H"]
[35.291687, "o", "\u001b[29;108H4,0-1\u001b[28;64H"]
[35.312443, "o", "\u001b[?25l\u001b[1d\u001b[8X\u001b[8Cbinary_dict = {}\u001b[K\u001b[2;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[3;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[4;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[5;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[6;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[8;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[10;64H\u001b[16X\u001b[16Cpath_binary, repo = parts\u001b[K\u001b[11;64H\u001b[16X\u001b[16Cpath, binary = path_binary.rsplit(\u001b[38;5;130m'/'\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\u001b[12;64H'/'\u001b[39m \u001b[33min\u001b[39m path_binary \u001b[33melse\u001b[39m (\u001b[38;5;130m''\u001b[39m, path_binary)\u001b[K\u001b[13;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[14;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[15;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: repo,\u001b[K\u001b[16;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[17;64H\u001b[16X\u001b[16C}\u001b[K\u001b[18;64H\u001b[12X\u001b[33m\u001b[12Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[K\u001b[19;64H\u001b[16X\u001b[16Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[K\u001b[20;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[21;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[22;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[23;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[24;64H\u001b[16X\u001b[16C}\u001b[K\u001b[25;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m binary_dict\u001b[K\u001b[27;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_scores\u001b(B\u001b[m(log_file, binary_dict):\u001b[K\u001b[29;64H\u001b[43X\u001b[43C35,1\u001b[10X\u001b[10C13%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[35.354746, "o", "\u001b[?25l\u001b[1d\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[2;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[3;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[4;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[6;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[8;64H\u001b[16X\u001b[16Cpath_binary, repo = parts\u001b[K\u001b[9;64H\u001b[16X\u001b[16Cpath, binary = path_binary.rsplit(\u001b[38;5;130m'/'\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\u001b[10;64H'/'\u001b[39m \u001b[33min\u001b[39m path_binary \u001b[33melse\u001b[39m (\u001b[38;5;130m''\u001b[39m, path_binary)\u001b[K\u001b[11;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[12;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[13;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: repo,\u001b[K\u001b[14;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[15;64H\u001b[16X\u001b[16C}\u001b[K\u001b[16;64H\u001b[12X\u001b[33m\u001b[12Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[K\u001b[17;64H\u001b[16X\u001b[16Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[K\u001b[18;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[19;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[20;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[21;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[22;64H\u001b[16X\u001b[16C}\u001b[K\u001b[23;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m binary_dict\u001b[K\u001b[25;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_scores\u001b(B\u001b[m(log_file, binary_dict):\u001b[K\u001b[27;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Loads scores from the popularity contest log into the \u001b[28;64Hbinary dictionary.\"\"\"\u001b[39m\u001b[K\u001b[29;64H\u001b[43X\u001b[43C36,1\u001b[10X\u001b[10C16%\u001b[K\u001b[?12l\u001b[?25h\u001b[27;64H"]
[35.374788, "o", "\u001b[?25l\u001b[1d\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[2;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[3;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[5;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[7;64H\u001b[16X\u001b[16Cpath_binary, repo = parts\u001b[K\u001b[8;64H\u001b[16X\u001b[16Cpath, binary = path_binary.rsplit(\u001b[38;5;130m'/'\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\u001b[9;64H'/'\u001b[39m \u001b[33min\u001b[39m path_binary \u001b[33melse\u001b[39m (\u001b[38;5;130m''\u001b[39m, path_binary)\u001b[K\u001b[10;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[11;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[12;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: repo,\u001b[K\u001b[13;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[14;64H\u001b[16X\u001b[16C}\u001b[K\u001b[15;64H\u001b[12X\u001b[33m\u001b[12Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[K\u001b[16;64H\u001b[16X\u001b[16Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[K\u001b[17;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[18;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[19;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[20;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[21;64H\u001b[16X\u001b[16C}\u001b[K\u001b[22;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m binary_dict\u001b[K\u001b[24;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_scores\u001b(B\u001b[m(log_file, binary_dict):\u001b[K\u001b[26;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Loads scores from the popularity contest log into the \u001b[27;64Hbinary dictionary.\"\"\"\u001b[39m\u001b[K\u001b[28;64H\u001b[4X\u001b[33m\u001b[4Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(log_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[29;64H\u001b[43X\u001b[43C37,1\u001b[10X\u001b[10C17%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[35.417422, "o", "\u001b[?25l\u001b[1d\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[2;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[4;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[6;64H\u001b[16X\u001b[16Cpath_binary, repo = parts\u001b[K\u001b[7;64H\u001b[16X\u001b[16Cpath, binary = path_binary.rsplit(\u001b[38;5;130m'/'\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\u001b[8;64H'/'\u001b[39m \u001b[33min\u001b[39m path_binary \u001b[33melse\u001b[39m (\u001b[38;5;130m''\u001b[39m, path_binary)\u001b[K\u001b[9;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[10;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[11;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: repo,\u001b[K\u001b[12;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[13;64H\u001b[16X\u001b[16C}\u001b[K\u001b[14;64H\u001b[12X\u001b[33m\u001b[12Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[K\u001b[15;64H\u001b[16X\u001b[16Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[K\u001b[16;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[17;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[18;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[19;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[20;64H\u001b[16X\u001b[16C}\u001b[K\u001b[21;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m binary_dict\u001b[K\u001b[23;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_scores\u001b(B\u001b[m(log_file, binary_dict):\u001b[K\u001b[25;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Loads scores from the popularity contest log into the \u001b[26;64Hbinary dictionary.\"\"\"\u001b[39m\u001b[K\u001b[27;64H\u001b[4X\u001b[33m\u001b[4Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(log_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[28;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[29;64H\u001b[43X\u001b[43C38,1\u001b[10X\u001b[10C19%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[35.437552, "o", "\u001b[?25l\u001b[1d\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[3;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[5;64H\u001b[16X\u001b[16Cpath_binary, repo = parts\u001b[K\u001b[6;64H\u001b[16X\u001b[16Cpath, binary = path_binary.rsplit(\u001b[38;5;130m'/'\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\u001b[7;64H'/'\u001b[39m \u001b[33min\u001b[39m path_binary \u001b[33melse\u001b[39m (\u001b[38;5;130m''\u001b[39m, path_binary)\u001b[K\u001b[8;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[9;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[10;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: repo,\u001b[K\u001b[11;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[12;64H\u001b[16X\u001b[16C}\u001b[K\u001b[13;64H\u001b[12X\u001b[33m\u001b[12Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[K\u001b[14;64H\u001b[16X\u001b[16Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[K\u001b[15;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[16;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[17;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[18;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[19;64H\u001b[16X\u001b[16C}\u001b[K\u001b[20;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m binary_dict\u001b[K\u001b[22;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_scores\u001b(B\u001b[m(log_file, binary_dict):\u001b[K\u001b[24;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Loads scores from the popularity contest log into the \u001b[25;64Hbinary dictionary.\"\"\"\u001b[39m\u001b[K\u001b[26;64H\u001b[4X\u001b[33m\u001b[4Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(log_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[27;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[28;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[29;64H\u001b[43X\u001b[43C39,1\u001b[10X\u001b[10C20%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[35.457749, "o", "\u001b[?25l\u001b[1d\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[2;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[4;64H\u001b[16X\u001b[16Cpath_binary, repo = parts\u001b[K\u001b[5;64H\u001b[16X\u001b[16Cpath, binary = path_binary.rsplit(\u001b[38;5;130m'/'\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\u001b[6;64H'/'\u001b[39m \u001b[33min\u001b[39m path_binary \u001b[33melse\u001b[39m (\u001b[38;5;130m''\u001b[39m, path_binary)\u001b[K\u001b[7;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[8;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[9;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: repo,\u001b[K\u001b[10;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[11;64H\u001b[16X\u001b[16C}\u001b[K\u001b[12;64H\u001b[12X\u001b[33m\u001b[12Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[K\u001b[13;64H\u001b[16X\u001b[16Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[K\u001b[14;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[15;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[16;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[17;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[18;64H\u001b[16X\u001b[16C}\u001b[K\u001b[19;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m binary_dict\u001b[K\u001b[21;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_scores\u001b(B\u001b[m(log_file, binary_dict):\u001b[K\u001b[23;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Loads scores from the popularity contest log into the \u001b[24;64Hbinary dictionary.\"\"\"\u001b[39m\u001b[K\u001b[25;64H\u001b[4X\u001b[33m\u001b[4Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(log_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[26;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[27;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[28;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[29;64H\u001b[43X\u001b[43C40,1\u001b[10X\u001b[10C22%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[35.500253, "o", "\u001b[?25l\u001b[1d\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[3;64H\u001b[16X\u001b[16Cpath_binary, repo = parts\u001b[K\u001b[4;64H\u001b[16X\u001b[16Cpath, binary = path_binary.rsplit(\u001b[38;5;130m'/'\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\u001b[5;64H'/'\u001b[39m \u001b[33min\u001b[39m path_binary \u001b[33melse\u001b[39m (\u001b[38;5;130m''\u001b[39m, path_binary)\u001b[K\u001b[6;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[7;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[8;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: repo,\u001b[K\u001b[9;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[10;64H\u001b[16X\u001b[16C}\u001b[K\u001b[11;64H\u001b[12X\u001b[33m\u001b[12Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[K\u001b[12;64H\u001b[16X\u001b[16Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[K\u001b[13;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[14;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[15;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[16;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[17;64H\u001b[16X\u001b[16C}\u001b[K\u001b[18;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m binary_dict\u001b[K\u001b[20;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_scores\u001b(B\u001b[m(log_file, binary_dict):\u001b[K\u001b[22;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Loads scores from the popularity contest log into the \u001b[23;64Hbinary dictionary.\"\"\"\u001b[39m\u001b[K\u001b[24;64H\u001b[4X\u001b[33m\u001b[4Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(log_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[25;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[26;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[27;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[28;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[29;64H\u001b[43X\u001b[43C41,1\u001b[10X\u001b[10C24%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[35.520405, "o", "\u001b[?25l\u001b[1d\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[2;64H\u001b[16X\u001b[16Cpath_binary, repo = parts\u001b[K\u001b[3;64H\u001b[16X\u001b[16Cpath, binary = path_binary.rsplit(\u001b[38;5;130m'/'\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\u001b[4;64H'/'\u001b[39m \u001b[33min\u001b[39m path_binary \u001b[33melse\u001b[39m (\u001b[38;5;130m''\u001b[39m, path_binary)\u001b[K\u001b[5;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[6;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[7;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: repo,\u001b[K\u001b[8;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[9;64H\u001b[16X\u001b[16C}\u001b[K\u001b[10;64H\u001b[12X\u001b[33m\u001b[12Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[K\u001b[11;64H\u001b[16X\u001b[16Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[K\u001b[12;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[13;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[14;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[15;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[16;64H\u001b[16X\u001b[16C}\u001b[K\u001b[17;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m binary_dict\u001b[K\u001b[19;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_scores\u001b(B\u001b[m(log_file, binary_dict):\u001b[K\u001b[21;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Loads scores from the popularity contest log into the \u001b[22;64Hbinary dictionary.\"\"\"\u001b[39m\u001b[K\u001b[23;64H\u001b[4X\u001b[33m\u001b[4Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(log_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[24;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[25;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[26;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[27;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[28;64H\u001b[K\n\u001b[43X\u001b[43C42,0-1\u001b[8X\u001b[8C25%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[35.561491, "o", "\u001b[?25l\u001b[1d\u001b[16X\u001b[16Cpath_binary, repo = parts\u001b[K\u001b[2;64H\u001b[16X\u001b[16Cpath, binary = path_binary.rsplit(\u001b[38;5;130m'/'\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\u001b[3;64H'/'\u001b[39m \u001b[33min\u001b[39m path_binary \u001b[33melse\u001b[39m (\u001b[38;5;130m''\u001b[39m, path_binary)\u001b[K\u001b[4;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[5;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[6;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: repo,\u001b[K\u001b[7;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[8;64H\u001b[16X\u001b[16C}\u001b[K\u001b[9;64H\u001b[12X\u001b[33m\u001b[12Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[K\u001b[10;64H\u001b[16X\u001b[16Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[K\u001b[11;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[12;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[13;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[14;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[15;64H\u001b[16X\u001b[16C}\u001b[K\u001b[16;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m binary_dict\u001b[K\u001b[18;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_scores\u001b(B\u001b[m(log_file, binary_dict):\u001b[K\u001b[20;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Loads scores from the popularity contest log into the \u001b[21;64Hbinary dictionary.\"\"\"\u001b[39m\u001b[K\u001b[22;64H\u001b[4X\u001b[33m\u001b[4Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(log_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[23;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[24;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[25;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[26;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[27;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[29;64H\u001b[43X\u001b[43C43,1\u001b[10X\u001b[10C27%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[35.582292, "o", "\u001b[?25l\u001b[1d\u001b[16X\u001b[16Cpath, binary = path_binary.rsplit(\u001b[38;5;130m'/'\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\u001b[2;64H'/'\u001b[39m \u001b[33min\u001b[39m path_binary \u001b[33melse\u001b[39m (\u001b[38;5;130m''\u001b[39m, path_binary)\u001b[K\u001b[3;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[4;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[5;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: repo,\u001b[K\u001b[6;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[7;64H\u001b[16X\u001b[16C}\u001b[K\u001b[8;64H\u001b[12X\u001b[33m\u001b[12Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[K\u001b[9;64H\u001b[16X\u001b[16Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[K\u001b[10;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[11;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[12;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[13;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[14;64H\u001b[16X\u001b[16C}\u001b[K\u001b[15;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m binary_dict\u001b[K\u001b[17;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_scores\u001b(B\u001b[m(log_file, binary_dict):\u001b[K\u001b[19;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Loads scores from the popularity contest log into the \u001b[20;64Hbinary dictionary.\"\"\"\u001b[39m\u001b[K\u001b[21;64H\u001b[4X\u001b[33m\u001b[4Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(log_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[22;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[23;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[24;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[25;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[26;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[28;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[29;64H\u001b[43X\u001b[43C44,1\u001b[10X\u001b[10C29%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[35.624677, "o", "\u001b[?25l\u001b[1d\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[2;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[3;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: repo,\u001b[K\u001b[4;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[5;64H\u001b[16X\u001b[16C}\u001b[K\u001b[6;64H\u001b[12X\u001b[33m\u001b[12Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[K\u001b[7;64H\u001b[16X\u001b[16Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[K\u001b[8;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[9;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[10;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[11;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[12;64H\u001b[16X\u001b[16C}\u001b[K\u001b[13;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m binary_dict\u001b[K\u001b[15;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_scores\u001b(B\u001b[m(log_file, binary_dict):\u001b[K\u001b[17;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Loads scores from the popularity contest log into the \u001b[18;64Hbinary dictionary.\"\"\"\u001b[39m\u001b[K\u001b[19;64H\u001b[4X\u001b[33m\u001b[4Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(log_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[20;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[21;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[22;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[23;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[24;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[26;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[27;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[28;64H\u001b[K\n\u001b[43X\u001b[43C45,1\u001b[10X\u001b[10C31%\u001b[K\u001b[?12l\u001b[?25h\u001b[27;64H"]
[35.644085, "o", "\u001b[29;108H6,0-1\u001b[28;64H"]
[35.684991, "o", "\u001b[?25l\u001b[1d\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[2;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: repo,\u001b[K\u001b[3;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[4;64H\u001b[16X\u001b[16C}\u001b[K\u001b[5;64H\u001b[12X\u001b[33m\u001b[12Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[K\u001b[6;64H\u001b[16X\u001b[16Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[K\u001b[7;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[8;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[9;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[10;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[11;64H\u001b[16X\u001b[16C}\u001b[K\u001b[12;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m binary_dict\u001b[K\u001b[14;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_scores\u001b(B\u001b[m(log_file, binary_dict):\u001b[K\u001b[16;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Loads scores from the popularity contest log into the \u001b[17;64Hbinary dictionary.\"\"\"\u001b[39m\u001b[K\u001b[18;64H\u001b[4X\u001b[33m\u001b[4Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(log_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[19;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[20;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[21;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[22;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[23;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[25;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[26;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[27;64H\u001b[K\n\u001b[12X\u001b[12Cscore, binary = parts\u001b[K\u001b[29;64H\u001b[43X\u001b[43C47,1\u001b[10X\u001b[10C32%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[35.705883, "o", "\u001b[?25l\u001b[1d\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: repo,\u001b[K\u001b[2;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[3;64H\u001b[16X\u001b[16C}\u001b[K\u001b[4;64H\u001b[12X\u001b[33m\u001b[12Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[K\u001b[5;64H\u001b[16X\u001b[16Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[K\u001b[6;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[7;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[8;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[9;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[10;64H\u001b[16X\u001b[16C}\u001b[K\u001b[11;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m binary_dict\u001b[K\u001b[13;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_scores\u001b(B\u001b[m(log_file, binary_dict):\u001b[K\u001b[15;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Loads scores from the popularity contest log into the \u001b[16;64Hbinary dictionary.\"\"\"\u001b[39m\u001b[K\u001b[17;64H\u001b[4X\u001b[33m\u001b[4Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(log_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[18;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[19;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[20;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[21;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[22;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[24;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[25;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[26;64H\u001b[K\n\u001b[12X\u001b[12Cscore, binary = parts\u001b[K\u001b[28;64H\u001b[12X\u001b[33m\u001b[12Ctry\u001b[39m:\u001b[K\u001b[29;64H\u001b[43X\u001b[43C48,1\u001b[10X\u001b[10C34%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[35.749537, "o", "\u001b[?25l\u001b[1d\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[2;64H\u001b[16X\u001b[16C}\u001b[K\u001b[3;64H\u001b[12X\u001b[33m\u001b[12Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[K\u001b[4;64H\u001b[16X\u001b[16Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[K\u001b[5;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[6;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[7;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[8;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[9;64H\u001b[16X\u001b[16C}\u001b[K\u001b[10;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m binary_dict\u001b[K\u001b[12;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_scores\u001b(B\u001b[m(log_file, binary_dict):\u001b[K\u001b[14;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Loads scores from the popularity contest log into the \u001b[15;64Hbinary dictionary.\"\"\"\u001b[39m\u001b[K\u001b[16;64H\u001b[4X\u001b[33m\u001b[4Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(log_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[17;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[18;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[19;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[20;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[21;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[23;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[24;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[25;64H\u001b[K\n\u001b[12X\u001b[12Cscore, binary = parts\u001b[K\u001b[27;64H\u001b[12X\u001b[33m\u001b[12Ctry\u001b[39m:\u001b[K\u001b[28;64H\u001b[16X\u001b[16Cscore = \u001b[36m\u001b[1mint\u001b(B\u001b[m(score)\u001b[K\u001b[29;64H\u001b[43X\u001b[43C49,1\u001b[10X\u001b[10C36%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[35.769827, "o", "\u001b[?25l\u001b[1d\u001b[16X\u001b[16C}\u001b[K\u001b[2;64H\u001b[12X\u001b[33m\u001b[12Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[K\u001b[3;64H\u001b[16X\u001b[16Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[K\u001b[4;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[5;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[6;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[7;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[8;64H\u001b[16X\u001b[16C}\u001b[K\u001b[9;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m binary_dict\u001b[K\u001b[11;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_scores\u001b(B\u001b[m(log_file, binary_dict):\u001b[K\u001b[13;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Loads scores from the popularity contest log into the \u001b[14;64Hbinary dictionary.\"\"\"\u001b[39m\u001b[K\u001b[15;64H\u001b[4X\u001b[33m\u001b[4Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(log_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[16;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[17;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[18;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[19;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[20;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[22;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[23;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[24;64H\u001b[K\n\u001b[12X\u001b[12Cscore, binary = parts\u001b[K\u001b[26;64H\u001b[12X\u001b[33m\u001b[12Ctry\u001b[39m:\u001b[K\u001b[27;64H\u001b[16X\u001b[16Cscore = \u001b[36m\u001b[1mint\u001b(B\u001b[m(score)\u001b[K\u001b[28;64H\u001b[16X\u001b[33m\u001b[16Cif\u001b[39m binary \u001b[33min\u001b[39m binary_dict:\u001b[K\u001b[29;64H\u001b[43X\u001b[43C50,1\u001b[10X\u001b[10C37%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[35.792146, "o", "\u001b[?25l\u001b[1d\u001b[12X\u001b[33m\u001b[12Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[K\u001b[2;64H\u001b[16X\u001b[16Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[K\u001b[3;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[4;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[5;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[6;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[7;64H\u001b[16X\u001b[16C}\u001b[K\u001b[8;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m binary_dict\u001b[K\u001b[10;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_scores\u001b(B\u001b[m(log_file, binary_dict):\u001b[K\u001b[12;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Loads scores from the popularity contest log into the \u001b[13;64Hbinary dictionary.\"\"\"\u001b[39m\u001b[K\u001b[14;64H\u001b[4X\u001b[33m\u001b[4Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(log_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[15;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[16;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[17;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[18;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[19;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[21;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[22;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[23;64H\u001b[K\n\u001b[12X\u001b[12Cscore, binary = parts\u001b[K\u001b[25;64H\u001b[12X\u001b[33m\u001b[12Ctry\u001b[39m:\u001b[K\u001b[26;64H\u001b[16X\u001b[16Cscore = \u001b[36m\u001b[1mint\u001b(B\u001b[m(score)\u001b[K\u001b[27;64H\u001b[16X\u001b[33m\u001b[16Cif\u001b[39m binary \u001b[33min\u001b[39m binary_dict:\u001b[K\u001b[28;64H\u001b[20X\u001b[20Cbinary_dict[binary][\u001b[38;5;130m\"score\"\u001b[39m] += score\u001b[K\u001b[29;64H\u001b[43X\u001b[43C51,1\u001b[10X\u001b[10C39%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[35.835778, "o", "\u001b[?25l\u001b[1d\u001b[16X\u001b[16Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[K\u001b[2;64H\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[3;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[4;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[5;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[6;64H\u001b[16X\u001b[16C}\u001b[K\u001b[7;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m binary_dict\u001b[K\u001b[9;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_scores\u001b(B\u001b[m(log_file, binary_dict):\u001b[K\u001b[11;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Loads scores from the popularity contest log into the \u001b[12;64Hbinary dictionary.\"\"\"\u001b[39m\u001b[K\u001b[13;64H\u001b[4X\u001b[33m\u001b[4Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(log_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[14;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[15;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[16;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[17;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[18;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[20;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[21;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[22;64H\u001b[K\n\u001b[12X\u001b[12Cscore, binary = parts\u001b[K\u001b[24;64H\u001b[12X\u001b[33m\u001b[12Ctry\u001b[39m:\u001b[K\u001b[25;64H\u001b[16X\u001b[16Cscore = \u001b[36m\u001b[1mint\u001b(B\u001b[m(score)\u001b[K\u001b[26;64H\u001b[16X\u001b[33m\u001b[16Cif\u001b[39m binary \u001b[33min\u001b[39m binary_dict:\u001b[K\u001b[27;64H\u001b[20X\u001b[20Cbinary_dict[binary][\u001b[38;5;130m\"score\"\u001b[39m] += score\u001b[K\u001b[28;64H\u001b[12X\u001b[33m\u001b[12Cexcept\u001b[39m \u001b[32mValueError\u001b[39m:\u001b[K\u001b[29;64H\u001b[43X\u001b[43C52,1\u001b[10X\u001b[10C40%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[35.852001, "o", "\u001b[?25l\u001b[1d\u001b[16X\u001b[16Cbinary_dict[binary] = {\u001b[K\u001b[2;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[3;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[4;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[5;64H\u001b[16X\u001b[16C}\u001b[K\u001b[6;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m binary_dict\u001b[K\u001b[8;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_scores\u001b(B\u001b[m(log_file, binary_dict):\u001b[K\u001b[10;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Loads scores from the popularity contest log into the \u001b[11;64Hbinary dictionary.\"\"\"\u001b[39m\u001b[K\u001b[12;64H\u001b[4X\u001b[33m\u001b[4Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(log_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[13;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[14;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[15;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[16;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[17;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[19;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[20;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[21;64H\u001b[K\n\u001b[12X\u001b[12Cscore, binary = parts\u001b[K\u001b[23;64H\u001b[12X\u001b[33m\u001b[12Ctry\u001b[39m:\u001b[K\u001b[24;64H\u001b[16X\u001b[16Cscore = \u001b[36m\u001b[1mint\u001b(B\u001b[m(score)\u001b[K\u001b[25;64H\u001b[16X\u001b[33m\u001b[16Cif\u001b[39m binary \u001b[33min\u001b[39m binary_dict:\u001b[K\u001b[26;64H\u001b[20X\u001b[20Cbinary_dict[binary][\u001b[38;5;130m\"score\"\u001b[39m] += score\u001b[K\u001b[27;64H\u001b[12X\u001b[33m\u001b[12Cexcept\u001b[39m \u001b[32mValueError\u001b[39m:\u001b[K\u001b[28;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[29;64H\u001b[43X\u001b[43C53,1\u001b[10X\u001b[10C42%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[35.893155, "o", "\u001b[?25l\u001b[1d\u001b[20X\u001b[38;5;130m\u001b[20C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[2;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[3;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[4;64H\u001b[16X\u001b[16C}\u001b[K\u001b[5;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m binary_dict\u001b[K\u001b[7;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_scores\u001b(B\u001b[m(log_file, binary_dict):\u001b[K\u001b[9;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Loads scores from the popularity contest log into the \u001b[10;64Hbinary dictionary.\"\"\"\u001b[39m\u001b[K\u001b[11;64H\u001b[4X\u001b[33m\u001b[4Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(log_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[12;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[13;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[14;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[15;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[16;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[18;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[19;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[20;64H\u001b[K\n\u001b[12X\u001b[12Cscore, binary = parts\u001b[K\u001b[22;64H\u001b[12X\u001b[33m\u001b[12Ctry\u001b[39m:\u001b[K\u001b[23;64H\u001b[16X\u001b[16Cscore = \u001b[36m\u001b[1mint\u001b(B\u001b[m(score)\u001b[K\u001b[24;64H\u001b[16X\u001b[33m\u001b[16Cif\u001b[39m binary \u001b[33min\u001b[39m binary_dict:\u001b[K\u001b[25;64H\u001b[20X\u001b[20Cbinary_dict[binary][\u001b[38;5;130m\"score\"\u001b[39m] += score\u001b[K\u001b[26;64H\u001b[12X\u001b[33m\u001b[12Cexcept\u001b[39m \u001b[32mValueError\u001b[39m:\u001b[K\u001b[27;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[28;64H\u001b[K\n\u001b[43X\u001b[43C54,0-1\u001b[8X\u001b[8C44%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[35.914892, "o", "\u001b[?25l\u001b[1d\u001b[20X\u001b[38;5;130m\u001b[20C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[K\u001b[2;64H\u001b[20X\u001b[38;5;130m\u001b[20C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m  \u001b[36m# Default score\u001b[39m\u001b[K\u001b[3;64H\u001b[16X\u001b[16C}\u001b[K\u001b[4;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m binary_dict\u001b[K\u001b[6;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_scores\u001b(B\u001b[m(log_file, binary_dict):\u001b[K\u001b[8;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Loads scores from the popularity contest log into the \u001b[9;64Hbinary dictionary.\"\"\"\u001b[39m\u001b[K\u001b[10;64H\u001b[4X\u001b[33m\u001b[4Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(log_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[11;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[12;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[13;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[14;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[15;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[17;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[18;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[19;64H\u001b[K\n\u001b[12X\u001b[12Cscore, binary = parts\u001b[K\u001b[21;64H\u001b[12X\u001b[33m\u001b[12Ctry\u001b[39m:\u001b[K\u001b[22;64H\u001b[16X\u001b[16Cscore = \u001b[36m\u001b[1mint\u001b(B\u001b[m(score)\u001b[K\u001b[23;64H\u001b[16X\u001b[33m\u001b[16Cif\u001b[39m binary \u001b[33min\u001b[39m binary_dict:\u001b[K\u001b[24;64H\u001b[20X\u001b[20Cbinary_dict[binary][\u001b[38;5;130m\"score\"\u001b[39m] += score\u001b[K\u001b[25;64H\u001b[12X\u001b[33m\u001b[12Cexcept\u001b[39m \u001b[32mValueError\u001b[39m:\u001b[K\u001b[26;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[27;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mbuild_package_scores\u001b(B\u001b[m(binary_dict):\u001b[K\u001b[29;64H\u001b[43X\u001b[43C55,1\u001b[10X\u001b[10C45%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[35.957285, "o", "\u001b[?25l\u001b[1d\u001b[16X\u001b[16C}\u001b[K\u001b[2;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m binary_dict\u001b[K\u001b[4;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_scores\u001b(B\u001b[m(log_file, binary_dict):\u001b[K\u001b[6;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Loads scores from the popularity contest log into the \u001b[7;64Hbinary dictionary.\"\"\"\u001b[39m\u001b[K\u001b[8;64H\u001b[4X\u001b[33m\u001b[4Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(log_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[9;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[10;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[11;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[12;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[13;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[15;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[16;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[17;64H\u001b[K\n\u001b[12X\u001b[12Cscore, binary = parts\u001b[K\u001b[19;64H\u001b[12X\u001b[33m\u001b[12Ctry\u001b[39m:\u001b[K\u001b[20;64H\u001b[16X\u001b[16Cscore = \u001b[36m\u001b[1mint\u001b(B\u001b[m(score)\u001b[K\u001b[21;64H\u001b[16X\u001b[33m\u001b[16Cif\u001b[39m binary \u001b[33min\u001b[39m binary_dict:\u001b[K\u001b[22;64H\u001b[20X\u001b[20Cbinary_dict[binary][\u001b[38;5;130m\"score\"\u001b[39m] += score\u001b[K\u001b[23;64H\u001b[12X\u001b[33m\u001b[12Cexcept\u001b[39m \u001b[32mValueError\u001b[39m:\u001b[K\u001b[24;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[25;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mbuild_package_scores\u001b(B\u001b[m(binary_dict):\u001b[K\u001b[27;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Builds a dictionary of package scores from the binary \u001b[28;64Hdictionary.\"\"\"\u001b[39m\u001b[K\u001b[29;64H\u001b[43X\u001b[43C56,1\u001b[10X\u001b[10C48%\u001b[K\u001b[?12l\u001b[?25h\u001b[27;64H"]
[35.977292, "o", "\u001b[?25l\u001b[1d\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m binary_dict\u001b[K\u001b[3;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_scores\u001b(B\u001b[m(log_file, binary_dict):\u001b[K\u001b[5;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Loads scores from the popularity contest log into the \u001b[6;64Hbinary dictionary.\"\"\"\u001b[39m\u001b[K\u001b[7;64H\u001b[4X\u001b[33m\u001b[4Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(log_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[8;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[9;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[10;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[11;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[12;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[14;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[15;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[16;64H\u001b[K\n\u001b[12X\u001b[12Cscore, binary = parts\u001b[K\u001b[18;64H\u001b[12X\u001b[33m\u001b[12Ctry\u001b[39m:\u001b[K\u001b[19;64H\u001b[16X\u001b[16Cscore = \u001b[36m\u001b[1mint\u001b(B\u001b[m(score)\u001b[K\u001b[20;64H\u001b[16X\u001b[33m\u001b[16Cif\u001b[39m binary \u001b[33min\u001b[39m binary_dict:\u001b[K\u001b[21;64H\u001b[20X\u001b[20Cbinary_dict[binary][\u001b[38;5;130m\"score\"\u001b[39m] += score\u001b[K\u001b[22;64H\u001b[12X\u001b[33m\u001b[12Cexcept\u001b[39m \u001b[32mValueError\u001b[39m:\u001b[K\u001b[23;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[24;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mbuild_package_scores\u001b(B\u001b[m(binary_dict):\u001b[K\u001b[26;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Builds a dictionary of package scores from the binary \u001b[27;64Hdictionary.\"\"\"\u001b[39m\u001b[K\u001b[28;64H\u001b[4X\u001b[4Cpackage_scores = {}\u001b[K\u001b[29;64H\u001b[43X\u001b[43C57,1\u001b[10X\u001b[10C50%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[36.018228, "o", "\u001b[?25l\u001b[1d\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m binary_dict\u001b[K\u001b[2;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_scores\u001b(B\u001b[m(log_file, binary_dict):\u001b[K\u001b[4;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Loads scores from the popularity contest log into the \u001b[5;64Hbinary dictionary.\"\"\"\u001b[39m\u001b[K\u001b[6;64H\u001b[4X\u001b[33m\u001b[4Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(log_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[7;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[8;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[9;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[10;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[11;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[13;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[14;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[15;64H\u001b[K\n\u001b[12X\u001b[12Cscore, binary = parts\u001b[K\u001b[17;64H\u001b[12X\u001b[33m\u001b[12Ctry\u001b[39m:\u001b[K\u001b[18;64H\u001b[16X\u001b[16Cscore = \u001b[36m\u001b[1mint\u001b(B\u001b[m(score)\u001b[K\u001b[19;64H\u001b[16X\u001b[33m\u001b[16Cif\u001b[39m binary \u001b[33min\u001b[39m binary_dict:\u001b[K\u001b[20;64H\u001b[20X\u001b[20Cbinary_dict[binary][\u001b[38;5;130m\"score\"\u001b[39m] += score\u001b[K\u001b[21;64H\u001b[12X\u001b[33m\u001b[12Cexcept\u001b[39m \u001b[32mValueError\u001b[39m:\u001b[K\u001b[22;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[23;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mbuild_package_scores\u001b(B\u001b[m(binary_dict):\u001b[K\u001b[25;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Builds a dictionary of package scores from the binary \u001b[26;64Hdictionary.\"\"\"\u001b[39m\u001b[K\u001b[27;64H\u001b[4X\u001b[4Cpackage_scores = {}\u001b[K\u001b[28;64H\u001b[K\n\u001b[43X\u001b[43C58,0-1\u001b[8X\u001b[8C51%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[36.038619, "o", "\u001b[?25l\u001b[1d\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_scores\u001b(B\u001b[m(log_file, binary_dict):\u001b[K\u001b[3;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Loads scores from the popularity contest log into the \u001b[4;64Hbinary dictionary.\"\"\"\u001b[39m\u001b[K\u001b[5;64H\u001b[4X\u001b[33m\u001b[4Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(log_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[6;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[7;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[8;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[9;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[10;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[12;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[13;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[14;64H\u001b[K\n\u001b[12X\u001b[12Cscore, binary = parts\u001b[K\u001b[16;64H\u001b[12X\u001b[33m\u001b[12Ctry\u001b[39m:\u001b[K\u001b[17;64H\u001b[16X\u001b[16Cscore = \u001b[36m\u001b[1mint\u001b(B\u001b[m(score)\u001b[K\u001b[18;64H\u001b[16X\u001b[33m\u001b[16Cif\u001b[39m binary \u001b[33min\u001b[39m binary_dict:\u001b[K\u001b[19;64H\u001b[20X\u001b[20Cbinary_dict[binary][\u001b[38;5;130m\"score\"\u001b[39m] += score\u001b[K\u001b[20;64H\u001b[12X\u001b[33m\u001b[12Cexcept\u001b[39m \u001b[32mValueError\u001b[39m:\u001b[K\u001b[21;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[22;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mbuild_package_scores\u001b(B\u001b[m(binary_dict):\u001b[K\u001b[24;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Builds a dictionary of package scores from the binary \u001b[25;64Hdictionary.\"\"\"\u001b[39m\u001b[K\u001b[26;64H\u001b[4X\u001b[4Cpackage_scores = {}\u001b[K\u001b[27;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Cfor\u001b[39m binary, data \u001b[33min\u001b[39m binary_dict.items():\u001b[K\u001b[29;64H\u001b[43X\u001b[43C59,1\u001b[10X\u001b[10C53%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[36.059423, "o", "\u001b[?25l\u001b[33m\u001b[1ddef\u001b[39m \u001b[36m\u001b[1mload_scores\u001b(B\u001b[m(log_file, binary_dict):\u001b[K\u001b[2;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Loads scores from the popularity contest log into the \u001b[3;64Hbinary dictionary.\"\"\"\u001b[39m\u001b[K\u001b[4;64H\u001b[4X\u001b[33m\u001b[4Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(log_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[5;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[6;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[7;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[8;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[9;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[11;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[12;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[13;64H\u001b[K\n\u001b[12X\u001b[12Cscore, binary = parts\u001b[K\u001b[15;64H\u001b[12X\u001b[33m\u001b[12Ctry\u001b[39m:\u001b[K\u001b[16;64H\u001b[16X\u001b[16Cscore = \u001b[36m\u001b[1mint\u001b(B\u001b[m(score)\u001b[K\u001b[17;64H\u001b[16X\u001b[33m\u001b[16Cif\u001b[39m binary \u001b[33min\u001b[39m binary_dict:\u001b[K\u001b[18;64H\u001b[20X\u001b[20Cbinary_dict[binary][\u001b[38;5;130m\"score\"\u001b[39m] += score\u001b[K\u001b[19;64H\u001b[12X\u001b[33m\u001b[12Cexcept\u001b[39m \u001b[32mValueError\u001b[39m:\u001b[K\u001b[20;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[21;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mbuild_package_scores\u001b(B\u001b[m(binary_dict):\u001b[K\u001b[23;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Builds a dictionary of package scores from the binary \u001b[24;64Hdictionary.\"\"\"\u001b[39m\u001b[K\u001b[25;64H\u001b[4X\u001b[4Cpackage_scores = {}\u001b[K\u001b[26;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Cfor\u001b[39m binary, data \u001b[33min\u001b[39m binary_dict.items():\u001b[K\u001b[28;64H\u001b[8X\u001b[8Crepo = data.get(\u001b[38;5;130m\"repo\"\u001b[39m)\u001b[K\u001b[29;64H\u001b[43X\u001b[43C60,1\u001b[10X\u001b[10C54%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[36.100785, "o", "\u001b[?25l\u001b[1d\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Loads scores from the popularity contest log into the \u001b[2;64Hbinary dictionary.\"\"\"\u001b[39m\u001b[K\u001b[3;64H\u001b[4X\u001b[33m\u001b[4Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(log_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[4;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[5;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[6;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[7;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[8;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[10;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[11;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[12;64H\u001b[K\n\u001b[12X\u001b[12Cscore, binary = parts\u001b[K\u001b[14;64H\u001b[12X\u001b[33m\u001b[12Ctry\u001b[39m:\u001b[K\u001b[15;64H\u001b[16X\u001b[16Cscore = \u001b[36m\u001b[1mint\u001b(B\u001b[m(score)\u001b[K\u001b[16;64H\u001b[16X\u001b[33m\u001b[16Cif\u001b[39m binary \u001b[33min\u001b[39m binary_dict:\u001b[K\u001b[17;64H\u001b[20X\u001b[20Cbinary_dict[binary][\u001b[38;5;130m\"score\"\u001b[39m] += score\u001b[K\u001b[18;64H\u001b[12X\u001b[33m\u001b[12Cexcept\u001b[39m \u001b[32mValueError\u001b[39m:\u001b[K\u001b[19;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[20;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mbuild_package_scores\u001b(B\u001b[m(binary_dict):\u001b[K\u001b[22;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Builds a dictionary of package scores from the binary \u001b[23;64Hdictionary.\"\"\"\u001b[39m\u001b[K\u001b[24;64H\u001b[4X\u001b[4Cpackage_scores = {}\u001b[K\u001b[25;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Cfor\u001b[39m binary, data \u001b[33min\u001b[39m binary_dict.items():\u001b[K\u001b[27;64H\u001b[8X\u001b[8Crepo = data.get(\u001b[38;5;130m\"repo\"\u001b[39m)\u001b[K\u001b[28;64H\u001b[8X\u001b[33m\u001b[8Cif\u001b[39m \u001b[33mnot\u001b[39m repo:\u001b[K\u001b[29;64H\u001b[43X\u001b[43C61,1\u001b[10X\u001b[10C56%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[36.120932, "o", "\u001b[?25l\u001b[1d\u001b[4X\u001b[33m\u001b[4Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(log_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[2;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[3;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[4;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[5;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[6;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[8;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[9;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[10;64H\u001b[K\n\u001b[12X\u001b[12Cscore, binary = parts\u001b[K\u001b[12;64H\u001b[12X\u001b[33m\u001b[12Ctry\u001b[39m:\u001b[K\u001b[13;64H\u001b[16X\u001b[16Cscore = \u001b[36m\u001b[1mint\u001b(B\u001b[m(score)\u001b[K\u001b[14;64H\u001b[16X\u001b[33m\u001b[16Cif\u001b[39m binary \u001b[33min\u001b[39m binary_dict:\u001b[K\u001b[15;64H\u001b[20X\u001b[20Cbinary_dict[binary][\u001b[38;5;130m\"score\"\u001b[39m] += score\u001b[K\u001b[16;64H\u001b[12X\u001b[33m\u001b[12Cexcept\u001b[39m \u001b[32mValueError\u001b[39m:\u001b[K\u001b[17;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[18;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mbuild_package_scores\u001b(B\u001b[m(binary_dict):\u001b[K\u001b[20;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Builds a dictionary of package scores from the binary \u001b[21;64Hdictionary.\"\"\"\u001b[39m\u001b[K\u001b[22;64H\u001b[4X\u001b[4Cpackage_scores = {}\u001b[K\u001b[23;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Cfor\u001b[39m binary, data \u001b[33min\u001b[39m binary_dict.items():\u001b[K\u001b[25;64H\u001b[8X\u001b[8Crepo = data.get(\u001b[38;5;130m\"repo\"\u001b[39m)\u001b[K\u001b[26;64H\u001b[8X\u001b[33m\u001b[8Cif\u001b[39m \u001b[33mnot\u001b[39m repo:\u001b[K\u001b[27;64H\u001b[12X\u001b[33m\u001b[12Ccontinue\u001b[39m\u001b[K\u001b[28;64H\u001b[K\n\u001b[43X\u001b[43C62,1\u001b[10X\u001b[10C59%\u001b[K\u001b[?12l\u001b[?25h\u001b[27;64H"]
[36.162316, "o", "\u001b[29;108H3,0-1\u001b[28;64H"]
[36.183917, "o", "\u001b[?25l\u001b[1d\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[2;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[3;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[4;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[6;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[7;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[8;64H\u001b[K\n\u001b[12X\u001b[12Cscore, binary = parts\u001b[K\u001b[10;64H\u001b[12X\u001b[33m\u001b[12Ctry\u001b[39m:\u001b[K\u001b[11;64H\u001b[16X\u001b[16Cscore = \u001b[36m\u001b[1mint\u001b(B\u001b[m(score)\u001b[K\u001b[12;64H\u001b[16X\u001b[33m\u001b[16Cif\u001b[39m binary \u001b[33min\u001b[39m binary_dict:\u001b[K\u001b[13;64H\u001b[20X\u001b[20Cbinary_dict[binary][\u001b[38;5;130m\"score\"\u001b[39m] += score\u001b[K\u001b[14;64H\u001b[12X\u001b[33m\u001b[12Cexcept\u001b[39m \u001b[32mValueError\u001b[39m:\u001b[K\u001b[15;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[16;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mbuild_package_scores\u001b(B\u001b[m(binary_dict):\u001b[K\u001b[18;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Builds a dictionary of package scores from the binary \u001b[19;64Hdictionary.\"\"\"\u001b[39m\u001b[K\u001b[20;64H\u001b[4X\u001b[4Cpackage_scores = {}\u001b[K\u001b[21;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Cfor\u001b[39m binary, data \u001b[33min\u001b[39m binary_dict.items():\u001b[K\u001b[23;64H\u001b[8X\u001b[8Crepo = data.get(\u001b[38;5;130m\"repo\"\u001b[39m)\u001b[K\u001b[24;64H\u001b[8X\u001b[33m\u001b[8Cif\u001b[39m \u001b[33mnot\u001b[39m repo:\u001b[K\u001b[25;64H\u001b[12X\u001b[33m\u001b[12Ccontinue\u001b[39m\u001b[K\u001b[26;64H\u001b[K\n\u001b[8X\u001b[8Cpackage = repo.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]  \u001b[36m# Take the rightmost p\u001b[28;64Hart of the repo path\u001b[39m\u001b[K\u001b[29;64H\u001b[43X\u001b[43C64,1\u001b[10X\u001b[10C61%\u001b[K\u001b[?12l\u001b[?25h\u001b[27;64H"]
[36.226987, "o", "\u001b[?25l\u001b[1d\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[2;64H\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[4;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[5;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[6;64H\u001b[K\n\u001b[12X\u001b[12Cscore, binary = parts\u001b[K\u001b[8;64H\u001b[12X\u001b[33m\u001b[12Ctry\u001b[39m:\u001b[K\u001b[9;64H\u001b[16X\u001b[16Cscore = \u001b[36m\u001b[1mint\u001b(B\u001b[m(score)\u001b[K\u001b[10;64H\u001b[16X\u001b[33m\u001b[16Cif\u001b[39m binary \u001b[33min\u001b[39m binary_dict:\u001b[K\u001b[11;64H\u001b[20X\u001b[20Cbinary_dict[binary][\u001b[38;5;130m\"score\"\u001b[39m] += score\u001b[K\u001b[12;64H\u001b[12X\u001b[33m\u001b[12Cexcept\u001b[39m \u001b[32mValueError\u001b[39m:\u001b[K\u001b[13;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[14;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mbuild_package_scores\u001b(B\u001b[m(binary_dict):\u001b[K\u001b[16;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Builds a dictionary of package scores from the binary \u001b[17;64Hdictionary.\"\"\"\u001b[39m\u001b[K\u001b[18;64H\u001b[4X\u001b[4Cpackage_scores = {}\u001b[K\u001b[19;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Cfor\u001b[39m binary, data \u001b[33min\u001b[39m binary_dict.items():\u001b[K\u001b[21;64H\u001b[8X\u001b[8Crepo = data.get(\u001b[38;5;130m\"repo\"\u001b[39m)\u001b[K\u001b[22;64H\u001b[8X\u001b[33m\u001b[8Cif\u001b[39m \u001b[33mnot\u001b[39m repo:\u001b[K\u001b[23;64H\u001b[12X\u001b[33m\u001b[12Ccontinue\u001b[39m\u001b[K\u001b[24;64H\u001b[K\n\u001b[8X\u001b[8Cpackage = repo.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]  \u001b[36m# Take the rightmost p\u001b[26;64Hart of the repo path\u001b[39m\u001b[K\u001b[27;64H\u001b[8X\u001b[8Cpackage_scores[package] = package_scores.get(package,\u001b[28;64H \u001b[38;5;130m0\u001b[39m) + data[\u001b[38;5;130m\"score\"\u001b[39m]\u001b[K\u001b[29;64H\u001b[43X\u001b[43C65,1\u001b[10X\u001b[10C63%\u001b[K\u001b[?12l\u001b[?25h\u001b[27;64H"]
[36.24805, "o", "\u001b[?25l\u001b[1d\u001b[K\n\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[3;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[4;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[5;64H\u001b[K\n\u001b[12X\u001b[12Cscore, binary = parts\u001b[K\u001b[7;64H\u001b[12X\u001b[33m\u001b[12Ctry\u001b[39m:\u001b[K\u001b[8;64H\u001b[16X\u001b[16Cscore = \u001b[36m\u001b[1mint\u001b(B\u001b[m(score)\u001b[K\u001b[9;64H\u001b[16X\u001b[33m\u001b[16Cif\u001b[39m binary \u001b[33min\u001b[39m binary_dict:\u001b[K\u001b[10;64H\u001b[20X\u001b[20Cbinary_dict[binary][\u001b[38;5;130m\"score\"\u001b[39m] += score\u001b[K\u001b[11;64H\u001b[12X\u001b[33m\u001b[12Cexcept\u001b[39m \u001b[32mValueError\u001b[39m:\u001b[K\u001b[12;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[13;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mbuild_package_scores\u001b(B\u001b[m(binary_dict):\u001b[K\u001b[15;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Builds a dictionary of package scores from the binary \u001b[16;64Hdictionary.\"\"\"\u001b[39m\u001b[K\u001b[17;64H\u001b[4X\u001b[4Cpackage_scores = {}\u001b[K\u001b[18;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Cfor\u001b[39m binary, data \u001b[33min\u001b[39m binary_dict.items():\u001b[K\u001b[20;64H\u001b[8X\u001b[8Crepo = data.get(\u001b[38;5;130m\"repo\"\u001b[39m)\u001b[K\u001b[21;64H\u001b[8X\u001b[33m\u001b[8Cif\u001b[39m \u001b[33mnot\u001b[39m repo:\u001b[K\u001b[22;64H\u001b[12X\u001b[33m\u001b[12Ccontinue\u001b[39m\u001b[K\u001b[23;64H\u001b[K\n\u001b[8X\u001b[8Cpackage = repo.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]  \u001b[36m# Take the rightmost p\u001b[25;64Hart of the repo path\u001b[39m\u001b[K\u001b[26;64H\u001b[8X\u001b[8Cpackage_scores[package] = package_scores.get(package,\u001b[27;64H \u001b[38;5;130m0\u001b[39m) + data[\u001b[38;5;130m\"score\"\u001b[39m]\u001b[K\u001b[28;64H\u001b[K\n\u001b[43X\u001b[43C66,0-1\u001b[8X\u001b[8C65%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[36.29062, "o", "\u001b[?25l\u001b[1d\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[2;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[3;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[4;64H\u001b[K\n\u001b[12X\u001b[12Cscore, binary = parts\u001b[K\u001b[6;64H\u001b[12X\u001b[33m\u001b[12Ctry\u001b[39m:\u001b[K\u001b[7;64H\u001b[16X\u001b[16Cscore = \u001b[36m\u001b[1mint\u001b(B\u001b[m(score)\u001b[K\u001b[8;64H\u001b[16X\u001b[33m\u001b[16Cif\u001b[39m binary \u001b[33min\u001b[39m binary_dict:\u001b[K\u001b[9;64H\u001b[20X\u001b[20Cbinary_dict[binary][\u001b[38;5;130m\"score\"\u001b[39m] += score\u001b[K\u001b[10;64H\u001b[12X\u001b[33m\u001b[12Cexcept\u001b[39m \u001b[32mValueError\u001b[39m:\u001b[K\u001b[11;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[12;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mbuild_package_scores\u001b(B\u001b[m(binary_dict):\u001b[K\u001b[14;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Builds a dictionary of package scores from the binary \u001b[15;64Hdictionary.\"\"\"\u001b[39m\u001b[K\u001b[16;64H\u001b[4X\u001b[4Cpackage_scores = {}\u001b[K\u001b[17;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Cfor\u001b[39m binary, data \u001b[33min\u001b[39m binary_dict.items():\u001b[K\u001b[19;64H\u001b[8X\u001b[8Crepo = data.get(\u001b[38;5;130m\"repo\"\u001b[39m)\u001b[K\u001b[20;64H\u001b[8X\u001b[33m\u001b[8Cif\u001b[39m \u001b[33mnot\u001b[39m repo:\u001b[K\u001b[21;64H\u001b[12X\u001b[33m\u001b[12Ccontinue\u001b[39m\u001b[K\u001b[22;64H\u001b[K\n\u001b[8X\u001b[8Cpackage = repo.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]  \u001b[36m# Take the rightmost p\u001b[24;64Hart of the repo path\u001b[39m\u001b[K\u001b[25;64H\u001b[8X\u001b[8Cpackage_scores[package] = package_scores.get(package,\u001b[26;64H \u001b[38;5;130m0\u001b[39m) + data[\u001b[38;5;130m\"score\"\u001b[39m]\u001b[K\u001b[27;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m package_scores\u001b[K\u001b[29;64H\u001b[43X\u001b[43C67,1\u001b[10X\u001b[10C66%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[36.311308, "o", "\u001b[?25l\u001b[1d\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[2;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[3;64H\u001b[K\n\u001b[12X\u001b[12Cscore, binary = parts\u001b[K\u001b[5;64H\u001b[12X\u001b[33m\u001b[12Ctry\u001b[39m:\u001b[K\u001b[6;64H\u001b[16X\u001b[16Cscore = \u001b[36m\u001b[1mint\u001b(B\u001b[m(score)\u001b[K\u001b[7;64H\u001b[16X\u001b[33m\u001b[16Cif\u001b[39m binary \u001b[33min\u001b[39m binary_dict:\u001b[K\u001b[8;64H\u001b[20X\u001b[20Cbinary_dict[binary][\u001b[38;5;130m\"score\"\u001b[39m] += score\u001b[K\u001b[9;64H\u001b[12X\u001b[33m\u001b[12Cexcept\u001b[39m \u001b[32mValueError\u001b[39m:\u001b[K\u001b[10;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[11;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mbuild_package_scores\u001b(B\u001b[m(binary_dict):\u001b[K\u001b[13;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Builds a dictionary of package scores from the binary \u001b[14;64Hdictionary.\"\"\"\u001b[39m\u001b[K\u001b[15;64H\u001b[4X\u001b[4Cpackage_scores = {}\u001b[K\u001b[16;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Cfor\u001b[39m binary, data \u001b[33min\u001b[39m binary_dict.items():\u001b[K\u001b[18;64H\u001b[8X\u001b[8Crepo = data.get(\u001b[38;5;130m\"repo\"\u001b[39m)\u001b[K\u001b[19;64H\u001b[8X\u001b[33m\u001b[8Cif\u001b[39m \u001b[33mnot\u001b[39m repo:\u001b[K\u001b[20;64H\u001b[12X\u001b[33m\u001b[12Ccontinue\u001b[39m\u001b[K\u001b[21;64H\u001b[K\n\u001b[8X\u001b[8Cpackage = repo.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]  \u001b[36m# Take the rightmost p\u001b[23;64Hart of the repo path\u001b[39m\u001b[K\u001b[24;64H\u001b[8X\u001b[8Cpackage_scores[package] = package_scores.get(package,\u001b[25;64H \u001b[38;5;130m0\u001b[39m) + data[\u001b[38;5;130m\"score\"\u001b[39m]\u001b[K\u001b[26;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m package_scores\u001b[K\u001b[28;64H\u001b[K\n\u001b[43X\u001b[43C68,0-1\u001b[8X\u001b[8C68%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[36.332975, "o", "\u001b[?25l\u001b[1d\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[2;64H\u001b[K\n\u001b[12X\u001b[12Cscore, binary = parts\u001b[K\u001b[4;64H\u001b[12X\u001b[33m\u001b[12Ctry\u001b[39m:\u001b[K\u001b[5;64H\u001b[16X\u001b[16Cscore = \u001b[36m\u001b[1mint\u001b(B\u001b[m(score)\u001b[K\u001b[6;64H\u001b[16X\u001b[33m\u001b[16Cif\u001b[39m binary \u001b[33min\u001b[39m binary_dict:\u001b[K\u001b[7;64H\u001b[20X\u001b[20Cbinary_dict[binary][\u001b[38;5;130m\"score\"\u001b[39m] += score\u001b[K\u001b[8;64H\u001b[12X\u001b[33m\u001b[12Cexcept\u001b[39m \u001b[32mValueError\u001b[39m:\u001b[K\u001b[9;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[10;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mbuild_package_scores\u001b(B\u001b[m(binary_dict):\u001b[K\u001b[12;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Builds a dictionary of package scores from the binary \u001b[13;64Hdictionary.\"\"\"\u001b[39m\u001b[K\u001b[14;64H\u001b[4X\u001b[4Cpackage_scores = {}\u001b[K\u001b[15;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Cfor\u001b[39m binary, data \u001b[33min\u001b[39m binary_dict.items():\u001b[K\u001b[17;64H\u001b[8X\u001b[8Crepo = data.get(\u001b[38;5;130m\"repo\"\u001b[39m)\u001b[K\u001b[18;64H\u001b[8X\u001b[33m\u001b[8Cif\u001b[39m \u001b[33mnot\u001b[39m repo:\u001b[K\u001b[19;64H\u001b[12X\u001b[33m\u001b[12Ccontinue\u001b[39m\u001b[K\u001b[20;64H\u001b[K\n\u001b[8X\u001b[8Cpackage = repo.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]  \u001b[36m# Take the rightmost p\u001b[22;64Hart of the repo path\u001b[39m\u001b[K\u001b[23;64H\u001b[8X\u001b[8Cpackage_scores[package] = package_scores.get(package,\u001b[24;64H \u001b[38;5;130m0\u001b[39m) + data[\u001b[38;5;130m\"score\"\u001b[39m]\u001b[K\u001b[25;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m package_scores\u001b[K\u001b[27;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[29;64H\u001b[43X\u001b[43C69,1\u001b[10X\u001b[10C69%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[36.376153, "o", "\u001b[?25l\u001b[1d\u001b[12X\u001b[12Cscore, binary = parts\u001b[K\u001b[2;64H\u001b[12X\u001b[33m\u001b[12Ctry\u001b[39m:\u001b[K\u001b[3;64H\u001b[16X\u001b[16Cscore = \u001b[36m\u001b[1mint\u001b(B\u001b[m(score)\u001b[K\u001b[4;64H\u001b[16X\u001b[33m\u001b[16Cif\u001b[39m binary \u001b[33min\u001b[39m binary_dict:\u001b[K\u001b[5;64H\u001b[20X\u001b[20Cbinary_dict[binary][\u001b[38;5;130m\"score\"\u001b[39m] += score\u001b[K\u001b[6;64H\u001b[12X\u001b[33m\u001b[12Cexcept\u001b[39m \u001b[32mValueError\u001b[39m:\u001b[K\u001b[7;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[8;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mbuild_package_scores\u001b(B\u001b[m(binary_dict):\u001b[K\u001b[10;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Builds a dictionary of package scores from the binary \u001b[11;64Hdictionary.\"\"\"\u001b[39m\u001b[K\u001b[12;64H\u001b[4X\u001b[4Cpackage_scores = {}\u001b[K\u001b[13;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Cfor\u001b[39m binary, data \u001b[33min\u001b[39m binary_dict.items():\u001b[K\u001b[15;64H\u001b[8X\u001b[8Crepo = data.get(\u001b[38;5;130m\"repo\"\u001b[39m)\u001b[K\u001b[16;64H\u001b[8X\u001b[33m\u001b[8Cif\u001b[39m \u001b[33mnot\u001b[39m repo:\u001b[K\u001b[17;64H\u001b[12X\u001b[33m\u001b[12Ccontinue\u001b[39m\u001b[K\u001b[18;64H\u001b[K\n\u001b[8X\u001b[8Cpackage = repo.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]  \u001b[36m# Take the rightmost p\u001b[20;64Hart of the repo path\u001b[39m\u001b[K\u001b[21;64H\u001b[8X\u001b[8Cpackage_scores[package] = package_scores.get(package,\u001b[22;64H \u001b[38;5;130m0\u001b[39m) + data[\u001b[38;5;130m\"score\"\u001b[39m]\u001b[K\u001b[23;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m package_scores\u001b[K\u001b[25;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[27;64H\u001b[4X\u001b[4Cparser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Generate pa\u001b[28;64Hckage priority list for Dockerfile.\"\u001b[39m)\u001b[K\u001b[29;64H\u001b[43X\u001b[43C70,1\u001b[10X\u001b[10C71%\u001b[K\u001b[?12l\u001b[?25h\u001b[27;64H"]
[36.396653, "o", "\u001b[?25l\u001b[1d\u001b[16X\u001b[16Cscore = \u001b[36m\u001b[1mint\u001b(B\u001b[m(score)\u001b[K\u001b[2;64H\u001b[16X\u001b[33m\u001b[16Cif\u001b[39m binary \u001b[33min\u001b[39m binary_dict:\u001b[K\u001b[3;64H\u001b[20X\u001b[20Cbinary_dict[binary][\u001b[38;5;130m\"score\"\u001b[39m] += score\u001b[K\u001b[4;64H\u001b[12X\u001b[33m\u001b[12Cexcept\u001b[39m \u001b[32mValueError\u001b[39m:\u001b[K\u001b[5;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[6;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mbuild_package_scores\u001b(B\u001b[m(binary_dict):\u001b[K\u001b[8;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Builds a dictionary of package scores from the binary \u001b[9;64Hdictionary.\"\"\"\u001b[39m\u001b[K\u001b[10;64H\u001b[4X\u001b[4Cpackage_scores = {}\u001b[K\u001b[11;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Cfor\u001b[39m binary, data \u001b[33min\u001b[39m binary_dict.items():\u001b[K\u001b[13;64H\u001b[8X\u001b[8Crepo = data.get(\u001b[38;5;130m\"repo\"\u001b[39m)\u001b[K\u001b[14;64H\u001b[8X\u001b[33m\u001b[8Cif\u001b[39m \u001b[33mnot\u001b[39m repo:\u001b[K\u001b[15;64H\u001b[12X\u001b[33m\u001b[12Ccontinue\u001b[39m\u001b[K\u001b[16;64H\u001b[K\n\u001b[8X\u001b[8Cpackage = repo.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]  \u001b[36m# Take the rightmost p\u001b[18;64Hart of the repo path\u001b[39m\u001b[K\u001b[19;64H\u001b[8X\u001b[8Cpackage_scores[package] = package_scores.get(package,\u001b[20;64H \u001b[38;5;130m0\u001b[39m) + data[\u001b[38;5;130m\"score\"\u001b[39m]\u001b[K\u001b[21;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m package_scores\u001b[K\u001b[23;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[25;64H\u001b[4X\u001b[4Cparser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Generate pa\u001b[26;64Hckage priority list for Dockerfile.\"\u001b[39m)\u001b[K\u001b[27;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--data-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'dat\u001b[28;64Ha/01.binaries'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the binaries data file.\"\u001b[39m)\u001b[K\u001b[29;64H\u001b[43X\u001b[43C71,1\u001b[10X\u001b[10C73%\u001b[K\u001b[?12l\u001b[?25h\u001b[27;64H"]
[36.438451, "o", "\u001b[?25l\u001b[1d\u001b[12X\u001b[33m\u001b[12Cexcept\u001b[39m \u001b[32mValueError\u001b[39m:\u001b[K\u001b[2;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[3;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mbuild_package_scores\u001b(B\u001b[m(binary_dict):\u001b[K\u001b[5;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Builds a dictionary of package scores from the binary \u001b[6;64Hdictionary.\"\"\"\u001b[39m\u001b[K\u001b[7;64H\u001b[4X\u001b[4Cpackage_scores = {}\u001b[K\u001b[8;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Cfor\u001b[39m binary, data \u001b[33min\u001b[39m binary_dict.items():\u001b[K\u001b[10;64H\u001b[8X\u001b[8Crepo = data.get(\u001b[38;5;130m\"repo\"\u001b[39m)\u001b[K\u001b[11;64H\u001b[8X\u001b[33m\u001b[8Cif\u001b[39m \u001b[33mnot\u001b[39m repo:\u001b[K\u001b[12;64H\u001b[12X\u001b[33m\u001b[12Ccontinue\u001b[39m\u001b[K\u001b[13;64H\u001b[K\n\u001b[8X\u001b[8Cpackage = repo.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]  \u001b[36m# Take the rightmost p\u001b[15;64Hart of the repo path\u001b[39m\u001b[K\u001b[16;64H\u001b[8X\u001b[8Cpackage_scores[package] = package_scores.get(package,\u001b[17;64H \u001b[38;5;130m0\u001b[39m) + data[\u001b[38;5;130m\"score\"\u001b[39m]\u001b[K\u001b[18;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m package_scores\u001b[K\u001b[20;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[22;64H\u001b[4X\u001b[4Cparser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Generate pa\u001b[23;64Hckage priority list for Dockerfile.\"\u001b[39m)\u001b[K\u001b[24;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--data-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'dat\u001b[25;64Ha/01.binaries'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the binaries data file.\"\u001b[39m)\u001b[K\u001b[26;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--log-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'data\u001b[27;64H/02a.popularity-contest'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the popularity contes\u001b[28;64Ht log file.\"\u001b[39m)\u001b[K\u001b[29;64H\u001b[43X\u001b[43C72,1\u001b[10X\u001b[10C76%\u001b[K\u001b[?12l\u001b[?25h\u001b[26;64H"]
[36.458624, "o", "\u001b[?25l\u001b[1d\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[2;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mbuild_package_scores\u001b(B\u001b[m(binary_dict):\u001b[K\u001b[4;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Builds a dictionary of package scores from the binary \u001b[5;64Hdictionary.\"\"\"\u001b[39m\u001b[K\u001b[6;64H\u001b[4X\u001b[4Cpackage_scores = {}\u001b[K\u001b[7;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Cfor\u001b[39m binary, data \u001b[33min\u001b[39m binary_dict.items():\u001b[K\u001b[9;64H\u001b[8X\u001b[8Crepo = data.get(\u001b[38;5;130m\"repo\"\u001b[39m)\u001b[K\u001b[10;64H\u001b[8X\u001b[33m\u001b[8Cif\u001b[39m \u001b[33mnot\u001b[39m repo:\u001b[K\u001b[11;64H\u001b[12X\u001b[33m\u001b[12Ccontinue\u001b[39m\u001b[K\u001b[12;64H\u001b[K\n\u001b[8X\u001b[8Cpackage = repo.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]  \u001b[36m# Take the rightmost p\u001b[14;64Hart of the repo path\u001b[39m\u001b[K\u001b[15;64H\u001b[8X\u001b[8Cpackage_scores[package] = package_scores.get(package,\u001b[16;64H \u001b[38;5;130m0\u001b[39m) + data[\u001b[38;5;130m\"score\"\u001b[39m]\u001b[K\u001b[17;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m package_scores\u001b[K\u001b[19;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[21;64H\u001b[4X\u001b[4Cparser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Generate pa\u001b[22;64Hckage priority list for Dockerfile.\"\u001b[39m)\u001b[K\u001b[23;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--data-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'dat\u001b[24;64Ha/01.binaries'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the binaries data file.\"\u001b[39m)\u001b[K\u001b[25;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--log-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'data\u001b[26;64H/02a.popularity-contest'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the popularity contes\u001b[27;64Ht log file.\"\u001b[39m)\u001b[K\u001b[28;64H\u001b[4X\u001b[4Cargs = parser.parse_args()\u001b[K\u001b[29;64H\u001b[43X\u001b[43C73,1\u001b[10X\u001b[10C77%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[36.501253, "o", "\u001b[?25l\u001b[1d\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mbuild_package_scores\u001b(B\u001b[m(binary_dict):\u001b[K\u001b[3;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Builds a dictionary of package scores from the binary \u001b[4;64Hdictionary.\"\"\"\u001b[39m\u001b[K\u001b[5;64H\u001b[4X\u001b[4Cpackage_scores = {}\u001b[K\u001b[6;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Cfor\u001b[39m binary, data \u001b[33min\u001b[39m binary_dict.items():\u001b[K\u001b[8;64H\u001b[8X\u001b[8Crepo = data.get(\u001b[38;5;130m\"repo\"\u001b[39m)\u001b[K\u001b[9;64H\u001b[8X\u001b[33m\u001b[8Cif\u001b[39m \u001b[33mnot\u001b[39m repo:\u001b[K\u001b[10;64H\u001b[12X\u001b[33m\u001b[12Ccontinue\u001b[39m\u001b[K\u001b[11;64H\u001b[K\n\u001b[8X\u001b[8Cpackage = repo.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]  \u001b[36m# Take the rightmost p\u001b[13;64Hart of the repo path\u001b[39m\u001b[K\u001b[14;64H\u001b[8X\u001b[8Cpackage_scores[package] = package_scores.get(package,\u001b[15;64H \u001b[38;5;130m0\u001b[39m) + data[\u001b[38;5;130m\"score\"\u001b[39m]\u001b[K\u001b[16;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m package_scores\u001b[K\u001b[18;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[20;64H\u001b[4X\u001b[4Cparser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Generate pa\u001b[21;64Hckage priority list for Dockerfile.\"\u001b[39m)\u001b[K\u001b[22;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--data-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'dat\u001b[23;64Ha/01.binaries'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the binaries data file.\"\u001b[39m)\u001b[K\u001b[24;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--log-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'data\u001b[25;64H/02a.popularity-contest'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the popularity contes\u001b[26;64Ht log file.\"\u001b[39m)\u001b[K\u001b[27;64H\u001b[4X\u001b[4Cargs = parser.parse_args()\u001b[K\u001b[28;64H\u001b[K\n\u001b[43X\u001b[43C74,0-1\u001b[8X\u001b[8C79%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[36.52278, "o", "\u001b[?25l\u001b[33m\u001b[1ddef\u001b[39m \u001b[36m\u001b[1mbuild_package_scores\u001b(B\u001b[m(binary_dict):\u001b[K\u001b[2;64H\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Builds a dictionary of package scores from the binary \u001b[3;64Hdictionary.\"\"\"\u001b[39m\u001b[K\u001b[4;64H\u001b[4X\u001b[4Cpackage_scores = {}\u001b[K\u001b[5;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Cfor\u001b[39m binary, data \u001b[33min\u001b[39m binary_dict.items():\u001b[K\u001b[7;64H\u001b[8X\u001b[8Crepo = data.get(\u001b[38;5;130m\"repo\"\u001b[39m)\u001b[K\u001b[8;64H\u001b[8X\u001b[33m\u001b[8Cif\u001b[39m \u001b[33mnot\u001b[39m repo:\u001b[K\u001b[9;64H\u001b[12X\u001b[33m\u001b[12Ccontinue\u001b[39m\u001b[K\u001b[10;64H\u001b[K\n\u001b[8X\u001b[8Cpackage = repo.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]  \u001b[36m# Take the rightmost p\u001b[12;64Hart of the repo path\u001b[39m\u001b[K\u001b[13;64H\u001b[8X\u001b[8Cpackage_scores[package] = package_scores.get(package,\u001b[14;64H \u001b[38;5;130m0\u001b[39m) + data[\u001b[38;5;130m\"score\"\u001b[39m]\u001b[K\u001b[15;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m package_scores\u001b[K\u001b[17;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[19;64H\u001b[4X\u001b[4Cparser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Generate pa\u001b[20;64Hckage priority list for Dockerfile.\"\u001b[39m)\u001b[K\u001b[21;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--data-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'dat\u001b[22;64Ha/01.binaries'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the binaries data file.\"\u001b[39m)\u001b[K\u001b[23;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--log-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'data\u001b[24;64H/02a.popularity-contest'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the popularity contes\u001b[25;64Ht log file.\"\u001b[39m)\u001b[K\u001b[26;64H\u001b[4X\u001b[4Cargs = parser.parse_args()\u001b[K\u001b[27;64H\u001b[K\n\u001b[4X\u001b[36m\u001b[4C# Load binaries and scores\u001b[39m\u001b[K\u001b[29;64H\u001b[43X\u001b[43C75,1\u001b[10X\u001b[10C80%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[36.544673, "o", "\u001b[?25l\u001b[1d\u001b[4X\u001b[38;5;130m\u001b[4C\"\"\"Builds a dictionary of package scores from the binary \u001b[2;64Hdictionary.\"\"\"\u001b[39m\u001b[K\u001b[3;64H\u001b[4X\u001b[4Cpackage_scores = {}\u001b[K\u001b[4;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Cfor\u001b[39m binary, data \u001b[33min\u001b[39m binary_dict.items():\u001b[K\u001b[6;64H\u001b[8X\u001b[8Crepo = data.get(\u001b[38;5;130m\"repo\"\u001b[39m)\u001b[K\u001b[7;64H\u001b[8X\u001b[33m\u001b[8Cif\u001b[39m \u001b[33mnot\u001b[39m repo:\u001b[K\u001b[8;64H\u001b[12X\u001b[33m\u001b[12Ccontinue\u001b[39m\u001b[K\u001b[9;64H\u001b[K\n\u001b[8X\u001b[8Cpackage = repo.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]  \u001b[36m# Take the rightmost p\u001b[11;64Hart of the repo path\u001b[39m\u001b[K\u001b[12;64H\u001b[8X\u001b[8Cpackage_scores[package] = package_scores.get(package,\u001b[13;64H \u001b[38;5;130m0\u001b[39m) + data[\u001b[38;5;130m\"score\"\u001b[39m]\u001b[K\u001b[14;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m package_scores\u001b[K\u001b[16;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[18;64H\u001b[4X\u001b[4Cparser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Generate pa\u001b[19;64Hckage priority list for Dockerfile.\"\u001b[39m)\u001b[K\u001b[20;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--data-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'dat\u001b[21;64Ha/01.binaries'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the binaries data file.\"\u001b[39m)\u001b[K\u001b[22;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--log-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'data\u001b[23;64H/02a.popularity-contest'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the popularity contes\u001b[24;64Ht log file.\"\u001b[39m)\u001b[K\u001b[25;64H\u001b[4X\u001b[4Cargs = parser.parse_args()\u001b[K\u001b[26;64H\u001b[K\n\u001b[4X\u001b[36m\u001b[4C# Load binaries and scores\u001b[39m\u001b[K\u001b[28;64H\u001b[4X\u001b[4Cbinary_dict = load_binaries(args.data_file)\u001b[K\u001b[29;64H\u001b[43X\u001b[43C76,1\u001b[10X\u001b[10C82%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[36.587376, "o", "\u001b[?25l\u001b[1d\u001b[4X\u001b[4Cpackage_scores = {}\u001b[K\u001b[2;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Cfor\u001b[39m binary, data \u001b[33min\u001b[39m binary_dict.items():\u001b[K\u001b[4;64H\u001b[8X\u001b[8Crepo = data.get(\u001b[38;5;130m\"repo\"\u001b[39m)\u001b[K\u001b[5;64H\u001b[8X\u001b[33m\u001b[8Cif\u001b[39m \u001b[33mnot\u001b[39m repo:\u001b[K\u001b[6;64H\u001b[12X\u001b[33m\u001b[12Ccontinue\u001b[39m\u001b[K\u001b[7;64H\u001b[K\n\u001b[8X\u001b[8Cpackage = repo.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]  \u001b[36m# Take the rightmost p\u001b[9;64Hart of the repo path\u001b[39m\u001b[K\u001b[10;64H\u001b[8X\u001b[8Cpackage_scores[package] = package_scores.get(package,\u001b[11;64H \u001b[38;5;130m0\u001b[39m) + data[\u001b[38;5;130m\"score\"\u001b[39m]\u001b[K\u001b[12;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m package_scores\u001b[K\u001b[14;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[16;64H\u001b[4X\u001b[4Cparser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Generate pa\u001b[17;64Hckage priority list for Dockerfile.\"\u001b[39m)\u001b[K\u001b[18;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--data-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'dat\u001b[19;64Ha/01.binaries'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the binaries data file.\"\u001b[39m)\u001b[K\u001b[20;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--log-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'data\u001b[21;64H/02a.popularity-contest'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the popularity contes\u001b[22;64Ht log file.\"\u001b[39m)\u001b[K\u001b[23;64H\u001b[4X\u001b[4Cargs = parser.parse_args()\u001b[K\u001b[24;64H\u001b[K\n\u001b[4X\u001b[36m\u001b[4C# Load binaries and scores\u001b[39m\u001b[K\u001b[26;64H\u001b[4X\u001b[4Cbinary_dict = load_binaries(args.data_file)\u001b[K\u001b[27;64H\u001b[4X\u001b[4Cload_scores(args.log_file, binary_dict)\u001b[K\u001b[28;64H\u001b[K\n\u001b[43X\u001b[43C77,1\u001b[10X\u001b[10C84%\u001b[K\u001b[?12l\u001b[?25h\u001b[27;64H"]
[36.607646, "o", "\u001b[29;108H8,0-1\u001b[28;64H"]
[36.650483, "o", "\u001b[?25l\u001b[1d\u001b[K\n\u001b[4X\u001b[33m\u001b[4Cfor\u001b[39m binary, data \u001b[33min\u001b[39m binary_dict.items():\u001b[K\u001b[3;64H\u001b[8X\u001b[8Crepo = data.get(\u001b[38;5;130m\"repo\"\u001b[39m)\u001b[K\u001b[4;64H\u001b[8X\u001b[33m\u001b[8Cif\u001b[39m \u001b[33mnot\u001b[39m repo:\u001b[K\u001b[5;64H\u001b[12X\u001b[33m\u001b[12Ccontinue\u001b[39m\u001b[K\u001b[6;64H\u001b[K\n\u001b[8X\u001b[8Cpackage = repo.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]  \u001b[36m# Take the rightmost p\u001b[8;64Hart of the repo path\u001b[39m\u001b[K\u001b[9;64H\u001b[8X\u001b[8Cpackage_scores[package] = package_scores.get(package,\u001b[10;64H \u001b[38;5;130m0\u001b[39m) + data[\u001b[38;5;130m\"score\"\u001b[39m]\u001b[K\u001b[11;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m package_scores\u001b[K\u001b[13;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[15;64H\u001b[4X\u001b[4Cparser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Generate pa\u001b[16;64Hckage priority list for Dockerfile.\"\u001b[39m)\u001b[K\u001b[17;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--data-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'dat\u001b[18;64Ha/01.binaries'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the binaries data file.\"\u001b[39m)\u001b[K\u001b[19;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--log-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'data\u001b[20;64H/02a.popularity-contest'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the popularity contes\u001b[21;64Ht log file.\"\u001b[39m)\u001b[K\u001b[22;64H\u001b[4X\u001b[4Cargs = parser.parse_args()\u001b[K\u001b[23;64H\u001b[K\n\u001b[4X\u001b[36m\u001b[4C# Load binaries and scores\u001b[39m\u001b[K\u001b[25;64H\u001b[4X\u001b[4Cbinary_dict = load_binaries(args.data_file)\u001b[K\u001b[26;64H\u001b[4X\u001b[4Cload_scores(args.log_file, binary_dict)\u001b[K\u001b[27;64H\u001b[K\n\u001b[4X\u001b[36m\u001b[4C# Build package scores and sort by score\u001b[39m\u001b[K\u001b[29;64H\u001b[43X\u001b[43C79,1\u001b[10X\u001b[10C86%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[36.670868, "o", "\u001b[?25l\u001b[1d\u001b[4X\u001b[33m\u001b[4Cfor\u001b[39m binary, data \u001b[33min\u001b[39m binary_dict.items():\u001b[K\u001b[2;64H\u001b[8X\u001b[8Crepo = data.get(\u001b[38;5;130m\"repo\"\u001b[39m)\u001b[K\u001b[3;64H\u001b[8X\u001b[33m\u001b[8Cif\u001b[39m \u001b[33mnot\u001b[39m repo:\u001b[K\u001b[4;64H\u001b[12X\u001b[33m\u001b[12Ccontinue\u001b[39m\u001b[K\u001b[5;64H\u001b[K\n\u001b[8X\u001b[8Cpackage = repo.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]  \u001b[36m# Take the rightmost p\u001b[7;64Hart of the repo path\u001b[39m\u001b[K\u001b[8;64H\u001b[8X\u001b[8Cpackage_scores[package] = package_scores.get(package,\u001b[9;64H \u001b[38;5;130m0\u001b[39m) + data[\u001b[38;5;130m\"score\"\u001b[39m]\u001b[K\u001b[10;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m package_scores\u001b[K\u001b[12;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[14;64H\u001b[4X\u001b[4Cparser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Generate pa\u001b[15;64Hckage priority list for Dockerfile.\"\u001b[39m)\u001b[K\u001b[16;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--data-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'dat\u001b[17;64Ha/01.binaries'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the binaries data file.\"\u001b[39m)\u001b[K\u001b[18;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--log-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'data\u001b[19;64H/02a.popularity-contest'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the popularity contes\u001b[20;64Ht log file.\"\u001b[39m)\u001b[K\u001b[21;64H\u001b[4X\u001b[4Cargs = parser.parse_args()\u001b[K\u001b[22;64H\u001b[K\n\u001b[4X\u001b[36m\u001b[4C# Load binaries and scores\u001b[39m\u001b[K\u001b[24;64H\u001b[4X\u001b[4Cbinary_dict = load_binaries(args.data_file)\u001b[K\u001b[25;64H\u001b[4X\u001b[4Cload_scores(args.log_file, binary_dict)\u001b[K\u001b[26;64H\u001b[K\n\u001b[4X\u001b[36m\u001b[4C# Build package scores and sort by score\u001b[39m\u001b[K\u001b[28;64H\u001b[4X\u001b[4Cpackage_scores = build_package_scores(binary_dict)\u001b[K\u001b[29;64H\u001b[43X\u001b[43C80,1\u001b[10X\u001b[10C87%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[36.711633, "o", "\u001b[?25l\u001b[1d\u001b[8X\u001b[33m\u001b[8Cif\u001b[39m \u001b[33mnot\u001b[39m repo:\u001b[K\u001b[2;64H\u001b[12X\u001b[33m\u001b[12Ccontinue\u001b[39m\u001b[K\u001b[3;64H\u001b[K\n\u001b[8X\u001b[8Cpackage = repo.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]  \u001b[36m# Take the rightmost p\u001b[5;64Hart of the repo path\u001b[39m\u001b[K\u001b[6;64H\u001b[8X\u001b[8Cpackage_scores[package] = package_scores.get(package,\u001b[7;64H \u001b[38;5;130m0\u001b[39m) + data[\u001b[38;5;130m\"score\"\u001b[39m]\u001b[K\u001b[8;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m package_scores\u001b[K\u001b[10;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[12;64H\u001b[4X\u001b[4Cparser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Generate pa\u001b[13;64Hckage priority list for Dockerfile.\"\u001b[39m)\u001b[K\u001b[14;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--data-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'dat\u001b[15;64Ha/01.binaries'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the binaries data file.\"\u001b[39m)\u001b[K\u001b[16;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--log-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'data\u001b[17;64H/02a.popularity-contest'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the popularity contes\u001b[18;64Ht log file.\"\u001b[39m)\u001b[K\u001b[19;64H\u001b[4X\u001b[4Cargs = parser.parse_args()\u001b[K\u001b[20;64H\u001b[K\n\u001b[4X\u001b[36m\u001b[4C# Load binaries and scores\u001b[39m\u001b[K\u001b[22;64H\u001b[4X\u001b[4Cbinary_dict = load_binaries(args.data_file)\u001b[K\u001b[23;64H\u001b[4X\u001b[4Cload_scores(args.log_file, binary_dict)\u001b[K\u001b[24;64H\u001b[K\n\u001b[4X\u001b[36m\u001b[4C# Build package scores and sort by score\u001b[39m\u001b[K\u001b[26;64H\u001b[4X\u001b[4Cpackage_scores = build_package_scores(binary_dict)\u001b[K\u001b[27;64H\u001b[4X\u001b[4Csorted_packages = \u001b[36m\u001b[1msorted\u001b(B\u001b[m(package_scores.items(), key=\u001b[33mlamb\u001b[28;64Hda\u001b[39m x: x[\u001b[38;5;130m1\u001b[39m], reverse=\u001b[36m\u001b[1mTrue\u001b(B\u001b[m)\u001b[K\u001b[29;64H\u001b[43X\u001b[43C81,1\u001b[10X\u001b[10C89%\u001b[K\u001b[?12l\u001b[?25h\u001b[27;64H"]
[36.731242, "o", "\u001b[?25l\u001b[1d\u001b[12X\u001b[33m\u001b[12Ccontinue\u001b[39m\u001b[K\u001b[2;64H\u001b[K\n\u001b[8X\u001b[8Cpackage = repo.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]  \u001b[36m# Take the rightmost p\u001b[4;64Hart of the repo path\u001b[39m\u001b[K\u001b[5;64H\u001b[8X\u001b[8Cpackage_scores[package] = package_scores.get(package,\u001b[6;64H \u001b[38;5;130m0\u001b[39m) + data[\u001b[38;5;130m\"score\"\u001b[39m]\u001b[K\u001b[7;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m package_scores\u001b[K\u001b[9;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[11;64H\u001b[4X\u001b[4Cparser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Generate pa\u001b[12;64Hckage priority list for Dockerfile.\"\u001b[39m)\u001b[K\u001b[13;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--data-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'dat\u001b[14;64Ha/01.binaries'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the binaries data file.\"\u001b[39m)\u001b[K\u001b[15;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--log-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'data\u001b[16;64H/02a.popularity-contest'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the popularity contes\u001b[17;64Ht log file.\"\u001b[39m)\u001b[K\u001b[18;64H\u001b[4X\u001b[4Cargs = parser.parse_args()\u001b[K\u001b[19;64H\u001b[K\n\u001b[4X\u001b[36m\u001b[4C# Load binaries and scores\u001b[39m\u001b[K\u001b[21;64H\u001b[4X\u001b[4Cbinary_dict = load_binaries(args.data_file)\u001b[K\u001b[22;64H\u001b[4X\u001b[4Cload_scores(args.log_file, binary_dict)\u001b[K\u001b[23;64H\u001b[K\n\u001b[4X\u001b[36m\u001b[4C# Build package scores and sort by score\u001b[39m\u001b[K\u001b[25;64H\u001b[4X\u001b[4Cpackage_scores = build_package_scores(binary_dict)\u001b[K\u001b[26;64H\u001b[4X\u001b[4Csorted_packages = \u001b[36m\u001b[1msorted\u001b(B\u001b[m(package_scores.items(), key=\u001b[33mlamb\u001b[27;64Hda\u001b[39m x: x[\u001b[38;5;130m1\u001b[39m], reverse=\u001b[36m\u001b[1mTrue\u001b(B\u001b[m)\u001b[K\u001b[28;64H\u001b[K\n\u001b[43X\u001b[43C82,0-1\u001b[8X\u001b[8C91%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[36.774265, "o", "\u001b[?25l\u001b[1d\u001b[K\n\u001b[8X\u001b[8Cpackage = repo.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]  \u001b[36m# Take the rightmost p\u001b[3;64Hart of the repo path\u001b[39m\u001b[K\u001b[4;64H\u001b[8X\u001b[8Cpackage_scores[package] = package_scores.get(package,\u001b[5;64H \u001b[38;5;130m0\u001b[39m) + data[\u001b[38;5;130m\"score\"\u001b[39m]\u001b[K\u001b[6;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m package_scores\u001b[K\u001b[8;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[10;64H\u001b[4X\u001b[4Cparser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Generate pa\u001b[11;64Hckage priority list for Dockerfile.\"\u001b[39m)\u001b[K\u001b[12;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--data-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'dat\u001b[13;64Ha/01.binaries'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the binaries data file.\"\u001b[39m)\u001b[K\u001b[14;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--log-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'data\u001b[15;64H/02a.popularity-contest'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the popularity contes\u001b[16;64Ht log file.\"\u001b[39m)\u001b[K\u001b[17;64H\u001b[4X\u001b[4Cargs = parser.parse_args()\u001b[K\u001b[18;64H\u001b[K\n\u001b[4X\u001b[36m\u001b[4C# Load binaries and scores\u001b[39m\u001b[K\u001b[20;64H\u001b[4X\u001b[4Cbinary_dict = load_binaries(args.data_file)\u001b[K\u001b[21;64H\u001b[4X\u001b[4Cload_scores(args.log_file, binary_dict)\u001b[K\u001b[22;64H\u001b[K\n\u001b[4X\u001b[36m\u001b[4C# Build package scores and sort by score\u001b[39m\u001b[K\u001b[24;64H\u001b[4X\u001b[4Cpackage_scores = build_package_scores(binary_dict)\u001b[K\u001b[25;64H\u001b[4X\u001b[4Csorted_packages = \u001b[36m\u001b[1msorted\u001b(B\u001b[m(package_scores.items(), key=\u001b[33mlamb\u001b[26;64Hda\u001b[39m x: x[\u001b[38;5;130m1\u001b[39m], reverse=\u001b[36m\u001b[1mTrue\u001b(B\u001b[m)\u001b[K\u001b[27;64H\u001b[K\n\u001b[4X\u001b[36m\u001b[4C# Print packages in priority order\u001b[39m\u001b[K\u001b[29;64H\u001b[43X\u001b[43C83,1\u001b[10X\u001b[10C92%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[36.793856, "o", "\u001b[?25l\u001b[1d\u001b[8X\u001b[8Cpackage = repo.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]  \u001b[36m# Take the rightmost p\u001b[2;64Hart of the repo path\u001b[39m\u001b[K\u001b[3;64H\u001b[8X\u001b[8Cpackage_scores[package] = package_scores.get(package,\u001b[4;64H \u001b[38;5;130m0\u001b[39m) + data[\u001b[38;5;130m\"score\"\u001b[39m]\u001b[K\u001b[5;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m package_scores\u001b[K\u001b[7;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[9;64H\u001b[4X\u001b[4Cparser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Generate pa\u001b[10;64Hckage priority list for Dockerfile.\"\u001b[39m)\u001b[K\u001b[11;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--data-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'dat\u001b[12;64Ha/01.binaries'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the binaries data file.\"\u001b[39m)\u001b[K\u001b[13;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--log-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'data\u001b[14;64H/02a.popularity-contest'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the popularity contes\u001b[15;64Ht log file.\"\u001b[39m)\u001b[K\u001b[16;64H\u001b[4X\u001b[4Cargs = parser.parse_args()\u001b[K\u001b[17;64H\u001b[K\n\u001b[4X\u001b[36m\u001b[4C# Load binaries and scores\u001b[39m\u001b[K\u001b[19;64H\u001b[4X\u001b[4Cbinary_dict = load_binaries(args.data_file)\u001b[K\u001b[20;64H\u001b[4X\u001b[4Cload_scores(args.log_file, binary_dict)\u001b[K\u001b[21;64H\u001b[K\n\u001b[4X\u001b[36m\u001b[4C# Build package scores and sort by score\u001b[39m\u001b[K\u001b[23;64H\u001b[4X\u001b[4Cpackage_scores = build_package_scores(binary_dict)\u001b[K\u001b[24;64H\u001b[4X\u001b[4Csorted_packages = \u001b[36m\u001b[1msorted\u001b(B\u001b[m(package_scores.items(), key=\u001b[33mlamb\u001b[25;64Hda\u001b[39m x: x[\u001b[38;5;130m1\u001b[39m], reverse=\u001b[36m\u001b[1mTrue\u001b(B\u001b[m)\u001b[K\u001b[26;64H\u001b[K\n\u001b[4X\u001b[36m\u001b[4C# Print packages in priority order\u001b[39m\u001b[K\u001b[28;64H\u001b[4X\u001b[33m\u001b[4Cfor\u001b[39m package, score \u001b[33min\u001b[39m sorted_packages:\u001b[K\u001b[29;64H\u001b[43X\u001b[43C84,1\u001b[10X\u001b[10C94%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[36.836036, "o", "\u001b[?25l\u001b[1d\u001b[8X\u001b[8Cpackage_scores[package] = package_scores.get(package,\u001b[2;64H \u001b[38;5;130m0\u001b[39m) + data[\u001b[38;5;130m\"score\"\u001b[39m]\u001b[K\u001b[3;64H\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m package_scores\u001b[K\u001b[5;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[7;64H\u001b[4X\u001b[4Cparser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Generate pa\u001b[8;64Hckage priority list for Dockerfile.\"\u001b[39m)\u001b[K\u001b[9;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--data-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'dat\u001b[10;64Ha/01.binaries'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the binaries data file.\"\u001b[39m)\u001b[K\u001b[11;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--log-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'data\u001b[12;64H/02a.popularity-contest'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the popularity contes\u001b[13;64Ht log file.\"\u001b[39m)\u001b[K\u001b[14;64H\u001b[4X\u001b[4Cargs = parser.parse_args()\u001b[K\u001b[15;64H\u001b[K\n\u001b[4X\u001b[36m\u001b[4C# Load binaries and scores\u001b[39m\u001b[K\u001b[17;64H\u001b[4X\u001b[4Cbinary_dict = load_binaries(args.data_file)\u001b[K\u001b[18;64H\u001b[4X\u001b[4Cload_scores(args.log_file, binary_dict)\u001b[K\u001b[19;64H\u001b[K\n\u001b[4X\u001b[36m\u001b[4C# Build package scores and sort by score\u001b[39m\u001b[K\u001b[21;64H\u001b[4X\u001b[4Cpackage_scores = build_package_scores(binary_dict)\u001b[K\u001b[22;64H\u001b[4X\u001b[4Csorted_packages = \u001b[36m\u001b[1msorted\u001b(B\u001b[m(package_scores.items(), key=\u001b[33mlamb\u001b[23;64Hda\u001b[39m x: x[\u001b[38;5;130m1\u001b[39m], reverse=\u001b[36m\u001b[1mTrue\u001b(B\u001b[m)\u001b[K\u001b[24;64H\u001b[K\n\u001b[4X\u001b[36m\u001b[4C# Print packages in priority order\u001b[39m\u001b[K\u001b[26;64H\u001b[4X\u001b[33m\u001b[4Cfor\u001b[39m package, score \u001b[33min\u001b[39m sorted_packages:\u001b[K\u001b[27;64H\u001b[8X\u001b[36m\u001b[1m\u001b[8Cprint\u001b(B\u001b[m(f\u001b[38;5;130m\"{score} {package}\"\u001b[39m)\u001b[K\u001b[28;64H\u001b[K\n\u001b[43X\u001b[43C85,1\u001b[10X\u001b[10C96%\u001b[K\u001b[?12l\u001b[?25h\u001b[27;64H"]
[36.856377, "o", "\u001b[29;108H6,0-1\u001b[28;64H"]
[36.878373, "o", "\u001b[?25l\u001b[1d\u001b[K\n\u001b[4X\u001b[33m\u001b[4Creturn\u001b[39m package_scores\u001b[K\u001b[3;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[5;64H\u001b[4X\u001b[4Cparser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Generate pa\u001b[6;64Hckage priority list for Dockerfile.\"\u001b[39m)\u001b[K\u001b[7;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--data-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'dat\u001b[8;64Ha/01.binaries'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the binaries data file.\"\u001b[39m)\u001b[K\u001b[9;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'--log-file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m'data\u001b[10;64H/02a.popularity-contest'\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path to the popularity contes\u001b[11;64Ht log file.\"\u001b[39m)\u001b[K\u001b[12;64H\u001b[4X\u001b[4Cargs = parser.parse_args()\u001b[K\u001b[13;64H\u001b[K\n\u001b[4X\u001b[36m\u001b[4C# Load binaries and scores\u001b[39m\u001b[K\u001b[15;64H\u001b[4X\u001b[4Cbinary_dict = load_binaries(args.data_file)\u001b[K\u001b[16;64H\u001b[4X\u001b[4Cload_scores(args.log_file, binary_dict)\u001b[K\u001b[17;64H\u001b[K\n\u001b[4X\u001b[36m\u001b[4C# Build package scores and sort by score\u001b[39m\u001b[K\u001b[19;64H\u001b[4X\u001b[4Cpackage_scores = build_package_scores(binary_dict)\u001b[K\u001b[20;64H\u001b[4X\u001b[4Csorted_packages = \u001b[36m\u001b[1msorted\u001b(B\u001b[m(package_scores.items(), key=\u001b[33mlamb\u001b[21;64Hda\u001b[39m x: x[\u001b[38;5;130m1\u001b[39m], reverse=\u001b[36m\u001b[1mTrue\u001b(B\u001b[m)\u001b[K\u001b[22;64H\u001b[K\n\u001b[4X\u001b[36m\u001b[4C# Print packages in priority order\u001b[39m\u001b[K\u001b[24;64H\u001b[4X\u001b[33m\u001b[4Cfor\u001b[39m package, score \u001b[33min\u001b[39m sorted_packages:\u001b[K\u001b[25;64H\u001b[8X\u001b[36m\u001b[1m\u001b[8Cprint\u001b(B\u001b[m(f\u001b[38;5;130m\"{score} {package}\"\u001b[39m)\u001b[K\u001b[26;64H\u001b[K\u001b[33m\nif\u001b[39m __name__ == \u001b[38;5;130m\"__main__\"\u001b[39m:\u001b[K\u001b[28;64H    main()\u001b[K\u001b[29;64H\u001b[43X\u001b[43C87,1\u001b[10X\u001b[10CBot\u001b[K\u001b[?12l\u001b[?25h\u001b[27;64H"]
[36.918933, "o", "\u001b[29;108H8\u001b[28;64H"]
[36.938362, "o", "\u0007"]
[37.579905, "o", "\u001b[29;108H7\u001b[27;64H"]
[38.082047, "o", "\u001b[29;108H6,0-1\u001b[26;64H"]
[38.109565, "o", "\u001b[29;108H5,1  \u001b[25;64H"]
[38.128661, "o", "\u001b[29;108H4\u001b[24;64H"]
[38.170422, "o", "\u001b[29;108H3\u001b[23;64H"]
[38.190966, "o", "\u001b[29;108H2,0-1\u001b[22;64H"]
[38.232222, "o", "\u001b[29;108H1,1  \u001b[20;64H"]
[38.254232, "o", "\u001b[29;108H0\u001b[19;64H"]
[38.294837, "o", "\u001b[29;107H79\u001b[18;64H"]
[38.315007, "o", "\u001b[29;108H8,0-1\u001b[17;64H"]
[38.357967, "o", "\u001b[29;108H7,1  \u001b[16;64H"]
[38.378334, "o", "\u001b[29;108H6\u001b[15;64H"]
[38.39937, "o", "\u001b[29;108H5\u001b[14;64H"]
[38.441505, "o", "\u001b[29;108H4,0-1\u001b[13;64H"]
[38.832695, "o", "\u001b[29d:\u001b[42C\u001b[K\u001b[42D"]
[39.056614, "o", "q"]
[39.269189, "o", "!"]
[39.560024, "o", "\u001b[3D"]
[39.563533, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[?25l\u001b[?2004l"]
[39.563724, "o", "\u001b[K\u001b[A\u001b[?12l\u001b[?25h"]
[39.56429, "o", "\u001b[?25l\u001b[1d(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ \u001b[K\u001b[2;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ \u001b[K\u001b[3;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ \u001b[K\u001b[4;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ \u001b[K\u001b[5;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ \u001b[K\u001b[6;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ \u001b[K\u001b[7;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ \u001b[K\u001b[8;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ \u001b[K\u001b[9;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ \u001b[K\u001b[10;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ \u001b[K\u001b[11;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ \u001b[K\u001b[12;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ \u001b[K\u001b[13;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ \u001b[K\u001b[14;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ \u001b[K\u001b[15;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ cd src\u001b[K\u001b[16;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src\u001b(B\u001b[m$ cd uh-halp-data/\u001b[K\u001b[17;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ ls -l\u001b[K\u001b[18;64Htotal 36\u001b[K\u001b[19;64Hdrwxrwxr-x 7 gaz gaz  4096 Jan  3 19:17 \u001b[34m\u001b[1mcasts\u001b(B\u001b[m\u001b[K\u001b[20;64Hdrwxrwxr-x 3 gaz gaz 12288 Jan  3 19:18 \u001b[34m\u001b[1mdata\u001b(B\u001b[m\u001b[K\u001b[21;64Hdrwxrwxr-x 3 gaz gaz  4096 Jan  3 19:16 \u001b[34m\u001b[1mdata.bak\u001b(B\u001b[m\u001b[K\u001b[22;64Hdrwxrwxr-x 2 gaz gaz  4096 Jan  3 19:13 \u001b[34m\u001b[1mlog\u001b(B\u001b[m\u001b[K\u001b[23;64H-rw-rw-r-- 1 gaz gaz  3176 Jan  3 19:02 Makefile\u001b[K\u001b[24;64H-rw-rw-r-- 1 gaz gaz  2550 Jan  1 07:28 README.md\u001b[K\u001b[25;64Hdrwxrwxr-x 2 gaz gaz  4096 Jan  3 19:03 \u001b[34m\u001b[1mscripts\u001b(B\u001b[m\u001b[K\u001b[26;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim scripts/03a.package_\u001b[27;64Hpriority.py \u001b[K\u001b[28;64H\u001b[K\n\u001b[K\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[A"]
[39.565304, "o", "\u001b[?2004h(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ "]
[39.565792, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[28;101H"]
[39.777524, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:19 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[28;101H"]
[41.007737, "o", "\u001b[?25l\u001b[1;63H\u001b[34mâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[39mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[16;24H"]
[41.008445, "o", "\u001b[?25l\u001b[1;63H\u001b[34mâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[39mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:vim*                                                                   \"gaz@orin: ~/src/uh-ha\" 19:19 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[16;24H"]
[41.70216, "o", "\u001b[29;45H40,42-45\u001b[17;45H"]
[41.872248, "o", "\u001b[29;46H1,46-49\u001b[18;49H"]
[42.017015, "o", "\u001b[29;46H2,18-21\u001b[19;21H"]
[42.183226, "o", "\u001b[29;46H3,0-1  \u001b[20;1H"]
[42.330816, "o", "\u001b[29;46H4,78 \u001b[22;16H"]
[43.255318, "o", "\u001b[29;46H5,52\u001b[23;52H"]
[43.451677, "o", "\u001b[29;46H6,50-53\u001b[5A"]
[44.303722, "o", "\u001b[29;48H49-52\u001b[24;52H"]
[44.805541, "o", "\u001b[29;49H8-51\u001b[24;51H"]
[44.810452, "o", "\u001b[29;49H7-50\u001b[24;50H"]
[44.833232, "o", "\u001b[29;49H6-49\u001b[24;49H"]
[44.876223, "o", "\u001b[29d5-48\u001b[24;48H"]
[44.896148, "o", "\u001b[29;49H4-47\u001b[24;47H"]
[44.937186, "o", "\u001b[29;49H3-46\u001b[24;46H"]
[44.958229, "o", "\u001b[29;49H2-45\u001b[24;45H"]
[45.001038, "o", "\u001b[29;49H1-44\u001b[24;44H"]
[45.023068, "o", "\u001b[14D\u001b[36m\u001b[46m\u001b[1m(\u001b[49mMAX_PACKAGES\u001b[46m)\u001b(B\u001b[m\u001b[38;5;130m \u001b[29;49H\u001b[39m0-43\u001b[24;43H"]
[45.062962, "o", "\u001b[13D\u001b[36m\u001b[1m(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[29;48H\u001b[39m39-42\u001b[24;42H"]
[45.084223, "o", "\u001b[29;49H8-41\u001b[24;41H"]
[45.104732, "o", "\u001b[29;49H7-40\u001b[24;40H"]
[45.145891, "o", "\u001b[29;49H6-39\u001b[24;39H"]
[45.166054, "o", "\u001b[29;49H5-38\u001b[24;38H"]
[45.2088, "o", "\u001b[29;49H4-37\u001b[24;37H"]
[45.230705, "o", "\u001b[29;49H3-36\u001b[24;36H"]
[45.27415, "o", "\u001b[29;49H2-35\u001b[24;35H"]
[45.293411, "o", "\u001b[29;49H1-34\u001b[24;34H"]
[45.336101, "o", "\u001b[29;49H0-33\u001b[24;33H"]
[45.356098, "o", "\u001b[29;48H29-32\u001b[24;32H"]
[45.483218, "o", "\u001b[29;48H30-33\u001b[24;33H"]
[46.762448, "o", "\u0007"]
[46.980957, "o", "\u001b[1;29r\u001b[1;62H\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\u001b[H\u001b[36m# So we can actually have some persistence\r\n\u001b[1m.ONESHELL:\r\n.SHELLFLAGS \u001b(B\u001b[m:= -c -e\u001b[5;1H\u001b[36m\u001b[1mMAX_PACKAGES\u001b(B\u001b[m=15000\r\n\u001b[36m\u001b[1mPACKAGE_BLACKLIST\u001b(B\u001b[m=^pcp\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^mythexport\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^prewikka\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^slapd\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^m\r\nailman3-web\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^freedombox\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^kubuntu-installer-prompt\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^runit\r\n\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^amazon-ec2-net-utils\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^xemacs21-nomule\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^uvtool-libvirt\u001b[36m\u001b[1m$\r\n$\u001b(B\u001b[m|^epoptes\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^namazu2\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^sympa\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^firebuild\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^epic4\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^epic5\u001b[36m\u001b[1m$\r\n$\u001b(B\u001b[m|^initramfs-tools\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^linux-image-6.8.0-1009-xilinx|\u001b[36m\u001b[1m$$\u001b(B\u001b[m^sympa\u001b[36m\u001b[1m$$\u001b[12;1Hall:\r\n\u001b(B\u001b[m\u001b[35m    @\u001b[38;5;130mbash -c \"touch ./data/*\"\r\n\u001b[35m    @\u001b[36m\u001b[1m$(MAKE)\u001b(B\u001b[m\u001b[38;5;130m data/04.run-help-extractor\r\n    \u001b[36m# finished? really? give yourself a pat on the mouth\u001b[17;1H## Step 1a: List default binaries installed in Ubuntu.\r\n\u001b[1mdata/01a.ubuntu-bin:\u001b(B\u001b[m scripts/01a.standard-binaries.sh\r\n\u001b[35m    @\u001b[38;5;130mecho \"01 - Getting standard binary names\"\r\n\u001b[35m    @\u001b[38;5;130m./scripts/01a.standard-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\r\n\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[23;1H\u001b[36m## Step 1b: List all possible Ubuntu binaries from all availab\r\nle packages\r\n\u001b[1mdata/01b.ubuntu-binaries-and-packages:\u001b(B\u001b[m scripts/01b.all-ubuntu-\r\nbinaries.sh\r\n\u001b[35m    @\u001b[38;5;130mecho \"01 - Getting all possible binary names\"\r\n\u001b[35m    @\u001b[38;5;130m./scripts/01b.all-ubuntu-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[29;45H\u001b[39m1,1\u001b[11CTop\u001b[1;30r\u001b[1;1H"]
[47.477445, "o", "\u001b[29;45H2\u001b[2;1H"]
[47.744634, "o", "\u001b[29;45H3\u001b[3;1H"]
[47.935834, "o", "\u001b[29;45H4,0-1\u001b[4;1H"]
[48.096307, "o", "\u001b[29;45H5,1  \u001b[5;1H"]
[49.321526, "o", "\u001b[29d\u001b[38;5;130m-- INSERT --\u001b[32C\u001b[39m5,1\u001b[11X\u001b[11CTop\u001b[1X\u001b[5;1H"]
[49.627978, "o", "\u001b[29;48H9\u001b[5;19H"]
[51.229322, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[28;101H"]
[51.229984, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:19 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[28;101H"]
[51.72886, "o", "c"]
[51.844039, "o", "l"]
[51.9815, "o", "e"]
[52.051544, "o", "a"]
[52.135166, "o", "r"]
[52.27092, "o", "\u001b[29;64H"]
[52.271161, "o", "\u001b[?2004l"]
[52.274466, "o", "\u001b[1;29r\u001b[1;64H\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\u001b[1;30r\u001b[1;64H"]
[52.274679, "o", "\u001b[?2004h"]
[52.274894, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ "]
[52.275394, "o", "\u001b[?25l\u001b[38Dâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;101H"]
[52.584029, "o", "\u001b[2;64H\u001b[?2004l"]
[52.584294, "o", "\u001b[?2004h(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ "]
[52.584817, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[2;101H"]
[52.75065, "o", "\u001b[3;64H\u001b[?2004l"]
[52.75088, "o", "\u001b[?2004h"]
[52.751016, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ "]
[52.75147, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[3;101H"]
[52.88304, "o", "\u001b[4;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ "]
[52.883725, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[4;101H"]
[53.088285, "o", "\u001b[5;64H\u001b[?2004l"]
[53.0885, "o", "\u001b[?2004h"]
[53.088641, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ "]
[53.089052, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[5;101H"]
[53.98584, "o", "l"]
[54.108518, "o", "o"]
[54.297503, "o", "l"]
[54.421336, "o", " "]
[54.567339, "o", "t"]
[54.731757, "o", "h"]
[54.823685, "o", "a"]
[54.886263, "o", "t"]
[55.317223, "o", "s"]
[55.439054, "o", " "]
[55.63019, "o", "e"]
[55.752648, "o", "v"]
[55.823742, "o", "e"]
[55.907136, "o", "r"]
[55.968305, "o", "y"]
[56.150887, "o", "t"]
[56.315947, "o", "h"]
[56.321923, "o", "i"]
[56.407478, "o", "n"]
[56.565856, "o", "g"]
[58.053904, "o", "\b\u001b[K"]
[58.552679, "o", "\b\u001b[K"]
[58.580239, "o", "\b\u001b[K"]
[58.601922, "o", "\b\u001b[K"]
[58.644773, "o", "\b\u001b[K"]
[58.663948, "o", "\b\u001b[K"]
[58.70455, "o", "\b\u001b[K"]
[58.725673, "o", "\b\u001b[K"]
[58.747145, "o", "\b\u001b[K"]
[58.79055, "o", "\b\u001b[K"]
[58.811138, "o", "\b\u001b[K"]
[58.853398, "o", "\b\u001b[K"]
[58.874164, "o", "\b\u001b[K"]
[58.916183, "o", "\b\u001b[K"]
[58.936216, "o", "\b\u001b[K"]
[58.957896, "o", "\b\u001b[K"]
[58.999734, "o", "\b\u001b[K"]
[59.019151, "o", "\b\u001b[K"]
[59.061106, "o", "\b\u001b[K"]
[59.080825, "o", "\b\u001b[K"]
[59.124271, "o", "\u0007"]
[59.144418, "o", "\u0007"]
[59.186589, "o", "\u0007"]
[61.887086, "o", "\u001b[?25l\u001b[1;63H\u001b[34mâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[39mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[5;19H"]
[61.887853, "o", "\u001b[?25l\u001b[1;63H\u001b[34mâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[39mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:vim*                                                                   \"gaz@orin: ~/src/uh-ha\" 19:19 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[5;19H"]
[62.83929, "o", "\u001b[29;45H6,311\u001b[11;1H"]
[63.645934, "o", "\u001b[29;49H0\u001b[10;62H"]
[64.123382, "o", "\u001b[29;48H09\u001b[10;61H"]
[64.623023, "o", "\u001b[29;49H8\u001b[10;60H"]
[64.648423, "o", "\u001b[29;49H7\u001b[10;59H"]
[64.669032, "o", "\u001b[29;49H6\u001b[10;58H"]
[64.711108, "o", "\u001b[29;49H5\u001b[10;57H"]
[64.732308, "o", "\u001b[29;49H4\u001b[10;56H"]
[64.75371, "o", "\u001b[29;49H3\u001b[10;55H"]
[64.795399, "o", "\u001b[29;49H2\u001b[10;54H"]
[64.8147, "o", "\u001b[29;49H1\u001b[10;53H"]
[64.856713, "o", "\u001b[29;49H0\u001b[10;52H"]
[64.87673, "o", "\u001b[29;47H299\u001b[10;51H"]
[64.918353, "o", "\u001b[29;49H8\u001b[10d"]
[64.942562, "o", "\u001b[29;49H7\u001b[10;49H"]
[64.981068, "o", "\u001b[29d6\u001b[10;48H"]
[65.001942, "o", "\u001b[29;49H5\u001b[10;47H"]
[65.042556, "o", "\u001b[29;49H4\u001b[10;46H"]
[65.06305, "o", "\u001b[29;49H3\u001b[10;45H"]
[65.083785, "o", "\u001b[29;49H2\u001b[10;44H"]
[65.125697, "o", "\u001b[29;49H1\u001b[10;43H"]
[65.146687, "o", "\u001b[29;49H0\u001b[10;42H"]
[65.55855, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[5;101H"]
[65.662031, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:19 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[5;101H"]
[66.391748, "o", "\u001b[6;64H"]
[66.39203, "o", "\u001b[?2004l"]
[66.392109, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[?2004h"]
[66.392622, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[6;101H"]
[67.50611, "o", "T"]
[67.673039, "o", "h"]
[67.722642, "o", "e"]
[67.987666, "o", "s"]
[68.035685, "o", "e"]
[68.119873, "o", " "]
[68.314569, "o", "b"]
[68.362205, "o", "e"]
[68.6041, "o", "h"]
[68.695011, "o", "a"]
[68.877804, "o", "v"]
[69.142837, "o", "e"]
[69.256381, "o", "d"]
[69.3892, "o", " "]
[69.552663, "o", "b"]
[69.621145, "o", "a"]
[69.819402, "o", "d"]
[69.971463, "o", "l"]
[70.173821, "o", "y"]
[70.924807, "o", " "]
[71.10401, "o", ":"]
[71.310855, "o", "/"]
[72.039325, "o", "\b\u001b[K"]
[72.556215, "o", "\b\u001b[K"]
[72.575456, "o", "\b\u001b[K"]
[72.595934, "o", "\b\u001b[K"]
[72.638367, "o", "\b\u001b[K"]
[72.658429, "o", "\b\u001b[K"]
[72.700456, "o", "\b\u001b[K"]
[72.720838, "o", "\b\u001b[K"]
[72.762267, "o", "\b\u001b[K"]
[72.7833, "o", "\b\u001b[K"]
[72.823984, "o", "\b\u001b[K"]
[72.844063, "o", "\b\u001b[K"]
[72.884249, "o", "\b\u001b[K"]
[72.904611, "o", "\b\u001b[K"]
[72.948033, "o", "\b\u001b[K"]
[72.967548, "o", "\b\u001b[K"]
[73.008957, "o", "\b\u001b[K"]
[73.029298, "o", "\b\u001b[K"]
[73.071382, "o", "\b\u001b[K"]
[73.091525, "o", "\b\u001b[K"]
[73.134885, "o", "\b\u001b[K"]
[73.157892, "o", "\b\u001b[K"]
[73.939854, "o", "\u001b[?25l\u001b[1;63H\u001b[34mâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[39mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[10;42H"]
[74.089241, "o", "\u001b[?25l\u001b[1;63H\u001b[34mâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[39mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:vim*                                                                   \"gaz@orin: ~/src/uh-ha\" 19:19 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[10;42H"]
[74.276023, "o", "\u001b[29;45H7,1  \u001b[11;1H"]
[74.781577, "o", "\u001b[29;45H8,5\u001b[12;5H"]
[74.80861, "o", "\u001b[29;45H9,27-30\u001b[13;30H"]
[74.828504, "o", "\u001b[29;45H10,37-40\u001b[14;40H"]
[74.871444, "o", "\u001b[29;46H1,54-57\u001b[15;57H"]
[74.892485, "o", "\u001b[29;46H2,1    \u001b[16;1H"]
[74.935305, "o", "\u001b[29;46H3,55\u001b[17;55H"]
[74.955115, "o", "\u001b[29;46H4,54\u001b[18;54H"]
[74.974801, "o", "\u001b[29;46H5,44-47\u001b[19;47H"]
[75.015727, "o", "\u001b[29;46H6,48-51\u001b[20;51H"]
[75.037372, "o", "\u001b[29;46H7,19-22\u001b[21;22H"]
[75.080067, "o", "\u001b[29;46H8,1    \u001b[22;1H"]
[75.100466, "o", "\u001b[29;46H9,74\u001b[24;12H"]
[75.142324, "o", "\u001b[29;45H20\u001b[26;12H"]
[75.163734, "o", "\u001b[29;46H1,48-51\u001b[27;51H"]
[75.204896, "o", "\u001b[29;46H2,50-53\u001b[A"]
[75.224803, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[36m\u001b[1m\u001b[H.ONESHELL:\u001b(B\u001b[m\u001b[2;62H\u001b[1K\u001b[36m\u001b[1m\r.SHELLFLAGS \u001b(B\u001b[m:= -c -e\u001b[3;62H\u001b[1K\n\u001b[1K\u001b[36m\u001b[1m\rMAX_PACKAGES\u001b(B\u001b[m=15000\u001b[36m\u001b[1m\r\nPACKAGE_BLACKLIST\u001b(B\u001b[m=^pcp\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^mythexport\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^prewikka\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^slapd\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^m\r\nailman3-web\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^freedombox\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^kubuntu-installer-prompt\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^runit\u001b[36m\u001b[1m\r\n$$\u001b(B\u001b[m|^amazon-ec2-net-utils\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^xemacs21-nomule\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^uvtool-libvirt\u001b[36m\u001b[1m$\r\n$\u001b(B\u001b[m|^epoptes\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^namazu2\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^sympa\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^firebuild\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^epic4\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^epic5\u001b[36m\u001b[1m$\r\n$\u001b(B\u001b[m|^initramfs-tools\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^linux-image-6.8.0-1009-xilinx|\u001b[36m\u001b[1m$$\u001b(B\u001b[m^sympa\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[10;62H\u001b[1K\n\u001b[1K\u001b[36m\u001b[1m\rall:\u001b(B\u001b[m\u001b[12;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mbash -c \"touch ./data/*\"\u001b[35m\r\n    @\u001b[36m\u001b[1m$(MAKE)\u001b(B\u001b[m\u001b[38;5;130m data/04.run-help-extractor\u001b[39m\u001b[23X\u001b[38;5;130m\r\n    \u001b[36m# finished? really? give yourself a pat on the mouth\u001b[39m\u001b[6X\u001b[15;62H\u001b[1K\u001b[36m\r\n## Step 1a: List default binaries installed in Ubuntu.\u001b[39m\u001b[8X\u001b[36m\u001b[1m\r\ndata/01a.ubuntu-bin:\u001b(B\u001b[m scripts/01a.standard-binaries.sh\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Getting standard binary names\"\u001b[39m\u001b[16X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01a.standard-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[12X\u001b[20;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[21;62H\u001b[1K\u001b[36m\r\n## Step 1b: List all possible Ubuntu binaries from all availab\u001b[39m\u001b[23;62H\u001b[1K\u001b[36m\rle packages\u001b[1m\r\ndata/01b.ubuntu-binaries-and-packages:\u001b(B\u001b[m scripts/01b.all-ubuntu-\u001b[25;62H\u001b[1K\rbinaries.sh\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Getting all possible binary names\"\u001b[39m\u001b[12X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01b.all-ubuntu-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[28;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C23,19-22\u001b[7X\u001b[7C2%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;22H"]
[75.264494, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[36m\u001b[1m\u001b[H.SHELLFLAGS \u001b(B\u001b[m:= -c -e\u001b[2;62H\u001b[1K\n\u001b[1K\u001b[36m\u001b[1m\rMAX_PACKAGES\u001b(B\u001b[m=15000\u001b[36m\u001b[1m\r\nPACKAGE_BLACKLIST\u001b(B\u001b[m=^pcp\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^mythexport\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^prewikka\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^slapd\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^m\r\nailman3-web\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^freedombox\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^kubuntu-installer-prompt\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^runit\u001b[36m\u001b[1m\r\n$$\u001b(B\u001b[m|^amazon-ec2-net-utils\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^xemacs21-nomule\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^uvtool-libvirt\u001b[36m\u001b[1m$\r\n$\u001b(B\u001b[m|^epoptes\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^namazu2\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^sympa\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^firebuild\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^epic4\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^epic5\u001b[36m\u001b[1m$\r\n$\u001b(B\u001b[m|^initramfs-tools\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^linux-image-6.8.0-1009-xilinx|\u001b[36m\u001b[1m$$\u001b(B\u001b[m^sympa\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[9;62H\u001b[1K\n\u001b[1K\u001b[36m\u001b[1m\rall:\u001b(B\u001b[m\u001b[11;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mbash -c \"touch ./data/*\"\u001b[35m\r\n    @\u001b[36m\u001b[1m$(MAKE)\u001b(B\u001b[m\u001b[38;5;130m data/04.run-help-extractor\u001b[39m\u001b[23X\u001b[38;5;130m\r\n    \u001b[36m# finished? really? give yourself a pat on the mouth\u001b[39m\u001b[6X\u001b[14;62H\u001b[1K\u001b[36m\r\n## Step 1a: List default binaries installed in Ubuntu.\u001b[39m\u001b[8X\u001b[36m\u001b[1m\r\ndata/01a.ubuntu-bin:\u001b(B\u001b[m scripts/01a.standard-binaries.sh\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Getting standard binary names\"\u001b[39m\u001b[16X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01a.standard-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[12X\u001b[19;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[20;62H\u001b[1K\u001b[36m\r\n## Step 1b: List all possible Ubuntu binaries from all availab\u001b[39m\u001b[22;62H\u001b[1K\u001b[36m\rle packages\u001b[1m\r\ndata/01b.ubuntu-binaries-and-packages:\u001b(B\u001b[m scripts/01b.all-ubuntu-\u001b[24;62H\u001b[1K\rbinaries.sh\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Getting all possible binary names\"\u001b[39m\u001b[12X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01b.all-ubuntu-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[27;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[28;62H\u001b[1K\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C24,1\u001b[11X\u001b[11C4%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[75.285963, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\n\u001b[1K\u001b[36m\u001b[1m\rMAX_PACKAGES\u001b(B\u001b[m=15000\u001b[36m\u001b[1m\r\nPACKAGE_BLACKLIST\u001b(B\u001b[m=^pcp\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^mythexport\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^prewikka\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^slapd\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^m\r\nailman3-web\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^freedombox\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^kubuntu-installer-prompt\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^runit\u001b[36m\u001b[1m\r\n$$\u001b(B\u001b[m|^amazon-ec2-net-utils\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^xemacs21-nomule\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^uvtool-libvirt\u001b[36m\u001b[1m$\r\n$\u001b(B\u001b[m|^epoptes\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^namazu2\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^sympa\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^firebuild\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^epic4\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^epic5\u001b[36m\u001b[1m$\r\n$\u001b(B\u001b[m|^initramfs-tools\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^linux-image-6.8.0-1009-xilinx|\u001b[36m\u001b[1m$$\u001b(B\u001b[m^sympa\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[8;62H\u001b[1K\n\u001b[1K\u001b[36m\u001b[1m\rall:\u001b(B\u001b[m\u001b[10;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mbash -c \"touch ./data/*\"\u001b[35m\r\n    @\u001b[36m\u001b[1m$(MAKE)\u001b(B\u001b[m\u001b[38;5;130m data/04.run-help-extractor\u001b[39m\u001b[23X\u001b[38;5;130m\r\n    \u001b[36m# finished? really? give yourself a pat on the mouth\u001b[39m\u001b[6X\u001b[13;62H\u001b[1K\u001b[36m\r\n## Step 1a: List default binaries installed in Ubuntu.\u001b[39m\u001b[8X\u001b[36m\u001b[1m\r\ndata/01a.ubuntu-bin:\u001b(B\u001b[m scripts/01a.standard-binaries.sh\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Getting standard binary names\"\u001b[39m\u001b[16X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01a.standard-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[12X\u001b[18;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[19;62H\u001b[1K\u001b[36m\r\n## Step 1b: List all possible Ubuntu binaries from all availab\u001b[39m\u001b[21;62H\u001b[1K\u001b[36m\rle packages\u001b[1m\r\ndata/01b.ubuntu-binaries-and-packages:\u001b(B\u001b[m scripts/01b.all-ubuntu-\u001b[23;62H\u001b[1K\rbinaries.sh\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Getting all possible binary names\"\u001b[39m\u001b[12X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01b.all-ubuntu-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[26;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[27;62H\u001b[1K\u001b[36m\r\n## Step 1 final: combine the outputs into a list of binaries.\u001b[39m\u001b[1X\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C25,62\u001b[10X\u001b[10C6%\u001b[1X\u001b[?12l\u001b[?25h\u001b[A"]
[75.305933, "o", "\u001b[?25l\u001b[36m\u001b[1m\u001b[HPACKAGE_BLACKLIST\u001b(B\u001b[m=^pcp\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^mythexport\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^prewikka\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^slapd\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^m\r\nailman3-web\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^freedombox\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^kubuntu-installer-prompt\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^runit\u001b[36m\u001b[1m\r\n$$\u001b(B\u001b[m|^amazon-ec2-net-utils\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^xemacs21-nomule\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^uvtool-libvirt\u001b[36m\u001b[1m$\r\n$\u001b(B\u001b[m|^epoptes\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^namazu2\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^sympa\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^firebuild\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^epic4\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^epic5\u001b[36m\u001b[1m$\r\n$\u001b(B\u001b[m|^initramfs-tools\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^linux-image-6.8.0-1009-xilinx|\u001b[36m\u001b[1m$$\u001b(B\u001b[m^sympa\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[6;62H\u001b[1K\n\u001b[1K\u001b[36m\u001b[1m\rall:\u001b(B\u001b[m\u001b[8;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mbash -c \"touch ./data/*\"\u001b[35m\r\n    @\u001b[36m\u001b[1m$(MAKE)\u001b(B\u001b[m\u001b[38;5;130m data/04.run-help-extractor\u001b[39m\u001b[23X\u001b[38;5;130m\r\n    \u001b[36m# finished? really? give yourself a pat on the mouth\u001b[39m\u001b[6X\u001b[11;62H\u001b[1K\u001b[36m\r\n## Step 1a: List default binaries installed in Ubuntu.\u001b[39m\u001b[8X\u001b[36m\u001b[1m\r\ndata/01a.ubuntu-bin:\u001b(B\u001b[m scripts/01a.standard-binaries.sh\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Getting standard binary names\"\u001b[39m\u001b[16X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01a.standard-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[12X\u001b[16;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[17;62H\u001b[1K\u001b[36m\r\n## Step 1b: List all possible Ubuntu binaries from all availab\u001b[39m\u001b[19;62H\u001b[1K\u001b[36m\rle packages\u001b[1m\r\ndata/01b.ubuntu-binaries-and-packages:\u001b(B\u001b[m scripts/01b.all-ubuntu-\u001b[21;62H\u001b[1K\rbinaries.sh\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Getting all possible binary names\"\u001b[39m\u001b[12X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01b.all-ubuntu-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[24;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[25;62H\u001b[1K\u001b[36m\r\n## Step 1 final: combine the outputs into a list of binaries.\u001b[39m\u001b[1X\u001b[36m\u001b[1m\r\ndata/01.binaries:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages data/0\r\n1a.ubuntu-bin scripts/01c.combine.sh\u001b[26X\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C26,99\u001b[9X\u001b[9C10%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;37H"]
[75.348425, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\n\u001b[1K\u001b[36m\u001b[1m\rall:\u001b(B\u001b[m\u001b[3;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mbash -c \"touch ./data/*\"\u001b[35m\r\n    @\u001b[36m\u001b[1m$(MAKE)\u001b(B\u001b[m\u001b[38;5;130m data/04.run-help-extractor\u001b[39m\u001b[23X\u001b[38;5;130m\r\n    \u001b[36m# finished? really? give yourself a pat on the mouth\u001b[39m\u001b[6X\u001b[6;62H\u001b[1K\u001b[36m\r\n## Step 1a: List default binaries installed in Ubuntu.\u001b[39m\u001b[8X\u001b[36m\u001b[1m\r\ndata/01a.ubuntu-bin:\u001b(B\u001b[m scripts/01a.standard-binaries.sh\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Getting standard binary names\"\u001b[39m\u001b[16X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01a.standard-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[12X\u001b[11;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[12;62H\u001b[1K\u001b[36m\r\n## Step 1b: List all possible Ubuntu binaries from all availab\u001b[39m\u001b[14;62H\u001b[1K\u001b[36m\rle packages\u001b[1m\r\ndata/01b.ubuntu-binaries-and-packages:\u001b(B\u001b[m scripts/01b.all-ubuntu-\u001b[16;62H\u001b[1K\rbinaries.sh\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Getting all possible binary names\"\u001b[39m\u001b[12X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01b.all-ubuntu-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[19;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[20;62H\u001b[1K\u001b[36m\r\n## Step 1 final: combine the outputs into a list of binaries.\u001b[39m\u001b[1X\u001b[36m\u001b[1m\r\ndata/01.binaries:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages data/0\r\n1a.ubuntu-bin scripts/01c.combine.sh\u001b[26X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Combining the binary lists\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01c.combine.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[22X\u001b[26;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[27;62H\u001b[1K\u001b[36m\r\n## Step 2: Use LLM to rank the binaries in popularity order.\u001b[39m\u001b[2X\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C27,41-44      13%\u001b[1X\u001b[?12l\u001b[?25h\u001b[24;44H"]
[75.368335, "o", "\u001b[29;46H8,38-41\u001b[25;41H"]
[75.409318, "o", "\u001b[29;46H9,19-22\u001b[26;22H"]
[75.428895, "o", "\u001b[29;45H30,1    \u001b[27;1H"]
[75.471855, "o", "\u001b[29;46H1,61\u001b[28;61H"]
[75.49184, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[36m\u001b[1m\u001b[Hall:\u001b(B\u001b[m\u001b[2;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mbash -c \"touch ./data/*\"\u001b[35m\r\n    @\u001b[36m\u001b[1m$(MAKE)\u001b(B\u001b[m\u001b[38;5;130m data/04.run-help-extractor\u001b[39m\u001b[23X\u001b[38;5;130m\r\n    \u001b[36m# finished? really? give yourself a pat on the mouth\u001b[39m\u001b[6X\u001b[5;62H\u001b[1K\u001b[36m\r\n## Step 1a: List default binaries installed in Ubuntu.\u001b[39m\u001b[8X\u001b[36m\u001b[1m\r\ndata/01a.ubuntu-bin:\u001b(B\u001b[m scripts/01a.standard-binaries.sh\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Getting standard binary names\"\u001b[39m\u001b[16X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01a.standard-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[12X\u001b[10;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[11;62H\u001b[1K\u001b[36m\r\n## Step 1b: List all possible Ubuntu binaries from all availab\u001b[39m\u001b[13;62H\u001b[1K\u001b[36m\rle packages\u001b[1m\r\ndata/01b.ubuntu-binaries-and-packages:\u001b(B\u001b[m scripts/01b.all-ubuntu-\u001b[15;62H\u001b[1K\rbinaries.sh\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Getting all possible binary names\"\u001b[39m\u001b[12X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01b.all-ubuntu-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[18;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[19;62H\u001b[1K\u001b[36m\r\n## Step 1 final: combine the outputs into a list of binaries.\u001b[39m\u001b[1X\u001b[36m\u001b[1m\r\ndata/01.binaries:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages data/0\r\n1a.ubuntu-bin scripts/01c.combine.sh\u001b[26X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Combining the binary lists\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01c.combine.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[22X\u001b[25;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[26;62H\u001b[1K\u001b[36m\r\n## Step 2: Use LLM to rank the binaries in popularity order.\u001b[39m\u001b[2X\u001b[36m\u001b[1m\r\ndata/02a.popularity-contest:\u001b(B\u001b[m data/01.binaries\u001b[17X\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C32,46\u001b[9X\u001b[9C15%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;46H"]
[75.532772, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[35m\u001b[H    @\u001b[38;5;130mbash -c \"touch ./data/*\"\u001b[35m\r\n    @\u001b[36m\u001b[1m$(MAKE)\u001b(B\u001b[m\u001b[38;5;130m data/04.run-help-extractor\u001b[39m\u001b[23X\u001b[38;5;130m\r\n    \u001b[36m# finished? really? give yourself a pat on the mouth\u001b[39m\u001b[6X\u001b[4;62H\u001b[1K\u001b[36m\r\n## Step 1a: List default binaries installed in Ubuntu.\u001b[39m\u001b[8X\u001b[36m\u001b[1m\r\ndata/01a.ubuntu-bin:\u001b(B\u001b[m scripts/01a.standard-binaries.sh\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Getting standard binary names\"\u001b[39m\u001b[16X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01a.standard-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[12X\u001b[9;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[10;62H\u001b[1K\u001b[36m\r\n## Step 1b: List all possible Ubuntu binaries from all availab\u001b[39m\u001b[12;62H\u001b[1K\u001b[36m\rle packages\u001b[1m\r\ndata/01b.ubuntu-binaries-and-packages:\u001b(B\u001b[m scripts/01b.all-ubuntu-\u001b[14;62H\u001b[1K\rbinaries.sh\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Getting all possible binary names\"\u001b[39m\u001b[12X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01b.all-ubuntu-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[17;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[18;62H\u001b[1K\u001b[36m\r\n## Step 1 final: combine the outputs into a list of binaries.\u001b[39m\u001b[1X\u001b[36m\u001b[1m\r\ndata/01.binaries:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages data/0\r\n1a.ubuntu-bin scripts/01c.combine.sh\u001b[26X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Combining the binary lists\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01c.combine.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[22X\u001b[24;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[25;62H\u001b[1K\u001b[36m\r\n## Step 2: Use LLM to rank the binaries in popularity order.\u001b[39m\u001b[2X\u001b[36m\u001b[1m\r\ndata/02a.popularity-contest:\u001b(B\u001b[m data/01.binaries\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130mecho \"02 - Running popularity contest\"\u001b[39m\u001b[19X\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C33,41-44      17%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;44H"]
[75.553807, "o", "\u001b[?25l\u001b[35m\u001b[H    @\u001b[36m\u001b[1m$(MAKE)\u001b(B\u001b[m\u001b[38;5;130m data/04.run-help-extractor\u001b[39m\u001b[23X\u001b[38;5;130m\r\n    \u001b[36m# finished? really? give yourself a pat on the mouth\u001b[39m\u001b[6X\u001b[3;62H\u001b[1K\u001b[36m\r\n## Step 1a: List default binaries installed in Ubuntu.\u001b[39m\u001b[8X\u001b[36m\u001b[1m\r\ndata/01a.ubuntu-bin:\u001b(B\u001b[m scripts/01a.standard-binaries.sh\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Getting standard binary names\"\u001b[39m\u001b[16X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01a.standard-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[12X\u001b[8;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[9;62H\u001b[1K\u001b[36m\r\n## Step 1b: List all possible Ubuntu binaries from all availab\u001b[39m\u001b[11;62H\u001b[1K\u001b[36m\rle packages\u001b[1m\r\ndata/01b.ubuntu-binaries-and-packages:\u001b(B\u001b[m scripts/01b.all-ubuntu-\u001b[13;62H\u001b[1K\rbinaries.sh\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Getting all possible binary names\"\u001b[39m\u001b[12X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01b.all-ubuntu-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[16;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[17;62H\u001b[1K\u001b[36m\r\n## Step 1 final: combine the outputs into a list of binaries.\u001b[39m\u001b[1X\u001b[36m\u001b[1m\r\ndata/01.binaries:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages data/0\r\n1a.ubuntu-bin scripts/01c.combine.sh\u001b[26X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Combining the binary lists\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01c.combine.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[22X\u001b[23;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[24;62H\u001b[1K\u001b[36m\r\n## Step 2: Use LLM to rank the binaries in popularity order.\u001b[39m\u001b[2X\u001b[36m\u001b[1m\r\ndata/02a.popularity-contest:\u001b(B\u001b[m data/01.binaries\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130mecho \"02 - Running popularity contest\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130mtimestamp=\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130m\u001b[46m(\u001b[49mdate -u +\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mY-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mm-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130md_\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mH\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mM\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mS\u001b[46m)\u001b[39m\u001b[49m\u001b[19X\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C34,41-44      19%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;44H"]
[75.594405, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[36m\r\n## Step 1a: List default binaries installed in Ubuntu.\u001b[39m\u001b[8X\u001b[36m\u001b[1m\r\ndata/01a.ubuntu-bin:\u001b(B\u001b[m scripts/01a.standard-binaries.sh\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Getting standard binary names\"\u001b[39m\u001b[16X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01a.standard-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[12X\u001b[6;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[7;62H\u001b[1K\u001b[36m\r\n## Step 1b: List all possible Ubuntu binaries from all availab\u001b[39m\u001b[9;62H\u001b[1K\u001b[36m\rle packages\u001b[1m\r\ndata/01b.ubuntu-binaries-and-packages:\u001b(B\u001b[m scripts/01b.all-ubuntu-\u001b[11;62H\u001b[1K\rbinaries.sh\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Getting all possible binary names\"\u001b[39m\u001b[12X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01b.all-ubuntu-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[14;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[15;62H\u001b[1K\u001b[36m\r\n## Step 1 final: combine the outputs into a list of binaries.\u001b[39m\u001b[1X\u001b[36m\u001b[1m\r\ndata/01.binaries:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages data/0\r\n1a.ubuntu-bin scripts/01c.combine.sh\u001b[26X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Combining the binary lists\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01c.combine.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[22X\u001b[21;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[22;62H\u001b[1K\u001b[36m\r\n## Step 2: Use LLM to rank the binaries in popularity order.\u001b[39m\u001b[2X\u001b[36m\u001b[1m\r\ndata/02a.popularity-contest:\u001b(B\u001b[m data/01.binaries\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130mecho \"02 - Running popularity contest\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130mtimestamp=\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130m(date -u +\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mY-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mm-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130md_\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mH\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mM\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mS)\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/02.popularity_contest.py data/01.binaries log >\u001b[39m\u001b[28;62H\u001b[1K\u001b[38;5;130m\r \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\"\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C35,81-84      23%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;22H"]
[75.614822, "o", "\u001b[?25l\u001b[36m\u001b[H## Step 1a: List default binaries installed in Ubuntu.\u001b[39m\u001b[8X\u001b[36m\u001b[1m\r\ndata/01a.ubuntu-bin:\u001b(B\u001b[m scripts/01a.standard-binaries.sh\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Getting standard binary names\"\u001b[39m\u001b[16X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01a.standard-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[12X\u001b[5;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[6;62H\u001b[1K\u001b[36m\r\n## Step 1b: List all possible Ubuntu binaries from all availab\u001b[39m\u001b[8;62H\u001b[1K\u001b[36m\rle packages\u001b[1m\r\ndata/01b.ubuntu-binaries-and-packages:\u001b(B\u001b[m scripts/01b.all-ubuntu-\u001b[10;62H\u001b[1K\rbinaries.sh\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Getting all possible binary names\"\u001b[39m\u001b[12X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01b.all-ubuntu-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[13;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[14;62H\u001b[1K\u001b[36m\r\n## Step 1 final: combine the outputs into a list of binaries.\u001b[39m\u001b[1X\u001b[36m\u001b[1m\r\ndata/01.binaries:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages data/0\r\n1a.ubuntu-bin scripts/01c.combine.sh\u001b[26X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Combining the binary lists\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01c.combine.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[22X\u001b[20;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[21;62H\u001b[1K\u001b[36m\r\n## Step 2: Use LLM to rank the binaries in popularity order.\u001b[39m\u001b[2X\u001b[36m\u001b[1m\r\ndata/02a.popularity-contest:\u001b(B\u001b[m data/01.binaries\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130mecho \"02 - Running popularity contest\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130mtimestamp=\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130m(date -u +\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mY-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mm-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130md_\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mH\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mM\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mS)\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/02.popularity_contest.py data/01.binaries log >\u001b[39m\u001b[27;62H\u001b[1K\u001b[38;5;130m\r \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mcp \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[29X\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C36,31-34      25%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;34H"]
[75.658171, "o", "\u001b[?25l\u001b[36m\u001b[1m\u001b[Hdata/01a.ubuntu-bin:\u001b(B\u001b[m scripts/01a.standard-binaries.sh\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Getting standard binary names\"\u001b[39m\u001b[16X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01a.standard-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[12X\u001b[4;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[5;62H\u001b[1K\u001b[36m\r\n## Step 1b: List all possible Ubuntu binaries from all availab\u001b[39m\u001b[7;62H\u001b[1K\u001b[36m\rle packages\u001b[1m\r\ndata/01b.ubuntu-binaries-and-packages:\u001b(B\u001b[m scripts/01b.all-ubuntu-\u001b[9;62H\u001b[1K\rbinaries.sh\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Getting all possible binary names\"\u001b[39m\u001b[12X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01b.all-ubuntu-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[12;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[13;62H\u001b[1K\u001b[36m\r\n## Step 1 final: combine the outputs into a list of binaries.\u001b[39m\u001b[1X\u001b[36m\u001b[1m\r\ndata/01.binaries:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages data/0\r\n1a.ubuntu-bin scripts/01c.combine.sh\u001b[26X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Combining the binary lists\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01c.combine.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[22X\u001b[19;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[20;62H\u001b[1K\u001b[36m\r\n## Step 2: Use LLM to rank the binaries in popularity order.\u001b[39m\u001b[2X\u001b[36m\u001b[1m\r\ndata/02a.popularity-contest:\u001b(B\u001b[m data/01.binaries\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130mecho \"02 - Running popularity contest\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130mtimestamp=\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130m(date -u +\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mY-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mm-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130md_\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mH\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mM\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mS)\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/02.popularity_contest.py data/01.binaries log >\u001b[39m\u001b[26;62H\u001b[1K\u001b[38;5;130m\r \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mcp \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[29X\u001b[28;62H\u001b[1K\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C37,1\u001b[10X\u001b[10C27%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[75.679981, "o", "\u001b[?25l\u001b[35m\u001b[H    @\u001b[38;5;130m./scripts/01a.standard-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[12X\u001b[2;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[3;62H\u001b[1K\u001b[36m\r\n## Step 1b: List all possible Ubuntu binaries from all availab\u001b[39m\u001b[5;62H\u001b[1K\u001b[36m\rle packages\u001b[1m\r\ndata/01b.ubuntu-binaries-and-packages:\u001b(B\u001b[m scripts/01b.all-ubuntu-\u001b[7;62H\u001b[1K\rbinaries.sh\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Getting all possible binary names\"\u001b[39m\u001b[12X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01b.all-ubuntu-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[10;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[11;62H\u001b[1K\u001b[36m\r\n## Step 1 final: combine the outputs into a list of binaries.\u001b[39m\u001b[1X\u001b[36m\u001b[1m\r\ndata/01.binaries:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages data/0\r\n1a.ubuntu-bin scripts/01c.combine.sh\u001b[26X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Combining the binary lists\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01c.combine.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[22X\u001b[17;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[18;62H\u001b[1K\u001b[36m\r\n## Step 2: Use LLM to rank the binaries in popularity order.\u001b[39m\u001b[2X\u001b[36m\u001b[1m\r\ndata/02a.popularity-contest:\u001b(B\u001b[m data/01.binaries\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130mecho \"02 - Running popularity contest\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130mtimestamp=\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130m(date -u +\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mY-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mm-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130md_\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mH\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mM\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mS)\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/02.popularity_contest.py data/01.binaries log >\u001b[39m\u001b[24;62H\u001b[1K\u001b[38;5;130m\r \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mcp \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[29X\u001b[26;62H\u001b[1K\u001b[36m\r\n## Step 3a: Prioritize the packages based on the binary rankin\u001b[39m\u001b[28;62H\u001b[1K\u001b[36m\rgs.\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C38,66\u001b[9X\u001b[9C31%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;4H"]
[75.721419, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[36m\r\n## Step 1b: List all possible Ubuntu binaries from all availab\u001b[39m\u001b[3;62H\u001b[1K\u001b[36m\rle packages\u001b[1m\r\ndata/01b.ubuntu-binaries-and-packages:\u001b(B\u001b[m scripts/01b.all-ubuntu-\u001b[5;62H\u001b[1K\rbinaries.sh\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Getting all possible binary names\"\u001b[39m\u001b[12X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01b.all-ubuntu-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[8;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[9;62H\u001b[1K\u001b[36m\r\n## Step 1 final: combine the outputs into a list of binaries.\u001b[39m\u001b[1X\u001b[36m\u001b[1m\r\ndata/01.binaries:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages data/0\r\n1a.ubuntu-bin scripts/01c.combine.sh\u001b[26X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Combining the binary lists\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01c.combine.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[22X\u001b[15;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[16;62H\u001b[1K\u001b[36m\r\n## Step 2: Use LLM to rank the binaries in popularity order.\u001b[39m\u001b[2X\u001b[36m\u001b[1m\r\ndata/02a.popularity-contest:\u001b(B\u001b[m data/01.binaries\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130mecho \"02 - Running popularity contest\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130mtimestamp=\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130m(date -u +\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mY-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mm-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130md_\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mH\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mM\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mS)\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/02.popularity_contest.py data/01.binaries log >\u001b[39m\u001b[22;62H\u001b[1K\u001b[38;5;130m\r \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mcp \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[29X\u001b[24;62H\u001b[1K\u001b[36m\r\n## Step 3a: Prioritize the packages based on the binary rankin\u001b[39m\u001b[26;62H\u001b[1K\u001b[36m\rgs.\u001b[1m\r\ndata/03a.package-priority:\u001b(B\u001b[m data/02a.popularity-contest scripts\u001b[28;62H\u001b[1K\r/03a.package_priority.py\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C39,87\u001b[9X\u001b[9C34%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;25H"]
[75.741255, "o", "\u001b[?25l\u001b[36m\u001b[H## Step 1b: List all possible Ubuntu binaries from all availab\u001b[39m\u001b[2;62H\u001b[1K\u001b[36m\rle packages\u001b[1m\r\ndata/01b.ubuntu-binaries-and-packages:\u001b(B\u001b[m scripts/01b.all-ubuntu-\u001b[4;62H\u001b[1K\rbinaries.sh\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Getting all possible binary names\"\u001b[39m\u001b[12X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01b.all-ubuntu-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[7;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[8;62H\u001b[1K\u001b[36m\r\n## Step 1 final: combine the outputs into a list of binaries.\u001b[39m\u001b[1X\u001b[36m\u001b[1m\r\ndata/01.binaries:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages data/0\r\n1a.ubuntu-bin scripts/01c.combine.sh\u001b[26X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Combining the binary lists\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01c.combine.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[22X\u001b[14;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[15;62H\u001b[1K\u001b[36m\r\n## Step 2: Use LLM to rank the binaries in popularity order.\u001b[39m\u001b[2X\u001b[36m\u001b[1m\r\ndata/02a.popularity-contest:\u001b(B\u001b[m data/01.binaries\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130mecho \"02 - Running popularity contest\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130mtimestamp=\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130m(date -u +\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mY-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mm-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130md_\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mH\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mM\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mS)\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/02.popularity_contest.py data/01.binaries log >\u001b[39m\u001b[21;62H\u001b[1K\u001b[38;5;130m\r \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mcp \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[29X\u001b[23;62H\u001b[1K\u001b[36m\r\n## Step 3a: Prioritize the packages based on the binary rankin\u001b[39m\u001b[25;62H\u001b[1K\u001b[36m\rgs.\u001b[1m\r\ndata/03a.package-priority:\u001b(B\u001b[m data/02a.popularity-contest scripts\u001b[27;62H\u001b[1K\r/03a.package_priority.py\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Calculating package priority\"\u001b[39m\u001b[17X\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C40,43-46      36%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;46H"]
[75.762057, "o", "\u001b[?25l\u001b[36m\u001b[1m\u001b[Hdata/01b.ubuntu-binaries-and-packages:\u001b(B\u001b[m scripts/01b.all-ubuntu-\u001b[2;62H\u001b[1K\rbinaries.sh\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Getting all possible binary names\"\u001b[39m\u001b[12X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01b.all-ubuntu-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[5;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[6;62H\u001b[1K\u001b[36m\r\n## Step 1 final: combine the outputs into a list of binaries.\u001b[39m\u001b[1X\u001b[36m\u001b[1m\r\ndata/01.binaries:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages data/0\r\n1a.ubuntu-bin scripts/01c.combine.sh\u001b[26X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Combining the binary lists\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01c.combine.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[22X\u001b[12;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[13;62H\u001b[1K\u001b[36m\r\n## Step 2: Use LLM to rank the binaries in popularity order.\u001b[39m\u001b[2X\u001b[36m\u001b[1m\r\ndata/02a.popularity-contest:\u001b(B\u001b[m data/01.binaries\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130mecho \"02 - Running popularity contest\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130mtimestamp=\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130m(date -u +\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mY-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mm-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130md_\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mH\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mM\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mS)\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/02.popularity_contest.py data/01.binaries log >\u001b[39m\u001b[19;62H\u001b[1K\u001b[38;5;130m\r \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mcp \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[29X\u001b[21;62H\u001b[1K\u001b[36m\r\n## Step 3a: Prioritize the packages based on the binary rankin\u001b[39m\u001b[23;62H\u001b[1K\u001b[36m\rgs.\u001b[1m\r\ndata/03a.package-priority:\u001b(B\u001b[m data/02a.popularity-contest scripts\u001b[25;62H\u001b[1K\r/03a.package_priority.py\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Calculating package priority\"\u001b[39m\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03a.package_priority.py > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[13X\u001b[28;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C41,47-50      39%\u001b[1X\u001b[?12l\u001b[?25h\u001b[27;50H"]
[75.802704, "o", "\u001b[29;46H2,19-22\u001b[28;22H"]
[75.824413, "o", "\u001b[?25l\u001b[35m\u001b[H    @\u001b[38;5;130mecho \"01 - Getting all possible binary names\"\u001b[39m\u001b[12X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01b.all-ubuntu-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[3;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[4;62H\u001b[1K\u001b[36m\r\n## Step 1 final: combine the outputs into a list of binaries.\u001b[39m\u001b[1X\u001b[36m\u001b[1m\r\ndata/01.binaries:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages data/0\r\n1a.ubuntu-bin scripts/01c.combine.sh\u001b[26X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Combining the binary lists\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01c.combine.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[22X\u001b[10;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[11;62H\u001b[1K\u001b[36m\r\n## Step 2: Use LLM to rank the binaries in popularity order.\u001b[39m\u001b[2X\u001b[36m\u001b[1m\r\ndata/02a.popularity-contest:\u001b(B\u001b[m data/01.binaries\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130mecho \"02 - Running popularity contest\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130mtimestamp=\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130m(date -u +\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mY-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mm-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130md_\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mH\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mM\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mS)\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/02.popularity_contest.py data/01.binaries log >\u001b[39m\u001b[17;62H\u001b[1K\u001b[38;5;130m\r \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mcp \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[29X\u001b[19;62H\u001b[1K\u001b[36m\r\n## Step 3a: Prioritize the packages based on the binary rankin\u001b[39m\u001b[21;62H\u001b[1K\u001b[36m\rgs.\u001b[1m\r\ndata/03a.package-priority:\u001b(B\u001b[m data/02a.popularity-contest scripts\u001b[23;62H\u001b[1K\r/03a.package_priority.py\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Calculating package priority\"\u001b[39m\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03a.package_priority.py > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[13X\u001b[26;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[27;62H\u001b[1K\u001b[34m\u001b[1m\r\n@                                                             \u001b(B\u001b[m\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C43,1\u001b[10X\u001b[10C41%\u001b[1X\u001b[?12l\u001b[?25h\u001b[27;1H"]
[75.864647, "o", "\u001b[?25l\u001b[35m\u001b[H    @\u001b[38;5;130m./scripts/01b.all-ubuntu-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[2;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[3;62H\u001b[1K\u001b[36m\r\n## Step 1 final: combine the outputs into a list of binaries.\u001b[39m\u001b[1X\u001b[36m\u001b[1m\r\ndata/01.binaries:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages data/0\r\n1a.ubuntu-bin scripts/01c.combine.sh\u001b[26X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Combining the binary lists\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01c.combine.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[22X\u001b[9;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[10;62H\u001b[1K\u001b[36m\r\n## Step 2: Use LLM to rank the binaries in popularity order.\u001b[39m\u001b[2X\u001b[36m\u001b[1m\r\ndata/02a.popularity-contest:\u001b(B\u001b[m data/01.binaries\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130mecho \"02 - Running popularity contest\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130mtimestamp=\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130m(date -u +\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mY-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mm-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130md_\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mH\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mM\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mS)\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/02.popularity_contest.py data/01.binaries log >\u001b[39m\u001b[16;62H\u001b[1K\u001b[38;5;130m\r \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mcp \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[29X\u001b[18;62H\u001b[1K\u001b[36m\r\n## Step 3a: Prioritize the packages based on the binary rankin\u001b[39m\u001b[20;62H\u001b[1K\u001b[36m\rgs.\u001b[1m\r\ndata/03a.package-priority:\u001b(B\u001b[m data/02a.popularity-contest scripts\u001b[22;62H\u001b[1K\r/03a.package_priority.py\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Calculating package priority\"\u001b[39m\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03a.package_priority.py > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[13X\u001b[25;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[26;62H\u001b[1K\u001b[36m\r\n## Step 3b: Limit the number of packages based on how many we \u001b[39m\u001b[28;62H\u001b[1K\u001b[36m\rwant to install.\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C44,79\u001b[9X\u001b[9C43%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;17H"]
[75.884149, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[35m\u001b[H    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[2;62H\u001b[1K\u001b[36m\r\n## Step 1 final: combine the outputs into a list of binaries.\u001b[39m\u001b[1X\u001b[36m\u001b[1m\r\ndata/01.binaries:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages data/0\r\n1a.ubuntu-bin scripts/01c.combine.sh\u001b[26X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Combining the binary lists\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01c.combine.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[22X\u001b[8;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[9;62H\u001b[1K\u001b[36m\r\n## Step 2: Use LLM to rank the binaries in popularity order.\u001b[39m\u001b[2X\u001b[36m\u001b[1m\r\ndata/02a.popularity-contest:\u001b(B\u001b[m data/01.binaries\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130mecho \"02 - Running popularity contest\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130mtimestamp=\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130m(date -u +\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mY-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mm-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130md_\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mH\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mM\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mS)\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/02.popularity_contest.py data/01.binaries log >\u001b[39m\u001b[15;62H\u001b[1K\u001b[38;5;130m\r \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mcp \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[29X\u001b[17;62H\u001b[1K\u001b[36m\r\n## Step 3a: Prioritize the packages based on the binary rankin\u001b[39m\u001b[19;62H\u001b[1K\u001b[36m\rgs.\u001b[1m\r\ndata/03a.package-priority:\u001b(B\u001b[m data/02a.popularity-contest scripts\u001b[21;62H\u001b[1K\r/03a.package_priority.py\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Calculating package priority\"\u001b[39m\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03a.package_priority.py > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[13X\u001b[24;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[25;62H\u001b[1K\u001b[36m\r\n## Step 3b: Limit the number of packages based on how many we \u001b[39m\u001b[27;62H\u001b[1K\u001b[36m\rwant to install.\u001b[1m\r\ndata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\u001b[10X\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C45,53\u001b[9X\u001b[9C45%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;53H"]
[75.923964, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[36m\r\n## Step 1 final: combine the outputs into a list of binaries.\u001b[39m\u001b[1X\u001b[36m\u001b[1m\r\ndata/01.binaries:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages data/0\r\n1a.ubuntu-bin scripts/01c.combine.sh\u001b[26X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Combining the binary lists\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01c.combine.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[22X\u001b[7;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[8;62H\u001b[1K\u001b[36m\r\n## Step 2: Use LLM to rank the binaries in popularity order.\u001b[39m\u001b[2X\u001b[36m\u001b[1m\r\ndata/02a.popularity-contest:\u001b(B\u001b[m data/01.binaries\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130mecho \"02 - Running popularity contest\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130mtimestamp=\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130m(date -u +\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mY-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mm-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130md_\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mH\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mM\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mS)\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/02.popularity_contest.py data/01.binaries log >\u001b[39m\u001b[14;62H\u001b[1K\u001b[38;5;130m\r \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mcp \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[29X\u001b[16;62H\u001b[1K\u001b[36m\r\n## Step 3a: Prioritize the packages based on the binary rankin\u001b[39m\u001b[18;62H\u001b[1K\u001b[36m\rgs.\u001b[1m\r\ndata/03a.package-priority:\u001b(B\u001b[m data/02a.popularity-contest scripts\u001b[20;62H\u001b[1K\r/03a.package_priority.py\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Calculating package priority\"\u001b[39m\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03a.package_priority.py > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[13X\u001b[23;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[24;62H\u001b[1K\u001b[36m\r\n## Step 3b: Limit the number of packages based on how many we \u001b[39m\u001b[26;62H\u001b[1K\u001b[36m\rwant to install.\u001b[1m\r\ndata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\u001b[39m\u001b[9X\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C46,51-54      47%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;54H"]
[77.134482, "o", "\u001b[29;46H5,53   \u001b[2A"]
[77.318342, "o", "\u001b[29;46H4,79\u001b[26;17H"]
[77.466863, "o", "\u001b[29;46H3,1 \u001b[24;1H"]
[77.627712, "o", "\u001b[29;46H2,19-22\u001b[23;22H"]
[77.79008, "o", "\u001b[29;46H1,47-50\u001b[22;50H"]
[77.978814, "o", "\u001b[29;46H0,43-46\u001b[21;46H"]
[78.121783, "o", "\u001b[29;45H39,87   \u001b[20;25H"]
[78.289566, "o", "\u001b[29;46H8,66\u001b[18;4H"]
[78.453471, "o", "\u001b[29;46H7,1 \u001b[16;1H"]
[79.191136, "o", "\u001b[29;46H8,66\u001b[18;4H"]
[79.795224, "o", "\u001b[29;46H9,87\u001b[20;25H"]
[79.938278, "o", "\u001b[29;45H40,43-46\u001b[21;46H"]
[80.100632, "o", "\u001b[29d1,47-50\u001b[22;50H"]
[80.248148, "o", "\u001b[29;46H2,19-22\u001b[23;22H"]
[80.409551, "o", "\u001b[29;46H3,1    \u001b[24;1H"]
[80.848158, "o", "\u001b[29;46H4,79\u001b[26;17H"]
[82.037168, "o", "\u001b[29;46H3,1 \u001b[24;1H"]
[82.467797, "o", "\u001b[29;46H4,79\u001b[26;17H"]
[82.621469, "o", "\u001b[29;46H5,53\u001b[27;53H"]
[82.804157, "o", "\u001b[29;46H6,51-54\u001b[28;54H"]
[82.953363, "o", "\u001b[?25l\u001b[36m\u001b[H## Step 1 final: combine the outputs into a list of binaries.\u001b[39m\u001b[1X\u001b[36m\u001b[1m\r\ndata/01.binaries:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages data/0\r\n1a.ubuntu-bin scripts/01c.combine.sh\u001b[26X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Combining the binary lists\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01c.combine.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[22X\u001b[6;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[7;62H\u001b[1K\u001b[36m\r\n## Step 2: Use LLM to rank the binaries in popularity order.\u001b[39m\u001b[2X\u001b[36m\u001b[1m\r\ndata/02a.popularity-contest:\u001b(B\u001b[m data/01.binaries\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130mecho \"02 - Running popularity contest\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130mtimestamp=\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130m(date -u +\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mY-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mm-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130md_\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mH\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mM\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mS)\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/02.popularity_contest.py data/01.binaries log >\u001b[39m\u001b[13;62H\u001b[1K\u001b[38;5;130m\r \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mcp \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[29X\u001b[15;62H\u001b[1K\u001b[36m\r\n## Step 3a: Prioritize the packages based on the binary rankin\u001b[39m\u001b[17;62H\u001b[1K\u001b[36m\rgs.\u001b[1m\r\ndata/03a.package-priority:\u001b(B\u001b[m data/02a.popularity-contest scripts\u001b[19;62H\u001b[1K\r/03a.package_priority.py\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Calculating package priority\"\u001b[39m\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03a.package_priority.py > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[13X\u001b[22;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[23;62H\u001b[1K\u001b[36m\r\n## Step 3b: Limit the number of packages based on how many we \u001b[39m\u001b[25;62H\u001b[1K\u001b[36m\rwant to install.\u001b[1m\r\ndata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\u001b[39m\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[20X\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C47,40-43      50%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;43H"]
[83.117306, "o", "\u001b[?25l\u001b[36m\u001b[1m\u001b[Hdata/01.binaries:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages data/0\r\n1a.ubuntu-bin scripts/01c.combine.sh\u001b[26X\u001b[35m\r\n    @\u001b[38;5;130mecho \"01 - Combining the binary lists\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01c.combine.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[22X\u001b[5;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[6;62H\u001b[1K\u001b[36m\r\n## Step 2: Use LLM to rank the binaries in popularity order.\u001b[39m\u001b[2X\u001b[36m\u001b[1m\r\ndata/02a.popularity-contest:\u001b(B\u001b[m data/01.binaries\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130mecho \"02 - Running popularity contest\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130mtimestamp=\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130m(date -u +\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mY-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mm-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130md_\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mH\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mM\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mS)\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/02.popularity_contest.py data/01.binaries log >\u001b[39m\u001b[12;62H\u001b[1K\u001b[38;5;130m\r \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mcp \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[29X\u001b[14;62H\u001b[1K\u001b[36m\r\n## Step 3a: Prioritize the packages based on the binary rankin\u001b[39m\u001b[16;62H\u001b[1K\u001b[36m\rgs.\u001b[1m\r\ndata/03a.package-priority:\u001b(B\u001b[m data/02a.popularity-contest scripts\u001b[18;62H\u001b[1K\r/03a.package_priority.py\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Calculating package priority\"\u001b[39m\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03a.package_priority.py > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[13X\u001b[21;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[22;62H\u001b[1K\u001b[36m\r\n## Step 3b: Limit the number of packages based on how many we \u001b[39m\u001b[24;62H\u001b[1K\u001b[36m\rwant to install.\u001b[1m\r\ndata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\u001b[39m\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[20X\u001b[35m\r\n    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[21X\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C48,39-42      52%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;42H"]
[83.877516, "o", "\u001b[?25l\u001b[35m\u001b[H    @\u001b[38;5;130mecho \"01 - Combining the binary lists\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/01c.combine.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[22X\u001b[3;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[4;62H\u001b[1K\u001b[36m\r\n## Step 2: Use LLM to rank the binaries in popularity order.\u001b[39m\u001b[2X\u001b[36m\u001b[1m\r\ndata/02a.popularity-contest:\u001b(B\u001b[m data/01.binaries\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130mecho \"02 - Running popularity contest\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130mtimestamp=\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130m(date -u +\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mY-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mm-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130md_\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mH\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mM\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mS)\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/02.popularity_contest.py data/01.binaries log >\u001b[39m\u001b[10;62H\u001b[1K\u001b[38;5;130m\r \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mcp \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[29X\u001b[12;62H\u001b[1K\u001b[36m\r\n## Step 3a: Prioritize the packages based on the binary rankin\u001b[39m\u001b[14;62H\u001b[1K\u001b[36m\rgs.\u001b[1m\r\ndata/03a.package-priority:\u001b(B\u001b[m data/02a.popularity-contest scripts\u001b[16;62H\u001b[1K\r/03a.package_priority.py\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Calculating package priority\"\u001b[39m\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03a.package_priority.py > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[13X\u001b[19;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[20;62H\u001b[1K\u001b[36m\r\n## Step 3b: Limit the number of packages based on how many we \u001b[39m\u001b[22;62H\u001b[1K\u001b[36m\rwant to install.\u001b[1m\r\ndata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\u001b[39m\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[20X\u001b[35m\r\n    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[21X\u001b[27;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[5X\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C49,24-27      55%\u001b[1X\u001b[?12l\u001b[?25h\u001b[27;27H"]
[84.372741, "o", "\u001b[29;45H50,55-58\u001b[28;58H"]
[84.556708, "o", "\u001b[?25l\u001b[35m\u001b[H    @\u001b[38;5;130m./scripts/01c.combine.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[22X\u001b[2;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[3;62H\u001b[1K\u001b[36m\r\n## Step 2: Use LLM to rank the binaries in popularity order.\u001b[39m\u001b[2X\u001b[36m\u001b[1m\r\ndata/02a.popularity-contest:\u001b(B\u001b[m data/01.binaries\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130mecho \"02 - Running popularity contest\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130mtimestamp=\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130m(date -u +\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mY-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mm-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130md_\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mH\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mM\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mS)\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/02.popularity_contest.py data/01.binaries log >\u001b[39m\u001b[9;62H\u001b[1K\u001b[38;5;130m\r \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mcp \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[29X\u001b[11;62H\u001b[1K\u001b[36m\r\n## Step 3a: Prioritize the packages based on the binary rankin\u001b[39m\u001b[13;62H\u001b[1K\u001b[36m\rgs.\u001b[1m\r\ndata/03a.package-priority:\u001b(B\u001b[m data/02a.popularity-contest scripts\u001b[15;62H\u001b[1K\r/03a.package_priority.py\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Calculating package priority\"\u001b[39m\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03a.package_priority.py > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[13X\u001b[18;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[19;62H\u001b[1K\u001b[36m\r\n## Step 3b: Limit the number of packages based on how many we \u001b[39m\u001b[21;62H\u001b[1K\u001b[36m\rwant to install.\u001b[1m\r\ndata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\u001b[39m\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[20X\u001b[35m\r\n    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[21X\u001b[26;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[5X\u001b[28;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C51,24-27      57%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;27H"]
[84.749481, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[35m\u001b[H    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[2;62H\u001b[1K\u001b[36m\r\n## Step 2: Use LLM to rank the binaries in popularity order.\u001b[39m\u001b[2X\u001b[36m\u001b[1m\r\ndata/02a.popularity-contest:\u001b(B\u001b[m data/01.binaries\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130mecho \"02 - Running popularity contest\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130mtimestamp=\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130m(date -u +\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mY-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mm-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130md_\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mH\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mM\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mS)\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/02.popularity_contest.py data/01.binaries log >\u001b[39m\u001b[8;62H\u001b[1K\u001b[38;5;130m\r \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mcp \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[29X\u001b[10;62H\u001b[1K\u001b[36m\r\n## Step 3a: Prioritize the packages based on the binary rankin\u001b[39m\u001b[12;62H\u001b[1K\u001b[36m\rgs.\u001b[1m\r\ndata/03a.package-priority:\u001b(B\u001b[m data/02a.popularity-contest scripts\u001b[14;62H\u001b[1K\r/03a.package_priority.py\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Calculating package priority\"\u001b[39m\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03a.package_priority.py > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[13X\u001b[17;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[18;62H\u001b[1K\u001b[36m\r\n## Step 3b: Limit the number of packages based on how many we \u001b[39m\u001b[20;62H\u001b[1K\u001b[36m\rwant to install.\u001b[1m\r\ndata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\u001b[39m\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[20X\u001b[35m\r\n    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[21X\u001b[25;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[5X\u001b[27;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[28;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C52,19-22      59%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;22H"]
[84.955078, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[36m\r\n## Step 2: Use LLM to rank the binaries in popularity order.\u001b[39m\u001b[2X\u001b[36m\u001b[1m\r\ndata/02a.popularity-contest:\u001b(B\u001b[m data/01.binaries\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130mecho \"02 - Running popularity contest\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130mtimestamp=\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130m(date -u +\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mY-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mm-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130md_\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mH\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mM\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mS)\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/02.popularity_contest.py data/01.binaries log >\u001b[39m\u001b[7;62H\u001b[1K\u001b[38;5;130m\r \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mcp \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[29X\u001b[9;62H\u001b[1K\u001b[36m\r\n## Step 3a: Prioritize the packages based on the binary rankin\u001b[39m\u001b[11;62H\u001b[1K\u001b[36m\rgs.\u001b[1m\r\ndata/03a.package-priority:\u001b(B\u001b[m data/02a.popularity-contest scripts\u001b[13;62H\u001b[1K\r/03a.package_priority.py\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Calculating package priority\"\u001b[39m\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03a.package_priority.py > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[13X\u001b[16;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[17;62H\u001b[1K\u001b[36m\r\n## Step 3b: Limit the number of packages based on how many we \u001b[39m\u001b[19;62H\u001b[1K\u001b[36m\rwant to install.\u001b[1m\r\ndata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\u001b[39m\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[20X\u001b[35m\r\n    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[21X\u001b[24;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[5X\u001b[26;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[27;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[28;62H\u001b[1K\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C53,1\u001b[10X\u001b[10C61%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[85.11734, "o", "\u001b[?25l\u001b[36m\u001b[1m\u001b[Hdata/02a.popularity-contest:\u001b(B\u001b[m data/01.binaries\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130mecho \"02 - Running popularity contest\"\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130mtimestamp=\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130m(date -u +\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mY-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mm-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130md_\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mH\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mM\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mS)\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/02.popularity_contest.py data/01.binaries log >\u001b[39m\u001b[5;62H\u001b[1K\u001b[38;5;130m\r \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mcp \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[29X\u001b[7;62H\u001b[1K\u001b[36m\r\n## Step 3a: Prioritize the packages based on the binary rankin\u001b[39m\u001b[9;62H\u001b[1K\u001b[36m\rgs.\u001b[1m\r\ndata/03a.package-priority:\u001b(B\u001b[m data/02a.popularity-contest scripts\u001b[11;62H\u001b[1K\r/03a.package_priority.py\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Calculating package priority\"\u001b[39m\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03a.package_priority.py > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[13X\u001b[14;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[15;62H\u001b[1K\u001b[36m\r\n## Step 3b: Limit the number of packages based on how many we \u001b[39m\u001b[17;62H\u001b[1K\u001b[36m\rwant to install.\u001b[1m\r\ndata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\u001b[39m\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[20X\u001b[35m\r\n    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[21X\u001b[22;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[5X\u001b[24;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[25;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[26;62H\u001b[1K\u001b[36m\r\n## Step 3c: Get binary names from the packages we installed, p\u001b[39m\u001b[28;62H\u001b[1K\u001b[36m\rlus the defaults.\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C54,80\u001b[9X\u001b[9C64%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;18H"]
[85.193901, "o", "\u001b[?25l\u001b[30m\u001b[44m\u001b[30;1H[0] 0:sudo- 1:vim*                                                                   \"gaz@orin: ~/src/uh-ha\" 19:20 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[28;18H"]
[85.319031, "o", "\u001b[?25l\u001b[35m\u001b[H    @\u001b[38;5;130mtimestamp=\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130m(date -u +\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mY-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mm-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130md_\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mH\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mM\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mS)\u001b[39m\u001b[19X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/02.popularity_contest.py data/01.binaries log >\u001b[39m\u001b[3;62H\u001b[1K\u001b[38;5;130m\r \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mcp \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[29X\u001b[5;62H\u001b[1K\u001b[36m\r\n## Step 3a: Prioritize the packages based on the binary rankin\u001b[39m\u001b[7;62H\u001b[1K\u001b[36m\rgs.\u001b[1m\r\ndata/03a.package-priority:\u001b(B\u001b[m data/02a.popularity-contest scripts\u001b[9;62H\u001b[1K\r/03a.package_priority.py\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Calculating package priority\"\u001b[39m\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03a.package_priority.py > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[13X\u001b[12;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[13;62H\u001b[1K\u001b[36m\r\n## Step 3b: Limit the number of packages based on how many we \u001b[39m\u001b[15;62H\u001b[1K\u001b[36m\rwant to install.\u001b[1m\r\ndata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\u001b[39m\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[20X\u001b[35m\r\n    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[21X\u001b[20;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[5X\u001b[22;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[23;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[24;62H\u001b[1K\u001b[36m\r\n## Step 3c: Get binary names from the packages we installed, p\u001b[39m\u001b[26;62H\u001b[1K\u001b[36m\rlus the defaults.\u001b[1m\r\ndata/03c.binary-names:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages d\r\nata/03b.limited-packages scripts/03c.get_binary_names.py\u001b[6X\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C55,119\u001b[8X\u001b[8C67%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;57H"]
[85.780565, "o", "\u001b[29;46H4,80 \u001b[26;18H"]
[85.977759, "o", "\u001b[29;46H3,1 \u001b[24;1H"]
[86.191488, "o", "\u001b[29;46H4,80\u001b[26;18H"]
[86.388951, "o", "\u001b[29;46H5,119\u001b[28;57H"]
[86.567041, "o", "\u001b[?25l\u001b[35m\u001b[H    @\u001b[38;5;130m./scripts/02.popularity_contest.py data/01.binaries log >\u001b[39m\u001b[2;62H\u001b[1K\u001b[38;5;130m\r \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mcp \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[29X\u001b[4;62H\u001b[1K\u001b[36m\r\n## Step 3a: Prioritize the packages based on the binary rankin\u001b[39m\u001b[6;62H\u001b[1K\u001b[36m\rgs.\u001b[1m\r\ndata/03a.package-priority:\u001b(B\u001b[m data/02a.popularity-contest scripts\u001b[8;62H\u001b[1K\r/03a.package_priority.py\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Calculating package priority\"\u001b[39m\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03a.package_priority.py > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[13X\u001b[11;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[12;62H\u001b[1K\u001b[36m\r\n## Step 3b: Limit the number of packages based on how many we \u001b[39m\u001b[14;62H\u001b[1K\u001b[36m\rwant to install.\u001b[1m\r\ndata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\u001b[39m\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[20X\u001b[35m\r\n    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[21X\u001b[19;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[5X\u001b[21;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[22;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[23;62H\u001b[1K\u001b[36m\r\n## Step 3c: Get binary names from the packages we installed, p\u001b[39m\u001b[25;62H\u001b[1K\u001b[36m\rlus the defaults.\u001b[1m\r\ndata/03c.binary-names:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages d\r\nata/03b.limited-packages scripts/03c.get_binary_names.py\u001b[6X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Extracting binary names\"\u001b[39m\u001b[22X\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C56,38-41      69%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;41H"]
[86.713341, "o", "\u001b[?25l\u001b[35m\u001b[H    @\u001b[38;5;130mcp \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[29X\u001b[2;62H\u001b[1K\u001b[36m\r\n## Step 3a: Prioritize the packages based on the binary rankin\u001b[39m\u001b[4;62H\u001b[1K\u001b[36m\rgs.\u001b[1m\r\ndata/03a.package-priority:\u001b(B\u001b[m data/02a.popularity-contest scripts\u001b[6;62H\u001b[1K\r/03a.package_priority.py\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Calculating package priority\"\u001b[39m\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03a.package_priority.py > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[13X\u001b[9;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[10;62H\u001b[1K\u001b[36m\r\n## Step 3b: Limit the number of packages based on how many we \u001b[39m\u001b[12;62H\u001b[1K\u001b[36m\rwant to install.\u001b[1m\r\ndata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\u001b[39m\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[20X\u001b[35m\r\n    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[21X\u001b[17;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[5X\u001b[19;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[20;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[21;62H\u001b[1K\u001b[36m\r\n## Step 3c: Get binary names from the packages we installed, p\u001b[39m\u001b[23;62H\u001b[1K\u001b[36m\rlus the defaults.\u001b[1m\r\ndata/03c.binary-names:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages d\r\nata/03b.limited-packages scripts/03c.get_binary_names.py\u001b[6X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Extracting binary names\"\u001b[39m\u001b[22X\u001b[35m\r\n    @\u001b[38;5;130mcat data/01a.ubuntu-bin > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[23X\u001b[34m\u001b[1m\r\n@                                                             \u001b(B\u001b[m\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C57,37-40      71%\u001b[1X\u001b[?12l\u001b[?25h\u001b[27;40H"]
[86.901457, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[36m\r\n## Step 3a: Prioritize the packages based on the binary rankin\u001b[39m\u001b[3;62H\u001b[1K\u001b[36m\rgs.\u001b[1m\r\ndata/03a.package-priority:\u001b(B\u001b[m data/02a.popularity-contest scripts\u001b[5;62H\u001b[1K\r/03a.package_priority.py\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Calculating package priority\"\u001b[39m\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03a.package_priority.py > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[13X\u001b[8;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[9;62H\u001b[1K\u001b[36m\r\n## Step 3b: Limit the number of packages based on how many we \u001b[39m\u001b[11;62H\u001b[1K\u001b[36m\rwant to install.\u001b[1m\r\ndata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\u001b[39m\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[20X\u001b[35m\r\n    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[21X\u001b[16;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[5X\u001b[18;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[19;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[20;62H\u001b[1K\u001b[36m\r\n## Step 3c: Get binary names from the packages we installed, p\u001b[39m\u001b[22;62H\u001b[1K\u001b[36m\rlus the defaults.\u001b[1m\r\ndata/03c.binary-names:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages d\r\nata/03b.limited-packages scripts/03c.get_binary_names.py\u001b[6X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Extracting binary names\"\u001b[39m\u001b[22X\u001b[35m\r\n    @\u001b[38;5;130mcat data/01a.ubuntu-bin > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[23X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03c.get_binary_names.py data/01b.ubuntu-binarie\r\ns-and-packages data/03b.limited-packages >> \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C58,112-115    73%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;53H"]
[87.456021, "o", "\u001b[?25l\u001b[36m\u001b[H## Step 3a: Prioritize the packages based on the binary rankin\u001b[39m\u001b[2;62H\u001b[1K\u001b[36m\rgs.\u001b[1m\r\ndata/03a.package-priority:\u001b(B\u001b[m data/02a.popularity-contest scripts\u001b[4;62H\u001b[1K\r/03a.package_priority.py\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Calculating package priority\"\u001b[39m\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03a.package_priority.py > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[13X\u001b[7;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[8;62H\u001b[1K\u001b[36m\r\n## Step 3b: Limit the number of packages based on how many we \u001b[39m\u001b[10;62H\u001b[1K\u001b[36m\rwant to install.\u001b[1m\r\ndata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\u001b[39m\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[20X\u001b[35m\r\n    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[21X\u001b[15;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[5X\u001b[17;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[18;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[19;62H\u001b[1K\u001b[36m\r\n## Step 3c: Get binary names from the packages we installed, p\u001b[39m\u001b[21;62H\u001b[1K\u001b[36m\rlus the defaults.\u001b[1m\r\ndata/03c.binary-names:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages d\r\nata/03b.limited-packages scripts/03c.get_binary_names.py\u001b[6X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Extracting binary names\"\u001b[39m\u001b[22X\u001b[35m\r\n    @\u001b[38;5;130mcat data/01a.ubuntu-bin > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[23X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03c.get_binary_names.py data/01b.ubuntu-binarie\r\ns-and-packages data/03b.limited-packages >> \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[28;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C59,19-22      75%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;22H"]
[87.60126, "o", "\u001b[?25l\u001b[36m\u001b[1m\u001b[Hdata/03a.package-priority:\u001b(B\u001b[m data/02a.popularity-contest scripts\u001b[2;62H\u001b[1K\r/03a.package_priority.py\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Calculating package priority\"\u001b[39m\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03a.package_priority.py > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[13X\u001b[5;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[6;62H\u001b[1K\u001b[36m\r\n## Step 3b: Limit the number of packages based on how many we \u001b[39m\u001b[8;62H\u001b[1K\u001b[36m\rwant to install.\u001b[1m\r\ndata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\u001b[39m\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[20X\u001b[35m\r\n    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[21X\u001b[13;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[5X\u001b[15;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[16;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[17;62H\u001b[1K\u001b[36m\r\n## Step 3c: Get binary names from the packages we installed, p\u001b[39m\u001b[19;62H\u001b[1K\u001b[36m\rlus the defaults.\u001b[1m\r\ndata/03c.binary-names:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages d\r\nata/03b.limited-packages scripts/03c.get_binary_names.py\u001b[6X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Extracting binary names\"\u001b[39m\u001b[22X\u001b[35m\r\n    @\u001b[38;5;130mcat data/01a.ubuntu-bin > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[23X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03c.get_binary_names.py data/01b.ubuntu-binarie\r\ns-and-packages data/03b.limited-packages >> \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[26;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[27;62H\u001b[1K\u001b[34m\u001b[1m\r\n@                                                             \u001b(B\u001b[m\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C60,1\u001b[10X\u001b[10C77%\u001b[1X\u001b[?12l\u001b[?25h\u001b[27;1H"]
[87.851476, "o", "\u001b[?25l\u001b[35m\u001b[H    @\u001b[38;5;130mecho \"03 - Calculating package priority\"\u001b[39m\u001b[17X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03a.package_priority.py > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[13X\u001b[3;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[4;62H\u001b[1K\u001b[36m\r\n## Step 3b: Limit the number of packages based on how many we \u001b[39m\u001b[6;62H\u001b[1K\u001b[36m\rwant to install.\u001b[1m\r\ndata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\u001b[39m\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[20X\u001b[35m\r\n    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[21X\u001b[11;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[5X\u001b[13;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[14;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[15;62H\u001b[1K\u001b[36m\r\n## Step 3c: Get binary names from the packages we installed, p\u001b[39m\u001b[17;62H\u001b[1K\u001b[36m\rlus the defaults.\u001b[1m\r\ndata/03c.binary-names:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages d\r\nata/03b.limited-packages scripts/03c.get_binary_names.py\u001b[6X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Extracting binary names\"\u001b[39m\u001b[22X\u001b[35m\r\n    @\u001b[38;5;130mcat data/01a.ubuntu-bin > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[23X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03c.get_binary_names.py data/01b.ubuntu-binarie\r\ns-and-packages data/03b.limited-packages >> \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[24;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[25;62H\u001b[1K\u001b[36m\r\n## Step 3d: Install the packages into a Docker container, in b\u001b[39m\u001b[27;62H\u001b[1K\u001b[36m\ratches.\u001b[34m\u001b[1m\r\n@                                                             \u001b(B\u001b[m\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C61,70\u001b[9X\u001b[9C79%\u001b[1X\u001b[?12l\u001b[?25h\u001b[27;8H"]
[88.075807, "o", "\u001b[29;46H0,1 \u001b[25;1H"]
[88.261436, "o", "\u001b[29;45H59,19-22\u001b[24;22H"]
[88.446315, "o", "\u001b[29;46H8,112-115\u001b[23;53H"]
[88.678349, "o", "\u001b[29;46H7,37-40  \u001b[21;40H"]
[89.379483, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[6;101H"]
[89.604759, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:20 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[6;101H"]
[90.059764, "o", "v"]
[90.201218, "o", "i"]
[90.251992, "o", "m"]
[90.335339, "o", " "]
[90.760138, "o", "s"]
[90.907618, "o", "c"]
[91.122131, "o", "ripts/"]
[92.18676, "o", "0"]
[92.280735, "o", "3"]
[92.710264, "o", "b"]
[96.093867, "o", "\b\u001b[K"]
[96.238187, "o", "c"]
[96.501111, "o", ".get_bina\u001b[7;64Hry_names.py "]
[101.956212, "o", "\u001b[8;64H\u001b[?2004l"]
[101.984956, "o", "\u001b[?25l\u001b[1d\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\u001b[?12l\u001b[?25h\u001b[1d\u001b[?2004h"]
[101.985512, "o", "\u001b[1;29r\u001b[1;64H\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\"scripts/03c.get_binary_names.py\"\u001b[1;30r\u001b[29;97H\u001b[?25l"]
[101.989947, "o", "\u001b[33D<ripts/03c.get_binary_names.py\" 42L, 1403B"]
[101.993977, "o", "\u001b[2;64Hâ–½\b  \u001b[3;64H           \u001b[1;64H"]
[101.996501, "o", "\u001b[36m#!/usr/bin/env python3\u001b[39m\u001b[2;64H\u001b[K\n\u001b[35mimport\u001b[39m argparse\u001b[5;64H\u001b[33mdef\u001b[39m \u001b[36m\u001b[1mload_packages\u001b(B\u001b[m(file_name):\u001b[6;64H    \u001b[38;5;130m\"\"\"Loads package names into a set.\"\"\"\u001b[7;64H\u001b[39m    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[8;72H\u001b[33mreturn\u001b[39m \u001b[36m\u001b[1mset\u001b(B\u001b[m(line.strip() \u001b[33mfor\u001b[39m line \u001b[33min\u001b[39m f \u001b[33mif\u001b[39m line.strip()\u001b[9;64H)\u001b[11;64H\u001b[33mdef\u001b[39m \u001b[36m\u001b[1mprocess_binaries\u001b(B\u001b[m(binary_file, package_set):\u001b[12;64H    \u001b[38;5;130m\"\"\"Processes binaries and outputs binary names for matchi\u001b[13;64Hng packages.\"\"\"\u001b[14;64H\u001b[39m    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(binary_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[15;72H\u001b[33mfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[16;76Hline = line.strip()\u001b[17;76H\u001b[33mif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[18;80H\u001b[33mcontinue\u001b[20;76H\u001b[36m# Split by space to separate path and repo/packag\u001b[21;64He\u001b[22;76H\u001b[39mparts = line.split()\u001b[23;76H\u001b[33mif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[24;80H\u001b[33mcontinue\u001b[26;76H\u001b[39mpath, package = parts\u001b[28;76H\u001b[36m# Extract the last components of path and package\u001b[29;107H\u001b[39m1,1\u001b[11CTop\u001b[1;64H\u001b[?12l\u001b[?25h"]
[102.467522, "o", "\u001b[?25l\bâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:vim*                                                                   \"gaz@orin: ~/src/uh-ha\" 19:20 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;64H"]
[102.703354, "o", "\u001b[29;107H2,0-1\u001b[2;64H"]
[103.185648, "o", "\u001b[29;107H3,1  \u001b[3;64H"]
[103.224887, "o", "\u001b[29;107H4,0-1\u001b[4;64H"]
[103.243997, "o", "\u001b[29;107H5,1  \u001b[5;64H"]
[103.284354, "o", "\u001b[29;107H6\u001b[6;64H"]
[103.635197, "o", "\u001b[1;29r\u001b[1;64H\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\u001b[2;76H\u001b[36m# Extract the last components of path and package\u001b[3;76H\u001b[39mbinary_name = path.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[4;76Hpackage_name = package.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[6;76H\u001b[33mif\u001b[39m package_name \u001b[33min\u001b[39m package_set:\u001b[7;80H\u001b[36m\u001b[1mprint\u001b(B\u001b[m(binary_name)\u001b[9;64H\u001b[33mdef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[10;64H    parser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Extract bin\u001b[11;64Hary names for specified packages.\"\u001b[39m)\u001b[12;64H    parser.add_argument(\u001b[38;5;130m'binary_file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path t\u001b[13;64Ho the binary file containing paths and packages.\"\u001b[39m)\u001b[14;64H    parser.add_argument(\u001b[38;5;130m'package_file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path \u001b[15;64Hto the file with limited packages.\"\u001b[39m)\u001b[16;64H    args = parser.parse_args()\u001b[18;68Hpackage_set = load_packages(args.package_file)\u001b[19;64H    process_binaries(args.binary_file, package_set)\u001b[21;64H\u001b[33mif\u001b[39m __name__ == \u001b[38;5;130m\"__main__\"\u001b[39m:\u001b[22;64H    main()\u001b[23;64H\u001b[34m\u001b[1m~                                                            \u001b[24;64H~                                                            \u001b[25;64H~                                                            \u001b[26;64H~                                                            \u001b[27;64H~                                                            \u001b[28;64H~                                                            \u001b[29;107H\u001b(B\u001b[m24,0-1\u001b[8CBot\u001b[1;30r\u001b[1;64H"]
[104.011328, "o", "\u001b[?25l    main()\u001b[K\u001b[34m\u001b[1m\u001b[2;64H~                                                            \u001b[3;64H~                                                            \u001b[4;64H~                                                            \u001b[5;64H~                                                            \u001b[6;64H~                                                            \u001b[7;64H~                                                            \u001b[8;64H~                                                            \u001b[9;64H~                                                            \u001b[10;64H~                                                            \u001b[11;64H~                                                            \u001b[12;64H~                                                            \u001b[13;64H~                                                            \u001b[14;64H~                                                            \u001b[15;64H~                                                            \u001b[16;64H~                                                            \u001b[17;64H~                                                            \u001b[18;64H~                                                            \u001b[19;64H~                                                            \u001b[20;64H~                                                            \u001b[21;64H~                                                            \u001b[22;64H~                                                            \u001b[23;64H~                                                            \u001b[24;64H~                                                            \u001b[25;64H~                                                            \u001b[26;64H~                                                            \u001b[27;64H~                                                            \u001b[28;64H~                                                            \u001b(B\u001b[m\u001b[29;64H\u001b[43X\u001b[43C42,5\u001b[10X\u001b[10CBot\u001b[K\u001b[?12l\u001b[?25h\u001b[1;68H"]
[104.505483, "o", "\u001b[1;29r\u001b[1;64H\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\u001b[1;76H\u001b[36m# Split by space to separate path and repo/packag\u001b[2;64He\u001b[3;76H\u001b[39mparts = line.split()\u001b[4;76H\u001b[33mif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[5;80H\u001b[33mcontinue\u001b[7;76H\u001b[39mpath, package = parts\u001b[9;76H\u001b[36m# Extract the last components of path and package\u001b[10;76H\u001b[39mbinary_name = path.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[11;76Hpackage_name = package.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[13;76H\u001b[33mif\u001b[39m package_name \u001b[33min\u001b[39m package_set:\u001b[14;80H\u001b[36m\u001b[1mprint\u001b(B\u001b[m(binary_name)\u001b[16;64H\u001b[33mdef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[17;64H    parser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Extract bin\u001b[18;64Hary names for specified packages.\"\u001b[39m)\u001b[19;64H    parser.add_argument(\u001b[38;5;130m'binary_file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path t\u001b[20;64Ho the binary file containing paths and packages.\"\u001b[39m)\u001b[21;64H    parser.add_argument(\u001b[38;5;130m'package_file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path \u001b[22;64Hto the file with limited packages.\"\u001b[39m)\u001b[23;64H    args = parser.parse_args()\u001b[25;68Hpackage_set = load_packages(args.package_file)\u001b[26;64H    process_binaries(args.binary_file, package_set)\u001b[28;64H\u001b[33mif\u001b[39m __name__ == \u001b[38;5;130m\"__main__\"\u001b[39m:\u001b[29;107H41,1\u001b[10C94%\u001b[1;30r\u001b[28;64H"]
[105.700168, "o", "\u001b[?25l\u001b[36m\u001b[1d#!/usr/bin/env python3\u001b[39m\u001b[K\u001b[2;64H\u001b[K\u001b[35m\nimport\u001b[39m argparse\u001b[K\u001b[4;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_packages\u001b(B\u001b[m(file_name):\u001b[K\u001b[6;64H    \u001b[38;5;130m\"\"\"Loads package names into a set.\"\"\"\u001b[39m\u001b[K\u001b[7;64H    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[8;64H\u001b[8X\u001b[33m\u001b[8Creturn\u001b[39m \u001b[36m\u001b[1mset\u001b(B\u001b[m(line.strip() \u001b[33mfor\u001b[39m line \u001b[33min\u001b[39m f \u001b[33mif\u001b[39m line.strip()\u001b[9;64H)\u001b[K\u001b[10;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mprocess_binaries\u001b(B\u001b[m(binary_file, package_set):\u001b[K\u001b[12;64H    \u001b[38;5;130m\"\"\"Processes binaries and outputs binary names for matchi\u001b[13;64Hng packages.\"\"\"\u001b[39m\u001b[K\u001b[14;64H    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(binary_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[15;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[16;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[17;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[18;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[19;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Split by space to separate path and repo/packag\u001b[21;64He\u001b[39m\u001b[K\u001b[22;64H\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[23;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[24;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[25;64H\u001b[K\n\u001b[12X\u001b[12Cpath, package = parts\u001b[K\u001b[27;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Extract the last components of path and package\u001b[39m\u001b[29;64H\u001b[43X\u001b[43C19,13\u001b[9X\u001b[9CTop\u001b[K\u001b[?12l\u001b[?25h\u001b[22;76H"]
[106.015303, "o", "\u001b[29;107H20\u001b[23;76H"]
[106.513877, "o", "\u001b[29;108H1\u001b[24;76H"]
[106.539552, "o", "\u001b[29;108H2,0-1\u001b[25;64H"]
[106.559142, "o", "\u001b[29;108H3,13 \u001b[26;76H"]
[106.599858, "o", "\u001b[29;108H4,0-1\u001b[27;64H"]
[106.619327, "o", "\u001b[29;108H5,13 \u001b[28;76H"]
[106.662684, "o", "\u001b[?25l\u001b[1;64H\u001b[K\u001b[35m\nimport\u001b[39m argparse\u001b[K\u001b[3;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_packages\u001b(B\u001b[m(file_name):\u001b[K\u001b[5;64H    \u001b[38;5;130m\"\"\"Loads package names into a set.\"\"\"\u001b[39m\u001b[K\u001b[6;64H    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[7;64H\u001b[8X\u001b[33m\u001b[8Creturn\u001b[39m \u001b[36m\u001b[1mset\u001b(B\u001b[m(line.strip() \u001b[33mfor\u001b[39m line \u001b[33min\u001b[39m f \u001b[33mif\u001b[39m line.strip()\u001b[8;64H)\u001b[K\u001b[9;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mprocess_binaries\u001b(B\u001b[m(binary_file, package_set):\u001b[K\u001b[11;64H    \u001b[38;5;130m\"\"\"Processes binaries and outputs binary names for matchi\u001b[12;64Hng packages.\"\"\"\u001b[39m\u001b[K\u001b[13;64H    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(binary_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[14;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[15;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[16;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[17;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[18;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Split by space to separate path and repo/packag\u001b[20;64He\u001b[39m\u001b[K\u001b[21;64H\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[22;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[23;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[24;64H\u001b[K\n\u001b[12X\u001b[12Cpath, package = parts\u001b[K\u001b[26;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Extract the last components of path and package\u001b[39m\u001b[28;64H\u001b[12X\u001b[12Cbinary_name = path.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[29;64H\u001b[43X\u001b[43C26,13\u001b[10X\u001b[10C5%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;76H"]
[106.681652, "o", "\u001b[?25l\u001b[35m\u001b[1;64Himport\u001b[39m argparse\u001b[K\u001b[2;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_packages\u001b(B\u001b[m(file_name):\u001b[K\u001b[4;64H    \u001b[38;5;130m\"\"\"Loads package names into a set.\"\"\"\u001b[39m\u001b[K\u001b[5;64H    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[6;64H\u001b[8X\u001b[33m\u001b[8Creturn\u001b[39m \u001b[36m\u001b[1mset\u001b(B\u001b[m(line.strip() \u001b[33mfor\u001b[39m line \u001b[33min\u001b[39m f \u001b[33mif\u001b[39m line.strip()\u001b[7;64H)\u001b[K\u001b[8;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mprocess_binaries\u001b(B\u001b[m(binary_file, package_set):\u001b[K\u001b[10;64H    \u001b[38;5;130m\"\"\"Processes binaries and outputs binary names for matchi\u001b[11;64Hng packages.\"\"\"\u001b[39m\u001b[K\u001b[12;64H    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(binary_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[13;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[14;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[15;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[16;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[17;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Split by space to separate path and repo/packag\u001b[19;64He\u001b[39m\u001b[K\u001b[20;64H\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[21;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[22;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[23;64H\u001b[K\n\u001b[12X\u001b[12Cpath, package = parts\u001b[K\u001b[25;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Extract the last components of path and package\u001b[39m\u001b[27;64H\u001b[12X\u001b[12Cbinary_name = path.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[28;64H\u001b[12X\u001b[12Cpackage_name = package.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[29;64H\u001b[43X\u001b[43C27,13\u001b[9X\u001b[9C11%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;76H"]
[106.720422, "o", "\u001b[?25l\u001b[1;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mload_packages\u001b(B\u001b[m(file_name):\u001b[K\u001b[3;64H    \u001b[38;5;130m\"\"\"Loads package names into a set.\"\"\"\u001b[39m\u001b[K\u001b[4;64H    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[5;64H\u001b[8X\u001b[33m\u001b[8Creturn\u001b[39m \u001b[36m\u001b[1mset\u001b(B\u001b[m(line.strip() \u001b[33mfor\u001b[39m line \u001b[33min\u001b[39m f \u001b[33mif\u001b[39m line.strip()\u001b[6;64H)\u001b[K\u001b[7;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mprocess_binaries\u001b(B\u001b[m(binary_file, package_set):\u001b[K\u001b[9;64H    \u001b[38;5;130m\"\"\"Processes binaries and outputs binary names for matchi\u001b[10;64Hng packages.\"\"\"\u001b[39m\u001b[K\u001b[11;64H    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(binary_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[12;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[13;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[14;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[15;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[16;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Split by space to separate path and repo/packag\u001b[18;64He\u001b[39m\u001b[K\u001b[19;64H\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[20;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[21;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[22;64H\u001b[K\n\u001b[12X\u001b[12Cpath, package = parts\u001b[K\u001b[24;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Extract the last components of path and package\u001b[39m\u001b[26;64H\u001b[12X\u001b[12Cbinary_name = path.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[27;64H\u001b[12X\u001b[12Cpackage_name = package.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[28;64H\u001b[K\n\u001b[43X\u001b[43C28,0-1\u001b[8X\u001b[8C17%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[106.741539, "o", "\u001b[?25l\u001b[33m\u001b[1ddef\u001b[39m \u001b[36m\u001b[1mload_packages\u001b(B\u001b[m(file_name):\u001b[K\u001b[2;64H    \u001b[38;5;130m\"\"\"Loads package names into a set.\"\"\"\u001b[39m\u001b[K\u001b[3;64H    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[4;64H\u001b[8X\u001b[33m\u001b[8Creturn\u001b[39m \u001b[36m\u001b[1mset\u001b(B\u001b[m(line.strip() \u001b[33mfor\u001b[39m line \u001b[33min\u001b[39m f \u001b[33mif\u001b[39m line.strip()\u001b[5;64H)\u001b[K\u001b[6;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mprocess_binaries\u001b(B\u001b[m(binary_file, package_set):\u001b[K\u001b[8;64H    \u001b[38;5;130m\"\"\"Processes binaries and outputs binary names for matchi\u001b[9;64Hng packages.\"\"\"\u001b[39m\u001b[K\u001b[10;64H    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(binary_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[11;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[12;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[13;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[14;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[15;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Split by space to separate path and repo/packag\u001b[17;64He\u001b[39m\u001b[K\u001b[18;64H\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[19;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[20;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[21;64H\u001b[K\n\u001b[12X\u001b[12Cpath, package = parts\u001b[K\u001b[23;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Extract the last components of path and package\u001b[39m\u001b[25;64H\u001b[12X\u001b[12Cbinary_name = path.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[26;64H\u001b[12X\u001b[12Cpackage_name = package.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[27;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m package_name \u001b[33min\u001b[39m package_set:\u001b[K\u001b[29;64H\u001b[43X\u001b[43C29,13\u001b[9X\u001b[9C23%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;76H"]
[106.780044, "o", "\u001b[?25l\u001b[1;64H    \u001b[38;5;130m\"\"\"Loads package names into a set.\"\"\"\u001b[39m\u001b[K\u001b[2;64H    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[3;64H\u001b[8X\u001b[33m\u001b[8Creturn\u001b[39m \u001b[36m\u001b[1mset\u001b(B\u001b[m(line.strip() \u001b[33mfor\u001b[39m line \u001b[33min\u001b[39m f \u001b[33mif\u001b[39m line.strip()\u001b[4;64H)\u001b[K\u001b[5;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mprocess_binaries\u001b(B\u001b[m(binary_file, package_set):\u001b[K\u001b[7;64H    \u001b[38;5;130m\"\"\"Processes binaries and outputs binary names for matchi\u001b[8;64Hng packages.\"\"\"\u001b[39m\u001b[K\u001b[9;64H    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(binary_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[10;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[11;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[12;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[13;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[14;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Split by space to separate path and repo/packag\u001b[16;64He\u001b[39m\u001b[K\u001b[17;64H\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[18;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[19;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[20;64H\u001b[K\n\u001b[12X\u001b[12Cpath, package = parts\u001b[K\u001b[22;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Extract the last components of path and package\u001b[39m\u001b[24;64H\u001b[12X\u001b[12Cbinary_name = path.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[25;64H\u001b[12X\u001b[12Cpackage_name = package.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[26;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m package_name \u001b[33min\u001b[39m package_set:\u001b[K\u001b[28;64H\u001b[16X\u001b[36m\u001b[1m\u001b[16Cprint\u001b(B\u001b[m(binary_name)\u001b[K\u001b[29;64H\u001b[43X\u001b[43C30,13\u001b[9X\u001b[9C29%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;76H"]
[106.798854, "o", "\u001b[?25l\u001b[1;64H    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[2;64H\u001b[8X\u001b[33m\u001b[8Creturn\u001b[39m \u001b[36m\u001b[1mset\u001b(B\u001b[m(line.strip() \u001b[33mfor\u001b[39m line \u001b[33min\u001b[39m f \u001b[33mif\u001b[39m line.strip()\u001b[3;64H)\u001b[K\u001b[4;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mprocess_binaries\u001b(B\u001b[m(binary_file, package_set):\u001b[K\u001b[6;64H    \u001b[38;5;130m\"\"\"Processes binaries and outputs binary names for matchi\u001b[7;64Hng packages.\"\"\"\u001b[39m\u001b[K\u001b[8;64H    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(binary_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[9;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[10;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[11;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[12;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[13;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Split by space to separate path and repo/packag\u001b[15;64He\u001b[39m\u001b[K\u001b[16;64H\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[17;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[18;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[19;64H\u001b[K\n\u001b[12X\u001b[12Cpath, package = parts\u001b[K\u001b[21;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Extract the last components of path and package\u001b[39m\u001b[23;64H\u001b[12X\u001b[12Cbinary_name = path.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[24;64H\u001b[12X\u001b[12Cpackage_name = package.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[25;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m package_name \u001b[33min\u001b[39m package_set:\u001b[K\u001b[27;64H\u001b[16X\u001b[36m\u001b[1m\u001b[16Cprint\u001b(B\u001b[m(binary_name)\u001b[K\u001b[28;64H\u001b[K\n\u001b[43X\u001b[43C31,0-1\u001b[8X\u001b[8C35%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[106.840004, "o", "\u001b[?25l\u001b[1d\u001b[8X\u001b[33m\u001b[8Creturn\u001b[39m \u001b[36m\u001b[1mset\u001b(B\u001b[m(line.strip() \u001b[33mfor\u001b[39m line \u001b[33min\u001b[39m f \u001b[33mif\u001b[39m line.strip()\u001b[2;64H)\u001b[K\u001b[3;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mprocess_binaries\u001b(B\u001b[m(binary_file, package_set):\u001b[K\u001b[5;64H    \u001b[38;5;130m\"\"\"Processes binaries and outputs binary names for matchi\u001b[6;64Hng packages.\"\"\"\u001b[39m\u001b[K\u001b[7;64H    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(binary_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[8;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[9;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[10;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[11;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[12;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Split by space to separate path and repo/packag\u001b[14;64He\u001b[39m\u001b[K\u001b[15;64H\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[16;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[17;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[18;64H\u001b[K\n\u001b[12X\u001b[12Cpath, package = parts\u001b[K\u001b[20;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Extract the last components of path and package\u001b[39m\u001b[22;64H\u001b[12X\u001b[12Cbinary_name = path.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[23;64H\u001b[12X\u001b[12Cpackage_name = package.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[24;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m package_name \u001b[33min\u001b[39m package_set:\u001b[K\u001b[26;64H\u001b[16X\u001b[36m\u001b[1m\u001b[16Cprint\u001b(B\u001b[m(binary_name)\u001b[K\u001b[27;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[29;64H\u001b[43X\u001b[43C32,11\u001b[9X\u001b[9C41%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;74H"]
[106.858333, "o", "\u001b[?25l\u001b[1;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mprocess_binaries\u001b(B\u001b[m(binary_file, package_set):\u001b[K\u001b[3;64H    \u001b[38;5;130m\"\"\"Processes binaries and outputs binary names for matchi\u001b[4;64Hng packages.\"\"\"\u001b[39m\u001b[K\u001b[5;64H    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(binary_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[6;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[7;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[8;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[9;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[10;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Split by space to separate path and repo/packag\u001b[12;64He\u001b[39m\u001b[K\u001b[13;64H\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[14;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[15;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[16;64H\u001b[K\n\u001b[12X\u001b[12Cpath, package = parts\u001b[K\u001b[18;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Extract the last components of path and package\u001b[39m\u001b[20;64H\u001b[12X\u001b[12Cbinary_name = path.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[21;64H\u001b[12X\u001b[12Cpackage_name = package.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[22;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m package_name \u001b[33min\u001b[39m package_set:\u001b[K\u001b[24;64H\u001b[16X\u001b[36m\u001b[1m\u001b[16Cprint\u001b(B\u001b[m(binary_name)\u001b[K\u001b[25;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[27;64H\u001b[4X\u001b[4Cparser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Extract bin\u001b[28;64Hary names for specified packages.\"\u001b[39m)\u001b[K\u001b[29;64H\u001b[43X\u001b[43C33,13\u001b[9X\u001b[9C47%\u001b[K\u001b[?12l\u001b[?25h\u001b[27;76H"]
[106.897446, "o", "\u001b[?25l\u001b[1;64H    \u001b[38;5;130m\"\"\"Processes binaries and outputs binary names for matchi\u001b[2;64Hng packages.\"\"\"\u001b[39m\u001b[K\u001b[3;64H    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(binary_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[4;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[5;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[6;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[7;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[8;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Split by space to separate path and repo/packag\u001b[10;64He\u001b[39m\u001b[K\u001b[11;64H\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[12;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[13;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[14;64H\u001b[K\n\u001b[12X\u001b[12Cpath, package = parts\u001b[K\u001b[16;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Extract the last components of path and package\u001b[39m\u001b[18;64H\u001b[12X\u001b[12Cbinary_name = path.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[19;64H\u001b[12X\u001b[12Cpackage_name = package.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[20;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m package_name \u001b[33min\u001b[39m package_set:\u001b[K\u001b[22;64H\u001b[16X\u001b[36m\u001b[1m\u001b[16Cprint\u001b(B\u001b[m(binary_name)\u001b[K\u001b[23;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[25;64H\u001b[4X\u001b[4Cparser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Extract bin\u001b[26;64Hary names for specified packages.\"\u001b[39m)\u001b[K\u001b[27;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'binary_file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path t\u001b[28;64Ho the binary file containing paths and packages.\"\u001b[39m)\u001b[K\u001b[29;64H\u001b[43X\u001b[43C34,13\u001b[9X\u001b[9C55%\u001b[K\u001b[?12l\u001b[?25h\u001b[27;76H"]
[106.937035, "o", "\u001b[?25l\u001b[1;64H    \u001b[33mwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(binary_file, \u001b[38;5;130m'r'\u001b[39m) \u001b[33mas\u001b[39m f:\u001b[K\u001b[2;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[3;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[4;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[5;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[6;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Split by space to separate path and repo/packag\u001b[8;64He\u001b[39m\u001b[K\u001b[9;64H\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[10;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[11;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[12;64H\u001b[K\n\u001b[12X\u001b[12Cpath, package = parts\u001b[K\u001b[14;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Extract the last components of path and package\u001b[39m\u001b[16;64H\u001b[12X\u001b[12Cbinary_name = path.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[17;64H\u001b[12X\u001b[12Cpackage_name = package.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[18;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m package_name \u001b[33min\u001b[39m package_set:\u001b[K\u001b[20;64H\u001b[16X\u001b[36m\u001b[1m\u001b[16Cprint\u001b(B\u001b[m(binary_name)\u001b[K\u001b[21;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[23;64H\u001b[4X\u001b[4Cparser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Extract bin\u001b[24;64Hary names for specified packages.\"\u001b[39m)\u001b[K\u001b[25;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'binary_file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path t\u001b[26;64Ho the binary file containing paths and packages.\"\u001b[39m)\u001b[K\u001b[27;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'package_file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path \u001b[28;64Hto the file with limited packages.\"\u001b[39m)\u001b[K\u001b[29;64H\u001b[43X\u001b[43C35,13\u001b[9X\u001b[9C61%\u001b[K\u001b[?12l\u001b[?25h\u001b[27;76H"]
[106.95547, "o", "\u001b[?25l\u001b[1;64H\u001b[8X\u001b[33m\u001b[8Cfor\u001b[39m line \u001b[33min\u001b[39m f:\u001b[K\u001b[2;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[3;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[4;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[5;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Split by space to separate path and repo/packag\u001b[7;64He\u001b[39m\u001b[K\u001b[8;64H\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[9;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[10;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[11;64H\u001b[K\n\u001b[12X\u001b[12Cpath, package = parts\u001b[K\u001b[13;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Extract the last components of path and package\u001b[39m\u001b[15;64H\u001b[12X\u001b[12Cbinary_name = path.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[16;64H\u001b[12X\u001b[12Cpackage_name = package.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[17;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m package_name \u001b[33min\u001b[39m package_set:\u001b[K\u001b[19;64H\u001b[16X\u001b[36m\u001b[1m\u001b[16Cprint\u001b(B\u001b[m(binary_name)\u001b[K\u001b[20;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[22;64H\u001b[4X\u001b[4Cparser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Extract bin\u001b[23;64Hary names for specified packages.\"\u001b[39m)\u001b[K\u001b[24;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'binary_file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path t\u001b[25;64Ho the binary file containing paths and packages.\"\u001b[39m)\u001b[K\u001b[26;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'package_file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path \u001b[27;64Hto the file with limited packages.\"\u001b[39m)\u001b[K\u001b[28;64H\u001b[4X\u001b[4Cargs = parser.parse_args()\u001b[K\u001b[29;64H\u001b[43X\u001b[43C36,13\u001b[9X\u001b[9C66%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;76H"]
[106.99671, "o", "\u001b[?25l\u001b[1;64H\u001b[12X\u001b[12Cline = line.strip()\u001b[K\u001b[2;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[3;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[4;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Split by space to separate path and repo/packag\u001b[6;64He\u001b[39m\u001b[K\u001b[7;64H\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[8;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[9;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[10;64H\u001b[K\n\u001b[12X\u001b[12Cpath, package = parts\u001b[K\u001b[12;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Extract the last components of path and package\u001b[39m\u001b[14;64H\u001b[12X\u001b[12Cbinary_name = path.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[15;64H\u001b[12X\u001b[12Cpackage_name = package.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[16;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m package_name \u001b[33min\u001b[39m package_set:\u001b[K\u001b[18;64H\u001b[16X\u001b[36m\u001b[1m\u001b[16Cprint\u001b(B\u001b[m(binary_name)\u001b[K\u001b[19;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[21;64H\u001b[4X\u001b[4Cparser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Extract bin\u001b[22;64Hary names for specified packages.\"\u001b[39m)\u001b[K\u001b[23;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'binary_file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path t\u001b[24;64Ho the binary file containing paths and packages.\"\u001b[39m)\u001b[K\u001b[25;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'package_file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path \u001b[26;64Hto the file with limited packages.\"\u001b[39m)\u001b[K\u001b[27;64H\u001b[4X\u001b[4Cargs = parser.parse_args()\u001b[K\u001b[28;64H\u001b[K\n\u001b[43X\u001b[43C37,0-1\u001b[8X\u001b[8C72%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[107.015811, "o", "\u001b[?25l\u001b[1d\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[K\u001b[2;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[3;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Split by space to separate path and repo/packag\u001b[5;64He\u001b[39m\u001b[K\u001b[6;64H\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[7;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[8;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[9;64H\u001b[K\n\u001b[12X\u001b[12Cpath, package = parts\u001b[K\u001b[11;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Extract the last components of path and package\u001b[39m\u001b[13;64H\u001b[12X\u001b[12Cbinary_name = path.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[14;64H\u001b[12X\u001b[12Cpackage_name = package.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[15;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m package_name \u001b[33min\u001b[39m package_set:\u001b[K\u001b[17;64H\u001b[16X\u001b[36m\u001b[1m\u001b[16Cprint\u001b(B\u001b[m(binary_name)\u001b[K\u001b[18;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[20;64H\u001b[4X\u001b[4Cparser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Extract bin\u001b[21;64Hary names for specified packages.\"\u001b[39m)\u001b[K\u001b[22;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'binary_file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path t\u001b[23;64Ho the binary file containing paths and packages.\"\u001b[39m)\u001b[K\u001b[24;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'package_file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path \u001b[25;64Hto the file with limited packages.\"\u001b[39m)\u001b[K\u001b[26;64H\u001b[4X\u001b[4Cargs = parser.parse_args()\u001b[K\u001b[27;64H\u001b[K\n\u001b[4X\u001b[4Cpackage_set = load_packages(args.package_file)\u001b[K\u001b[29;64H\u001b[43X\u001b[43C38,13\u001b[9X\u001b[9C77%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;76H"]
[107.056009, "o", "\u001b[?25l\u001b[1;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[2;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Split by space to separate path and repo/packag\u001b[4;64He\u001b[39m\u001b[K\u001b[5;64H\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[6;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[7;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[8;64H\u001b[K\n\u001b[12X\u001b[12Cpath, package = parts\u001b[K\u001b[10;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Extract the last components of path and package\u001b[39m\u001b[12;64H\u001b[12X\u001b[12Cbinary_name = path.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[13;64H\u001b[12X\u001b[12Cpackage_name = package.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[14;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m package_name \u001b[33min\u001b[39m package_set:\u001b[K\u001b[16;64H\u001b[16X\u001b[36m\u001b[1m\u001b[16Cprint\u001b(B\u001b[m(binary_name)\u001b[K\u001b[17;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[19;64H\u001b[4X\u001b[4Cparser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Extract bin\u001b[20;64Hary names for specified packages.\"\u001b[39m)\u001b[K\u001b[21;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'binary_file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path t\u001b[22;64Ho the binary file containing paths and packages.\"\u001b[39m)\u001b[K\u001b[23;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'package_file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path \u001b[24;64Hto the file with limited packages.\"\u001b[39m)\u001b[K\u001b[25;64H\u001b[4X\u001b[4Cargs = parser.parse_args()\u001b[K\u001b[26;64H\u001b[K\n\u001b[4X\u001b[4Cpackage_set = load_packages(args.package_file)\u001b[K\u001b[28;64H\u001b[4X\u001b[4Cprocess_binaries(args.binary_file, package_set)\u001b[K\u001b[29;64H\u001b[43X\u001b[43C39,13\u001b[9X\u001b[9C83%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;76H"]
[107.075495, "o", "\u001b[?25l\u001b[1;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Split by space to separate path and repo/packag\u001b[3;64He\u001b[39m\u001b[K\u001b[4;64H\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[5;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[6;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[7;64H\u001b[K\n\u001b[12X\u001b[12Cpath, package = parts\u001b[K\u001b[9;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Extract the last components of path and package\u001b[39m\u001b[11;64H\u001b[12X\u001b[12Cbinary_name = path.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[12;64H\u001b[12X\u001b[12Cpackage_name = package.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[13;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m package_name \u001b[33min\u001b[39m package_set:\u001b[K\u001b[15;64H\u001b[16X\u001b[36m\u001b[1m\u001b[16Cprint\u001b(B\u001b[m(binary_name)\u001b[K\u001b[16;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[18;64H\u001b[4X\u001b[4Cparser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Extract bin\u001b[19;64Hary names for specified packages.\"\u001b[39m)\u001b[K\u001b[20;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'binary_file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path t\u001b[21;64Ho the binary file containing paths and packages.\"\u001b[39m)\u001b[K\u001b[22;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'package_file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path \u001b[23;64Hto the file with limited packages.\"\u001b[39m)\u001b[K\u001b[24;64H\u001b[4X\u001b[4Cargs = parser.parse_args()\u001b[K\u001b[25;64H\u001b[K\n\u001b[4X\u001b[4Cpackage_set = load_packages(args.package_file)\u001b[K\u001b[27;64H\u001b[4X\u001b[4Cprocess_binaries(args.binary_file, package_set)\u001b[K\u001b[28;64H\u001b[K\n\u001b[43X\u001b[43C40,0-1\u001b[8X\u001b[8C88%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;64H"]
[107.116072, "o", "\u001b[?25l\u001b[1d\u001b[12X\u001b[36m\u001b[12C# Split by space to separate path and repo/packag\u001b[2;64He\u001b[39m\u001b[K\u001b[3;64H\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[4;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[5;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[6;64H\u001b[K\n\u001b[12X\u001b[12Cpath, package = parts\u001b[K\u001b[8;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Extract the last components of path and package\u001b[39m\u001b[10;64H\u001b[12X\u001b[12Cbinary_name = path.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[11;64H\u001b[12X\u001b[12Cpackage_name = package.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[12;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m package_name \u001b[33min\u001b[39m package_set:\u001b[K\u001b[14;64H\u001b[16X\u001b[36m\u001b[1m\u001b[16Cprint\u001b(B\u001b[m(binary_name)\u001b[K\u001b[15;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[17;64H\u001b[4X\u001b[4Cparser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Extract bin\u001b[18;64Hary names for specified packages.\"\u001b[39m)\u001b[K\u001b[19;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'binary_file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path t\u001b[20;64Ho the binary file containing paths and packages.\"\u001b[39m)\u001b[K\u001b[21;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'package_file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path \u001b[22;64Hto the file with limited packages.\"\u001b[39m)\u001b[K\u001b[23;64H\u001b[4X\u001b[4Cargs = parser.parse_args()\u001b[K\u001b[24;64H\u001b[K\n\u001b[4X\u001b[4Cpackage_set = load_packages(args.package_file)\u001b[K\u001b[26;64H\u001b[4X\u001b[4Cprocess_binaries(args.binary_file, package_set)\u001b[K\u001b[27;64H\u001b[K\u001b[33m\nif\u001b[39m __name__ == \u001b[38;5;130m\"__main__\"\u001b[39m:\u001b[K\u001b[29;64H\u001b[43X\u001b[43C41,13\u001b[9X\u001b[9C94%\u001b[K\u001b[?12l\u001b[?25h\u001b[28;76H"]
[107.136651, "o", "\u001b[?25l\u001b[1;64H\u001b[12X\u001b[12Cparts = line.split()\u001b[K\u001b[2;64H\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) != \u001b[38;5;130m2\u001b[39m:\u001b[K\u001b[3;64H\u001b[16X\u001b[33m\u001b[16Ccontinue\u001b[39m\u001b[K\u001b[4;64H\u001b[K\n\u001b[12X\u001b[12Cpath, package = parts\u001b[K\u001b[6;64H\u001b[K\n\u001b[12X\u001b[36m\u001b[12C# Extract the last components of path and package\u001b[39m\u001b[8;64H\u001b[12X\u001b[12Cbinary_name = path.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[9;64H\u001b[12X\u001b[12Cpackage_name = package.split(\u001b[38;5;130m'/'\u001b[39m)[-\u001b[38;5;130m1\u001b[39m]\u001b[K\u001b[10;64H\u001b[K\n\u001b[12X\u001b[33m\u001b[12Cif\u001b[39m package_name \u001b[33min\u001b[39m package_set:\u001b[K\u001b[12;64H\u001b[16X\u001b[36m\u001b[1m\u001b[16Cprint\u001b(B\u001b[m(binary_name)\u001b[K\u001b[13;64H\u001b[K\u001b[33m\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[15;64H\u001b[4X\u001b[4Cparser = argparse.ArgumentParser(description=\u001b[38;5;130m\"Extract bin\u001b[16;64Hary names for specified packages.\"\u001b[39m)\u001b[K\u001b[17;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'binary_file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path t\u001b[18;64Ho the binary file containing paths and packages.\"\u001b[39m)\u001b[K\u001b[19;64H\u001b[4X\u001b[4Cparser.add_argument(\u001b[38;5;130m'package_file'\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Path \u001b[20;64Hto the file with limited packages.\"\u001b[39m)\u001b[K\u001b[21;64H\u001b[4X\u001b[4Cargs = parser.parse_args()\u001b[K\u001b[22;64H\u001b[K\n\u001b[4X\u001b[4Cpackage_set = load_packages(args.package_file)\u001b[K\u001b[24;64H\u001b[4X\u001b[4Cprocess_binaries(args.binary_file, package_set)\u001b[K\u001b[25;64H\u001b[K\u001b[33m\nif\u001b[39m __name__ == \u001b[38;5;130m\"__main__\"\u001b[39m:\u001b[K\u001b[27;64H\u001b[4X\u001b[4Cmain\u001b[46m()\u001b[49m\u001b[K\u001b[34m\u001b[1m\u001b[28;64H~                                                            \u001b(B\u001b[m\u001b[29;64H\u001b[43X\u001b[43C42,10\u001b[9X\u001b[9CBot\u001b[K\u001b[?12l\u001b[?25h\u001b[27;73H"]
[107.176447, "o", "\u0007"]
[108.801582, "o", "\u001b[29;64H:\u001b[42C\u001b[K\u0007\u001b[42D"]
[111.589153, "o", "q"]
[111.679037, "o", "\b\b"]
[111.682312, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[?25l\u001b[?2004l\u001b[K\u001b[8d\u001b[?12l\u001b[?25h"]
[111.682971, "o", "\u001b[?25l\u001b[1d(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\u001b[2;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\u001b[3;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\u001b[4;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\u001b[5;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\u001b[6;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim scripts/03c.get_bina\u001b[7;64Hry_names.py \u001b[K\u001b[8;64H\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[8d"]
[111.684002, "o", "\u001b[?2004h(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ "]
[111.684419, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[8;101H"]
[112.125207, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:20 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[8;101H"]
[114.836192, "o", "\u001b[?25l\u001b[1;63H\u001b[34mâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[39mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[21;40H"]
[114.836844, "o", "\u001b[?25l\u001b[1;63H\u001b[34mâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[39mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:vim*                                                                   \"gaz@orin: ~/src/uh-ha\" 19:20 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[21;40H"]
[115.444116, "o", "\u001b[29;46H8,112-115\u001b[23;53H"]
[115.954704, "o", "\u001b[29;46H9,19-22  \u001b[24;22H"]
[115.959905, "o", "\u001b[29;45H60,1    \u001b[25;1H"]
[116.000914, "o", "\u001b[29;46H1,70\u001b[27;8H"]
[116.021369, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[35m\u001b[H    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[2;62H\u001b[1K\u001b[36m\r\n## Step 3b: Limit the number of packages based on how many we \u001b[39m\u001b[4;62H\u001b[1K\u001b[36m\rwant to install.\u001b[1m\r\ndata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\u001b[39m\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[20X\u001b[35m\r\n    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[21X\u001b[9;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[5X\u001b[11;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[12;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[13;62H\u001b[1K\u001b[36m\r\n## Step 3c: Get binary names from the packages we installed, p\u001b[39m\u001b[15;62H\u001b[1K\u001b[36m\rlus the defaults.\u001b[1m\r\ndata/03c.binary-names:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages d\r\nata/03b.limited-packages scripts/03c.get_binary_names.py\u001b[6X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Extracting binary names\"\u001b[39m\u001b[22X\u001b[35m\r\n    @\u001b[38;5;130mcat data/01a.ubuntu-bin > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[23X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03c.get_binary_names.py data/01b.ubuntu-binarie\r\ns-and-packages data/03b.limited-packages >> \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[22;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[23;62H\u001b[1K\u001b[36m\r\n## Step 3d: Install the packages into a Docker container, in b\u001b[39m\u001b[25;62H\u001b[1K\u001b[36m\ratches.\u001b[1m\r\ndata/03d.docker-build:\u001b(B\u001b[m scripts/03d.build-docker.sh scripts/03d\r\n.Dockerfile scripts/03d.Dockerfile-base data/03b.limited-packa\u001b[28;62H\u001b[1K\rges\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C62,128\u001b[8X\u001b[8C82%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;4H"]
[116.061378, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[36m\r\n## Step 3b: Limit the number of packages based on how many we \u001b[39m\u001b[3;62H\u001b[1K\u001b[36m\rwant to install.\u001b[1m\r\ndata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\u001b[39m\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[20X\u001b[35m\r\n    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[21X\u001b[8;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[5X\u001b[10;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[11;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[12;62H\u001b[1K\u001b[36m\r\n## Step 3c: Get binary names from the packages we installed, p\u001b[39m\u001b[14;62H\u001b[1K\u001b[36m\rlus the defaults.\u001b[1m\r\ndata/03c.binary-names:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages d\r\nata/03b.limited-packages scripts/03c.get_binary_names.py\u001b[6X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Extracting binary names\"\u001b[39m\u001b[22X\u001b[35m\r\n    @\u001b[38;5;130mcat data/01a.ubuntu-bin > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[23X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03c.get_binary_names.py data/01b.ubuntu-binarie\r\ns-and-packages data/03b.limited-packages >> \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[21;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[22;62H\u001b[1K\u001b[36m\r\n## Step 3d: Install the packages into a Docker container, in b\u001b[39m\u001b[24;62H\u001b[1K\u001b[36m\ratches.\u001b[1m\r\ndata/03d.docker-build:\u001b(B\u001b[m scripts/03d.build-docker.sh scripts/03d\r\n.Dockerfile scripts/03d.Dockerfile-base data/03b.limited-packa\u001b[27;62H\u001b[1K\rges\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Building Docker images for binaries\"\u001b[39m\u001b[10X\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C63,50-53      84%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;53H"]
[116.082804, "o", "\u001b[?25l\u001b[36m\u001b[H## Step 3b: Limit the number of packages based on how many we \u001b[39m\u001b[2;62H\u001b[1K\u001b[36m\rwant to install.\u001b[1m\r\ndata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\u001b[39m\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[20X\u001b[35m\r\n    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[21X\u001b[7;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[5X\u001b[9;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[11;62H\u001b[1K\u001b[36m\r\n## Step 3c: Get binary names from the packages we installed, p\u001b[39m\u001b[13;62H\u001b[1K\u001b[36m\rlus the defaults.\u001b[1m\r\ndata/03c.binary-names:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages d\r\nata/03b.limited-packages scripts/03c.get_binary_names.py\u001b[6X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Extracting binary names\"\u001b[39m\u001b[22X\u001b[35m\r\n    @\u001b[38;5;130mcat data/01a.ubuntu-bin > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[23X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03c.get_binary_names.py data/01b.ubuntu-binarie\r\ns-and-packages data/03b.limited-packages >> \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[20;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[21;62H\u001b[1K\u001b[36m\r\n## Step 3d: Install the packages into a Docker container, in b\u001b[39m\u001b[23;62H\u001b[1K\u001b[36m\ratches.\u001b[1m\r\ndata/03d.docker-build:\u001b(B\u001b[m scripts/03d.build-docker.sh scripts/03d\r\n.Dockerfile scripts/03d.Dockerfile-base data/03b.limited-packa\u001b[26;62H\u001b[1K\rges\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Building Docker images for binaries\"\u001b[39m\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mscripts/03d.build-docker.sh\u001b[39m\u001b[30X\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C64,30-33      86%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;33H"]
[116.123115, "o", "\u001b[?25l\u001b[36m\u001b[1m\u001b[Hdata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\u001b[39m\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[20X\u001b[35m\r\n    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[21X\u001b[5;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[5X\u001b[7;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[8;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[9;62H\u001b[1K\u001b[36m\r\n## Step 3c: Get binary names from the packages we installed, p\u001b[39m\u001b[11;62H\u001b[1K\u001b[36m\rlus the defaults.\u001b[1m\r\ndata/03c.binary-names:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages d\r\nata/03b.limited-packages scripts/03c.get_binary_names.py\u001b[6X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Extracting binary names\"\u001b[39m\u001b[22X\u001b[35m\r\n    @\u001b[38;5;130mcat data/01a.ubuntu-bin > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[23X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03c.get_binary_names.py data/01b.ubuntu-binarie\r\ns-and-packages data/03b.limited-packages >> \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[18;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[19;62H\u001b[1K\u001b[36m\r\n## Step 3d: Install the packages into a Docker container, in b\u001b[39m\u001b[21;62H\u001b[1K\u001b[36m\ratches.\u001b[1m\r\ndata/03d.docker-build:\u001b(B\u001b[m scripts/03d.build-docker.sh scripts/03d\r\n.Dockerfile scripts/03d.Dockerfile-base data/03b.limited-packa\u001b[24;62H\u001b[1K\rges\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Building Docker images for binaries\"\u001b[39m\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mscripts/03d.build-docker.sh\u001b[39m\u001b[30X\u001b[27;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mtouch \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[28;62H\u001b[1K\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C65,13-16      89%\u001b[1X\u001b[?12l\u001b[?25h\u001b[27;16H"]
[116.543501, "o", "\u001b[29;46H4,30-33\u001b[26;33H"]
[116.745949, "o", "\u001b[29;46H3,50-5\u001b[25;53H"]
[116.91179, "o", "\u001b[29;46H2,128  \u001b[24;4H"]
[117.091637, "o", "\u001b[29;46H1,70 \u001b[21;8H"]
[117.27604, "o", "\u001b[29;46H0,1 \u001b[19;1H"]
[117.872195, "o", "\u001b[29;46H1,70\u001b[21;8H"]
[118.847335, "o", "\u001b[?25l\u001b[36m\u001b[1m\u001b[Hdata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\u001b[K\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\u001b[39m\u001b[K\u001b[35m\r\n    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[K\u001b[35m\r\n    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[K\u001b[35m\r\n    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[K\u001b[35m\r\n    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[K\u001b[35m\r\n    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[K\u001b[35m\r\n    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[K\r\n\u001b[K\u001b[36m\r\n## Step 3c: Get binary names from the packages we installed, p\u001b[39m\u001b[K\u001b[36m\r\nlus the defaults.\u001b[39m\u001b[K\u001b[36m\u001b[1m\r\ndata/03c.binary-names:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages d\u001b[K\r\nata/03b.limited-packages scripts/03c.get_binary_names.py\u001b[K\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Extracting binary names\"\u001b[39m\u001b[K\u001b[35m\r\n    @\u001b[38;5;130mcat data/01a.ubuntu-bin > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[K\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03c.get_binary_names.py data/01b.ubuntu-binarie\u001b[39m\u001b[K\u001b[38;5;130m\r\ns-and-packages data/03b.limited-packages >> \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[K\u001b[35m\r\n    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[K\r\n\u001b[K\u001b[36m\r\n## Step 3d: Install the packages into a Docker container, in b\u001b[39m\u001b[K\u001b[36m\r\natches.\u001b[39m\u001b[K\u001b[36m\u001b[1m\r\ndata/03d.docker-build:\u001b(B\u001b[m scripts/03d.build-docker.sh scripts/03d\u001b[K\r\n.Dockerfile scripts/03d.Dockerfile-base data/03b.limited-packa\u001b[K\r\nges\u001b[K\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Building Docker images for binaries\"\u001b[39m\u001b[K\u001b[35m\r\n    @\u001b[38;5;130mscripts/03d.build-docker.sh\u001b[39m\u001b[K\u001b[35m\r\n    @\u001b[38;5;130mtouch \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[K\r\n\u001b[K\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C61,70         89%\u001b[K\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:vim*Z                                                                  \"gaz@orin: ~/src/uh-ha\" 19:20 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[21;8H"]
[118.851119, "o", "\u001b[1;29r\u001b[29S\u001b[1;1H\u001b[36m\u001b[1mdata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\r\n\u001b[35m    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\r\n\u001b[35m    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\r\n\u001b[35m    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\r\n\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\r\n\u001b[35m    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\r\n\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\r\n\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[10;1H\u001b[36m## Step 3c: Get binary names from the packages we installed, plus the defaults.\r\n\u001b[1mdata/03c.binary-names:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages data/03b.limited-packages scripts/03c.get_binary_names.py\r\n\u001b[35m    @\u001b[38;5;130mecho \"03 - Extracting binary names\"\r\n\u001b[35m    @\u001b[38;5;130mcat data/01a.ubuntu-bin > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\r\n\u001b[35m    @\u001b[38;5;130m./scripts/03c.get_binary_names.py data/01b.ubuntu-binaries-and-packages data/03b.limited-packages >> \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\r\n\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[17;1H\u001b[36m## Step 3d: Install the packages into a Docker container, in batches.\r\n\u001b[1mdata/03d.docker-build:\u001b(B\u001b[m scripts/03d.build-docker.sh scripts/03d.Dockerfile scripts/03d.Dockerfile-base data/03b.limited-packages\r\n\u001b[35m    @\u001b[38;5;130mecho \"03 - Building Docker images for binaries\"\r\n\u001b[35m    @\u001b[38;5;130mscripts/03d.build-docker.sh\r\n\u001b[35m    @\u001b[38;5;130mtouch \"\u001b[36m\u001b[1m$@\u001b[1;30r\u001b[22;15H\u001b[?25l\u001b(B\u001b[m"]
[118.851212, "o", "\u001b[38;5;130m\"\u001b[24;1H\u001b[36m## Step 4: Extract --help texts for each binary\r\n\u001b[1mdata/04.run-help-extractor:\u001b(B\u001b[m data/03d.docker-build data/03c.binary-names scripts/04.run-help-extractor.sh\r\n\u001b[35m    @\u001b[38;5;130mecho \"04 - Running --help extractor in Docker\"\r\n\u001b[35m    @\u001b[38;5;130mscripts/04.run-help-extractor.sh\r\n\u001b[35m    @\u001b[38;5;130mtouch \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\r\n-- INSERT --\u001b[94C\u001b[39m61,70\u001b[9CBot\u001b[17;70H\u001b[?12l\u001b[?25h"]
[119.565257, "o", "\u001b[29;108H2,128\u001b[19;4H"]
[119.855385, "o", "\u001b[29;108H1,70 \u001b[17;70H"]
[120.282887, "o", "\u001b[29;108H2,128\u001b[19;4H"]
[121.053264, "o", "\u001b[29;108H3,50-53\u001b[20;53H"]
[121.586581, "o", "\u001b[29;108H4,30-3\u001b[21;33H"]
[121.931757, "o", "\u001b[29;110H29-32\u001b[21;32H"]
[122.438641, "o", "\u001b[29;111H8-31\u001b[21;31H"]
[122.444815, "o", "\u001b[29;111H7-30\u001b[21;30H"]
[122.486934, "o", "\u001b[29;111H6-29\u001b[21;29H"]
[122.507242, "o", "\u001b[29;111H5-28\u001b[21;28H"]
[122.549381, "o", "\u001b[29;111H4-27\u001b[21;27H"]
[122.567699, "o", "\u001b[29;111H3-26\u001b[21;26H"]
[122.588054, "o", "\u001b[29;111H2-25\u001b[21;25H"]
[122.62947, "o", "\u001b[29;111H1-24\u001b[21;24H"]
[122.67019, "o", "\u001b[29;111H0-23\u001b[21;23H"]
[122.69048, "o", "\u001b[29;110H19-22\u001b[21;22H"]
[122.709452, "o", "\u001b[29;111H8-21\u001b[21;21H"]
[122.752249, "o", "\u001b[29;111H7-20\u001b[21;20H"]
[123.546267, "o", "\u001b[?25l\u001b[1;63H\u001b[34mâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[39mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[36m\u001b[1m\u001b[Hdata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\u001b[39m\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[20X\u001b[35m\r\n    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[21X\u001b[5;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[5X\u001b[7;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[8;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[9;62H\u001b[1K\u001b[36m\r\n## Step 3c: Get binary names from the packages we installed, p\u001b[1m\r\ndata/03c.binary-names:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages d\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Extracting binary names\"\u001b[39m\u001b[22X\u001b[35m\r\n    @\u001b[38;5;130mcat data/01a.ubuntu-bin > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[23X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03c.get_binary_names.py data/01b.ubuntu-binarie\u001b[39m\u001b[15;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[16;62H\u001b[1K\u001b[36m\r\n## Step 3d: Install the packages into a Docker container, in b\u001b[1m\r\ndata/03d.docker-build:\u001b(B\u001b[m scripts/03d.build-docker.sh scripts/03d\u001b[19;62H\u001b[1K\rges\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Building Docker images for binaries\"\u001b[39m\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mscripts/03d.build-docker.sh\u001b[39m\u001b[30X\u001b[22;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mtouch \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[23;62H\u001b[1K\u001b[36m\r\n## Step 4: Extract --help texts for each binary\u001b[39m\u001b[15X\u001b[36m\u001b[1m\r\ndata/04.run-help-extractor:\u001b(B\u001b[m data/03d.docker-build data/03c.bin\u001b[35m\r\n    @\u001b[38;5;130mecho \"04 - Running --help extractor in Docker\"\u001b[39m\u001b[11X\u001b[35m\r\n    @\u001b[38;5;130mscripts/04.run-help-extractor.sh\u001b[39m\u001b[25X\u001b[28;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mtouch \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\r\n-- INSERT --\u001b[39m\u001b[50X\u001b[1;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\u001b[2;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\u001b[3;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\u001b[4;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\u001b[5;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\u001b[6;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim scripts/03c.get_bina\u001b[7;64Hry_names.py \u001b[K\u001b[8;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\u001b[9;64H\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:vim*                                                                   \"gaz@orin: ~/src/uh-ha\" 19:20 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[21;20H"]
[123.548368, "o", "\u001b[1;29r\u001b[1;62H\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\u001b[H\u001b[36m\u001b[1mdata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\r\n\u001b[35m    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\r\n\u001b[35m    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\r\n\u001b[35m    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\r\n\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\r\n\u001b[35m    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\r\n\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\r\n\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[10;1H\u001b[36m## Step 3c: Get binary names from the packages we installed, p\r\nlus the defaults.\r\n\u001b[1mdata/03c.binary-names:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages d\r\nata/03b.limited-packages scripts/03c.get_binary_names.py\r\n\u001b[35m    @\u001b[38;5;130mecho \"03 - Extracting binary names\"\r\n\u001b[35m    @\u001b[38;5;130mcat data/01a.ubuntu-bin > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\r\n\u001b[35m    @\u001b[38;5;130m./scripts/03c.get_binary_names.py data/01b.ubuntu-binarie\r\ns-and-packages data/03b.limited-packages >> \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\r\n\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[20;1H\u001b[36m## Step 3d: Install the packages into a Docker container, in b\r\natches.\r\n\u001b[1mdata/03d.docker-build:\u001b(B\u001b[m scripts/03d.build-docker.sh scripts/03d\r\n.Dockerfile scripts/03d.Dockerfile-base data/03b.limited-packa\r\nges\r\n\u001b[35m    @\u001b[38;5;130mecho \"03 - Building Docker images for binaries\"\r\n\u001b[35m    @\u001b[38;5;130mscripts/03d.build-docker.sh\r\n\u001b[35m    @\u001b[1;30r\u001b[27;6H\u001b[?25l\u001b(B\u001b[m\u001b[38;5;130mtouch \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[29;1H-- INSERT --\u001b[32C\u001b[39m64,17-20      89%\u001b[26;20H\u001b[?12l\u001b[?25h"]
[124.17209, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[8;101H"]
[124.172831, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:20 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[8;101H"]
[125.17797, "o", "v"]
[125.28472, "o", "i"]
[125.370745, "o", "m"]
[125.447176, "o", " "]
[125.526721, "o", "s"]
[125.627477, "o", "c"]
[125.898774, "o", "ripts/"]
[128.398886, "o", "0"]
[128.488595, "o", "3"]
[129.691062, "o", "d"]
[130.178956, "o", ".\u0007"]
[131.032418, "o", "b"]
[131.153597, "o", "uild-do\u001b[9;64Hcker.sh "]
[132.466043, "o", "\u001b[10;64H\u001b[?2004l"]
[132.50167, "o", "\u001b[?25l\u001b[1d\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\u001b[?12l\u001b[?25h\u001b[1d\u001b[?2004h"]
[132.502223, "o", "\u001b[1;29r\u001b[1;64H\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\"scripts/03d.build-docker.sh\"\u001b[1;30r\u001b[29;93H\u001b[?25l"]
[132.502389, "o", " 52L, 1889B"]
[132.508755, "o", "\u001b[2;64Hâ–½\b  \u001b[3;64H           \u001b[1;64H"]
[132.512803, "o", "\u001b[36m#!/bin/bash\u001b[39m\u001b[2;64H\u001b[K\n\u001b[36m# Script to build the base Docker image and process batches i\u001b[4;64Hncrementally\u001b[6;64H\u001b[33mset\u001b[36m\u001b[1m \u001b(B\u001b[m\u001b[35m-eux\u001b[8;64H\u001b[36m# Ensure the data directory exists\u001b[9;64H\u001b[33mmkdir\u001b[39m \u001b[35m-p\u001b[39m data\u001b[11;64H\u001b[36m\u001b[1mplain_progress\u001b(B\u001b[m=\u001b[33m\"\"\u001b[13;64H\u001b[36m# didn't bother to check why this doesn't work. either buildx\u001b[14;64H vs build, or a version snafu\u001b[15;64H\u001b[33mif \u001b[39mdocker \u001b[35m--help\u001b[39m build \u001b[33m|\u001b[39m \u001b[33mgrep\u001b[39m \u001b[33m--\u001b[39m \u001b[35m--progress\u001b[33m;\u001b[39m \u001b[33mthen\u001b[16;64H\u001b[39m    \u001b[36m\u001b[1mplain_progress\u001b(B\u001b[m=\u001b[33m\"\u001b[38;5;130m--progress=plain\u001b[33m\"\u001b[17;64Hfi\u001b[19;64H\u001b[36m# Build the base Docker image\u001b[20;64H\u001b[1mbase_image\u001b(B\u001b[m=uh-halp-data-binaries:ubuntu-base-\u001b[35m$(uname -m)\u001b[21;64H\u001b[33mecho\u001b[38;5;130m \u001b[33m\"\u001b[38;5;130mBuilding base \u001b[35m$base_image\u001b[38;5;130m ...\u001b[33m\"\u001b[22;64H\u001b[39mdocker build \u001b[35m$plain_progress\u001b[39m \u001b[35m-t\u001b[39m \u001b[35m$base_image\u001b[39m \u001b[35m-f\u001b[39m scripts/03d.Do\u001b[23;64Hckerfile-base\u001b[33m . \u001b[38;5;130m2\u001b[33m>&1\u001b[39m | tee log/03d.base-build.log\u001b[25;64H\u001b[36m# Split the filtered packages file into batches\u001b[26;64H\u001b[1mbatch_size\u001b(B\u001b[m=\u001b[38;5;130m500\u001b[27;64H\u001b[33mmkdir\u001b[39m \u001b[35m-p\u001b[39m data/03d.packages\u001b[28;64H\u001b[34m\u001b[1m@                                                            \u001b[29;107H\u001b(B\u001b[m1,1\u001b[11CTop\u001b[1;64H\u001b[?12l\u001b[?25h"]
[133.009392, "o", "\u001b[?25l\bâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:vim*                                                                   \"gaz@orin: ~/src/uh-ha\" 19:20 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;64H"]
[133.10337, "o", "\u001b[?25l\u001b[36m\u001b[H#!/bin/bash\u001b[39m\u001b[K\r\n\u001b[K\u001b[36m\r\n# Script to build the base Docker image and process batches i\u001b[39m\u001b[K\u001b[36m\r\nncrementally\u001b[39m\u001b[K\r\n\u001b[K\u001b[33m\r\nset\u001b[36m\u001b[1m \u001b(B\u001b[m\u001b[35m-eux\u001b[39m\u001b[K\r\n\u001b[K\u001b[36m\r\n# Ensure the data directory exists\u001b[39m\u001b[K\u001b[33m\r\nmkdir\u001b[39m \u001b[35m-p\u001b[39m data\u001b[K\r\n\u001b[K\u001b[36m\u001b[1m\r\nplain_progress\u001b(B\u001b[m=\u001b[33m\"\"\u001b[39m\u001b[K\r\n\u001b[K\u001b[36m\r\n# didn't bother to check why this doesn't work. either buildx\u001b[39m\u001b[K\u001b[36m\r\n vs build, or a version snafu\u001b[39m\u001b[K\u001b[33m\r\nif \u001b[39mdocker \u001b[35m--help\u001b[39m build \u001b[33m|\u001b[39m \u001b[33mgrep\u001b[39m \u001b[33m--\u001b[39m \u001b[35m--progress\u001b[33m;\u001b[39m \u001b[33mthen\u001b[39m\u001b[K\r\n    \u001b[36m\u001b[1mplain_progress\u001b(B\u001b[m=\u001b[33m\"\u001b[38;5;130m--progress=plain\u001b[33m\"\u001b[39m\u001b[K\u001b[33m\r\nfi\u001b[39m\u001b[K\r\n\u001b[K\u001b[36m\r\n# Build the base Docker image\u001b[39m\u001b[K\u001b[36m\u001b[1m\r\nbase_image\u001b(B\u001b[m=uh-halp-data-binaries:ubuntu-base-\u001b[35m$(uname -m)\u001b[39m\u001b[K\u001b[33m\r\necho\u001b[38;5;130m \u001b[33m\"\u001b[38;5;130mBuilding base \u001b[35m$base_image\u001b[38;5;130m ...\u001b[33m\"\u001b[39m\u001b[K\r\ndocker build \u001b[35m$plain_progress\u001b[39m \u001b[35m-t\u001b[39m \u001b[35m$base_image\u001b[39m \u001b[35m-f\u001b[39m scripts/03d.Do\u001b[K\r\nckerfile-base\u001b[33m . \u001b[38;5;130m2\u001b[33m>&1\u001b[39m | tee log/03d.base-build.log\u001b[K\r\n\u001b[K\u001b[36m\r\n# Split the filtered packages file into batches\u001b[39m\u001b[K\u001b[36m\u001b[1m\r\nbatch_size\u001b(B\u001b[m=\u001b[38;5;130m500\u001b[39m\u001b[K\u001b[33m\r\nmkdir\u001b[39m \u001b[35m-p\u001b[39m data/03d.packages\u001b[K\u001b[34m\u001b[1m\r\n@                                                            \u001b(B\u001b[m\u001b[K\r\n\"scripts/03d.build-docker.sh\" 52L, 1889B\u001b[3X\u001b[3C1,1\u001b[11X\u001b[11CTop\u001b[K\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:vim*Z                                                                  \"gaz@orin: ~/src/uh-ha\" 19:20 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;1H"]
[133.107393, "o", "\u001b[1;29r\u001b[29S\u001b[1;1H\u001b[36m#!/bin/bash\u001b[3;1H# Script to build the base Docker image and process batches incrementally\u001b[5;1H\u001b[33mset\u001b[36m\u001b[1m \u001b(B\u001b[m\u001b[35m-eux\u001b[7;1H\u001b[36m# Ensure the data directory exists\r\n\u001b[33mmkdir\u001b[39m \u001b[35m-p\u001b[39m data\u001b[10;1H\u001b[36m\u001b[1mplain_progress\u001b(B\u001b[m=\u001b[33m\"\"\u001b[12;1H\u001b[36m# didn't bother to check why this doesn't work. either buildx vs build, or a version snafu\r\n\u001b[33mif \u001b[39mdocker \u001b[35m--help\u001b[39m build \u001b[33m|\u001b[39m \u001b[33mgrep\u001b[39m \u001b[33m--\u001b[39m \u001b[35m--progress\u001b[33m;\u001b[39m \u001b[33mthen\r\n\u001b[39m    \u001b[36m\u001b[1mplain_progress\u001b(B\u001b[m=\u001b[33m\"\u001b[38;5;130m--progress=plain\u001b[33m\"\r\nfi\u001b[17;1H\u001b[36m# Build the base Docker image\r\n\u001b[1mbase_image\u001b(B\u001b[m=uh-halp-data-binaries:ubuntu-base-\u001b[35m$(uname -m)\r\n\u001b[33mecho\u001b[38;5;130m \u001b[33m\"\u001b[38;5;130mBuilding base \u001b[35m$base_image\u001b[38;5;130m ...\u001b[33m\"\r\n\u001b[39mdocker build \u001b[35m$plain_progress\u001b[39m \u001b[35m-t\u001b[39m \u001b[35m$base_image\u001b[39m \u001b[35m-f\u001b[39m scripts/03d.Dockerfile-base\u001b[33m . \u001b[38;5;130m2\u001b[33m>&1\u001b[39m | tee log/03d.base-build.log\u001b[22;1H\u001b[36m# Split the filtered packages file into batches\r\n\u001b[1mbatch_size\u001b(B\u001b[m=\u001b[38;5;130m500\r\n\u001b[33mmkdir\u001b[39m \u001b[35m-p\u001b[39m data/03d.packages\r\nsplit \u001b[35m-a\u001b[39m \u001b[38;5;130m3\u001b[39m \u001b[35m-d\u001b[39m \u001b[35m-l\u001b[39m \u001b[35m$batch_size\u001b[39m data/03b.limited-packages data/03d.packages/\u001b[27;1H\u001b[36m# Process each batch\r\n\u001b[33mfor\u001b[39m batch_file \u001b[33min\u001b[39m data/03d.packages/*; \u001b[33mdo\u001b[29;107H\u001b[39m1,1\u001b[11CTop\u001b[1;30r\u001b[1;1H"]
[133.695207, "o", "\u001b[29;107H2,0-1\u001b[2;1H"]
[134.183337, "o", "\u001b[29;107H3,1  \u001b[3;1H"]
[134.209239, "o", "\u001b[29;107H4,0-1\u001b[4;1H"]
[134.230725, "o", "\u001b[29;107H5,1  \u001b[5;1H"]
[134.272435, "o", "\u001b[29;107H6,0-1\u001b[6;1H"]
[134.292042, "o", "\u001b[29;107H7,1  \u001b[7;1H"]
[134.333346, "o", "\u001b[29;107H8\u001b[8;1H"]
[134.353723, "o", "\u001b[29;107H9,0-1\u001b[9;1H"]
[134.395967, "o", "\u001b[29;107H10,1 \u001b[10;1H"]
[134.41584, "o", "\u001b[29;108H1,0-1\u001b[11;1H"]
[134.457823, "o", "\u001b[29;108H2,1  \u001b[12;1H"]
[134.478377, "o", "\u001b[29;108H3\u001b[13;1H"]
[134.519103, "o", "\u001b[29;108H4\u001b[14;1H"]
[134.539784, "o", "\u001b[29;108H5\u001b[15;1H"]
[134.579336, "o", "\u001b[29;108H6,0-1\u001b[16;1H"]
[134.599831, "o", "\u001b[29;108H7,1  \u001b[17;1H"]
[134.642336, "o", "\u001b[29;108H8\u001b[18;1H"]
[134.662849, "o", "\u001b[29;108H9\u001b[19;1H"]
[134.703472, "o", "\u001b[29;107H20\u001b[20;1H"]
[134.725823, "o", "\u001b[29;108H1,0-1\u001b[21;1H"]
[135.710089, "o", "\u001b[29;108H2,1  \u001b[22;1H"]
[136.22248, "o", "\u001b[29;108H3\u001b[23;1H"]
[136.228545, "o", "\u001b[29;108H4\u001b[24;1H"]
[136.270026, "o", "\u001b[29;108H5\u001b[25;1H"]
[136.290104, "o", "\u001b[29;108H6,0-1\u001b[26;1H"]
[136.311548, "o", "\u001b[29;108H7,1  \u001b[27;1H"]
[136.353418, "o", "\u001b[29;108H8\u001b[28;1H"]
[136.375381, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4C\u001b[36m\u001b[1mnum\u001b(B\u001b[m=\u001b[35m$(\u001b[33mecho\u001b[38;5;130m \u001b[35m$(basename \u001b[33m\"\u001b[35m$batch_file\u001b[33m\"\u001b[35m)\u001b[38;5;130m \u001b[33m|\u001b[35m bc)\u001b[29;107H\u001b[39m29,1\u001b[11X\u001b[11C4%\u001b[K\u001b[1;30r\u001b[28;1H"]
[136.416813, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4C\u001b[36m\u001b[1mbatch_tag\u001b(B\u001b[m=ubuntu-\u001b[35m$(( num * batch_size + batch_size ))\u001b[39m-\u001b[35m$(uname -m)\u001b[29;107H\u001b[39m30,1\u001b[11X\u001b[11C8%\u001b[K\u001b[1;30r\u001b[28;1H"]
[136.436603, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4C\u001b[33mecho\u001b[38;5;130m \u001b[33m\"\u001b[38;5;130mBuilding image for \u001b[35m$batch_file\u001b[38;5;130m...\u001b[33m\"\u001b[29;107H\u001b[39m31,1\u001b[10X\u001b[10C12%\u001b[K\u001b[1;30r\u001b[28;1H"]
[136.477585, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[29;107H32,0-1\u001b[8X\u001b[8C16%\u001b[K\u001b[1;30r\u001b[28;1H"]
[136.498186, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4C\u001b[36m# Build the Docker image for the current batch and log output\u001b[29;107H\u001b[39m33,1\u001b[10X\u001b[10C20%\u001b[K\u001b[1;30r\u001b[28;1H"]
[136.540179, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4Cdocker build \u001b[35m$plain_progress\u001b[39m \\\u001b[29;107H34,1\u001b[10X\u001b[10C25%\u001b[K\u001b[1;30r\u001b[28;1H"]
[136.561643, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[8C\u001b[35m--build-arg\u001b[39m \u001b[36m\u001b[1mBASE_IMAGE\u001b(B\u001b[m=\u001b[35m$base_image\u001b[39m \\\u001b[29;107H35,1\u001b[10X\u001b[10C29%\u001b[K\u001b[1;30r\u001b[28;1H"]
[136.601398, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[8C\u001b[35m--build-arg\u001b[39m \u001b[36m\u001b[1mBATCH_FILE\u001b(B\u001b[m=\u001b[35m$batch_file\u001b[39m \\\u001b[29;107H36,1\u001b[10X\u001b[10C33%\u001b[K\u001b[1;30r\u001b[28;1H"]
[136.620662, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[8C\u001b[33m-t\u001b[39m uh-halp-data-binaries:\u001b[35m$batch_tag\u001b[39m \\\u001b[29;107H37,1\u001b[10X\u001b[10C37%\u001b[K\u001b[1;30r\u001b[28;1H"]
[136.665281, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[8C\u001b[33m-f\u001b[39m scripts/03d.Dockerfile\u001b[33m . \u001b[38;5;130m2\u001b[33m>&\u001b[38;5;130m1\u001b[39m \u001b[33m|\u001b[39m tee log/03d.build-\u001b[33m\"\u001b[35m$batch_tag\u001b[33m\"\u001b[39m.log\u001b[29;107H38,1\u001b[10X\u001b[10C41%\u001b[K\u001b[1;30r\u001b[28;1H"]
[136.682962, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[29;107H39,0-1\u001b[8X\u001b[8C45%\u001b[K\u001b[1;30r\u001b[28;1H"]
[136.924538, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4C\u001b[36m# Update the base image for the next iteration\u001b[29;107H\u001b[39m40,1\u001b[10X\u001b[10C50%\u001b[K\u001b[1;30r\u001b[28;1H"]
[137.438703, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4C\u001b[36m\u001b[1mbase_image\u001b(B\u001b[m=uh-halp-data-binaries:\u001b[35m$batch_tag\u001b[29;107H\u001b[39m41,1\u001b[10X\u001b[10C54%\u001b[K\u001b[1;30r\u001b[28;1H"]
[137.444742, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[29;107H42,0-1\u001b[8X\u001b[8C58%\u001b[K\u001b[1;30r\u001b[28;1H"]
[137.485344, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4C\u001b[36m# Extract failed log\u001b[29;107H\u001b[39m43,1\u001b[10X\u001b[10C62%\u001b[K\u001b[1;30r\u001b[28;1H"]
[137.504951, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4C\u001b[36m\u001b[1mfailed_log_container_path\u001b(B\u001b[m=\u001b[33m\"\u001b[38;5;130m/data/failed-packages.log\u001b[33m\"\u001b[29;107H\u001b[39m44,1\u001b[10X\u001b[10C66%\u001b[K\u001b[1;30r\u001b[28;1H"]
[137.545338, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4C\u001b[36m\u001b[1mhost_log_path\u001b(B\u001b[m=\u001b[33m\"\u001b[38;5;130mlog/failed-packages-\u001b[35m$batch_tag\u001b[38;5;130m.log\u001b[33m\"\u001b[29;107H\u001b[39m45,1\u001b[10X\u001b[10C70%\u001b[K\u001b[1;30r\u001b[28;1H"]
[137.565606, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4C\u001b[33mecho\u001b[38;5;130m \u001b[33m\"\u001b[38;5;130mExtracting failed log from the batch image...\u001b[33m\"\u001b[29;107H\u001b[39m46,1\u001b[10X\u001b[10C75%\u001b[K\u001b[1;30r\u001b[28;1H"]
[137.588813, "o", "\u001b[1;28r\u001b[1;1H\u001b[2M\u001b[27;5Hdocker run \u001b[35m--rm\u001b[39m \u001b[35m$base_image\u001b[39m \u001b[33mcat\u001b[39m \u001b[33m\"\u001b[35m$failed_log_container_path\u001b[33m\"\u001b[39m \u001b[33m>\u001b[39m \u001b[33m\"\u001b[35m$host_log_path\u001b[33m\"\u001b[39m \u001b[33m||\u001b[39m \u001b[33mecho\u001b[38;5;130m \u001b[33m\"\u001b[38;5;130mNo failed log found in the batch image.\u001b[33m\"\u001b[29;107H\u001b[39m47,1\u001b[10X\u001b[10C80%\u001b[K\u001b[1;30r\u001b[27;1H"]
[137.627003, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[33mdone\u001b[29;107H\u001b[39m48,1\u001b[10X\u001b[10C84%\u001b[K\u001b[1;30r\u001b[28;1H"]
[138.011563, "o", "\u001b[29;108H7\u001b[26;1H"]
[138.507199, "o", "\u001b[29;108H6\u001b[25;1H"]
[138.527104, "o", "\u001b[29;108H5\u001b[24;1H"]
[138.546609, "o", "\u001b[29;108H4\u001b[23;1H"]
[138.58939, "o", "\u001b[29;108H3\u001b[22;1H"]
[138.609138, "o", "\u001b[29;108H2,0-1\u001b[21;1H"]
[138.651986, "o", "\u001b[29;108H1,1  \u001b[20;1H"]
[138.670771, "o", "\u001b[29;108H0\u001b[19;1H"]
[138.710775, "o", "\u001b[29;107H39,0-1\u001b[18;1H"]
[138.730226, "o", "\u001b[29;108H8,1  \u001b[17;1H"]
[138.771239, "o", "\u001b[29;108H7\u001b[16;1H"]
[138.791661, "o", "\u001b[29;108H6\u001b[15;1H"]
[138.833929, "o", "\u001b[29;108H5\u001b[14;1H"]
[138.854153, "o", "\u001b[29;108H4\u001b[13;1H"]
[138.895313, "o", "\u001b[29;108H3\u001b[12;1H"]
[138.915653, "o", "\u001b[29;108H2,0-1\u001b[11;1H"]
[138.954665, "o", "\u001b[29;108H1,1  \u001b[10;1H"]
[138.975584, "o", "\u001b[29;108H0\u001b[9;1H"]
[138.995146, "o", "\u001b[29;107H29\u001b[8;1H"]
[139.036792, "o", "\u001b[29;108H8\u001b[7;1H"]
[139.056343, "o", "\u001b[29;108H7\u001b[6;1H"]
[139.09748, "o", "\u001b[29;108H6,0-1\u001b[5;1H"]
[139.117413, "o", "\u001b[29;108H5,1  \u001b[4;1H"]
[139.158641, "o", "\u001b[29;108H4\u001b[3;1H"]
[139.18012, "o", "\u001b[29;108H3\u001b[2;1H"]
[140.40966, "o", "\u001b[29;108H4\u001b[3;1H"]
[140.554272, "o", "\u001b[29;108H5\u001b[4;1H"]
[140.862066, "o", "\u001b[29;108H6,0-1\u001b[5;1H"]
[141.024064, "o", "\u001b[29;108H7,1  \u001b[6;1H"]
[141.354149, "o", "\u001b[29;108H8\u001b[7;1H"]
[141.538265, "o", "\u001b[29;108H9\u001b[8;1H"]
[142.925045, "o", "\u001b[29;108H8\u001b[7;1H"]
[143.15248, "o", "\u001b[29;108H7\u001b[6;1H"]
[143.349602, "o", "\u001b[29;108H6,0-1\u001b[5;1H"]
[143.473469, "o", "\u001b[29;108H5,1  \u001b[4;1H"]
[143.831774, "o", "\u001b[29;108H4\u001b[3;1H"]
[145.187671, "o", "\u001b[?25l\u001b[30m\u001b[44m\u001b[30d[0] 0:sudo- 1:vim*Z                                                                  \"gaz@orin: ~/src/uh-ha\" 19:21 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[3;1H"]
[145.463784, "o", "\u001b[29;108H5\u001b[4;1H"]
[145.957662, "o", "\u001b[29;108H6,0-1\u001b[5;1H"]
[145.964704, "o", "\u001b[29;108H7,1  \u001b[6;1H"]
[146.005437, "o", "\u001b[29;108H8\u001b[7;1H"]
[146.025862, "o", "\u001b[29;108H9\u001b[8;1H"]
[146.070039, "o", "\u001b[29;107H30\u001b[9;1H"]
[146.088299, "o", "\u001b[29;108H1\u001b[10;1H"]
[146.109637, "o", "\u001b[29;108H2,0-1\u001b[11;1H"]
[146.150376, "o", "\u001b[29;108H3,1  \u001b[12;1H"]
[146.169895, "o", "\u001b[29;108H4\u001b[13;1H"]
[146.212007, "o", "\u001b[29;108H5\u001b[14;1H"]
[146.233751, "o", "\u001b[29;108H6\u001b[15;1H"]
[146.275216, "o", "\u001b[29;108H7\u001b[16;1H"]
[146.294768, "o", "\u001b[29;108H8\u001b[17;1H"]
[146.336015, "o", "\u001b[29;108H9,0-1\u001b[18;1H"]
[146.355399, "o", "\u001b[29;107H40,1  \u001b[19;1H"]
[146.395777, "o", "\u001b[29;108H1\u001b[20;1H"]
[146.416946, "o", "\u001b[29;108H2,0-1\u001b[21;1H"]
[146.458785, "o", "\u001b[29;108H3,1  \u001b[22;1H"]
[146.479383, "o", "\u001b[29;108H4\u001b[23;1H"]
[146.500298, "o", "\u001b[29;108H5\u001b[24;1H"]
[146.540291, "o", "\u001b[29;108H6\u001b[25;1H"]
[146.58088, "o", "\u001b[29;108H7\u001b[26;1H"]
[146.599596, "o", "\u001b[29;108H8\u001b[28;1H"]
[146.621549, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[29;107H49,0-1\u001b[8X\u001b[8C88%\u001b[K\u001b[1;30r\u001b[28;1H"]
[147.008184, "o", "\u001b[29;108H8,1  \u001b[27;1H"]
[147.213455, "o", "\u001b[29;108H7\u001b[25;1H"]
[147.398686, "o", "\u001b[29;108H6\u001b[24;1H"]
[147.561796, "o", "\u001b[29;108H5\u001b[23;1H"]
[148.721752, "o", "\u001b[29;108H6\u001b[24;1H"]
[148.90575, "o", "\u001b[29;108H7\u001b[25;1H"]
[151.438979, "o", "\u001b[29;108H8\u001b[27;1H"]
[151.964174, "o", "\u001b[29;108H9,0-1\u001b[28;1H"]
[151.968583, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[36m# Final image tag\u001b[29;107H\u001b[39m50,1\u001b[10X\u001b[10C92%\u001b[K\u001b[1;30r\u001b[28;1H"]
[152.009233, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[Kdocker tag \u001b[35m$base_image\u001b[39m uh-halp-data-binaries:ubuntu-final-\u001b[35m$(uname -m)\u001b[29;107H\u001b[39m51,1\u001b[10X\u001b[10C96%\u001b[K\u001b[1;30r\u001b[28;1H"]
[152.030008, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[33mecho\u001b[38;5;130m \u001b[33m\"\u001b[38;5;130mFinal image built: uh-halp-data-binaries:ubuntu-final-\u001b[35m$(uname -m)\u001b[33m\"\u001b[29;107H\u001b[39m52,1\u001b[10X\u001b[10CBot\u001b[K\u001b[1;30r\u001b[28;1H"]
[152.068692, "o", "\u0007"]
[154.676219, "o", "\r\n:\u001b[105C\u001b[K\u001b[2G"]
[154.959925, "o", "q"]
[155.163708, "o", "!"]
[157.231644, "o", "\r"]
[157.234881, "o", "\u001b[?25l\u001b[?12l\u001b[?25h\u001b[?25l\u001b[?2004l\u001b[K"]
[157.235471, "o", "\u001b[1;4H\u001b[1K\u001b[36m\u001b[1m\u001b[Cnum\u001b(B\u001b[m=\u001b[35m$(\u001b[33mecho\u001b[38;5;130m \u001b[35m$(basename \u001b[33m\"\u001b[35m$batch_file\u001b[33m\"\u001b[35m)\u001b[38;5;130m \u001b[33m|\u001b[35m bc)\u001b[39m\u001b[K\u001b[2;4H\u001b[1K\u001b[36m\u001b[1m\u001b[Cbatch_tag\u001b(B\u001b[m=ubuntu-\u001b[35m$(( num * batch_size + batch_size ))\u001b[39m-\u001b[35m$(uname -m)\u001b[39m\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim scripts/03c.get_binary_names.py \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim scripts/03d.build-docker.sh \u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[10d\u001b[?12l\u001b[?25h"]
[157.236757, "o", "\u001b[?2004h"]
[157.236936, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ "]
[157.237153, "o", "\u001b[?25l\u001b[?12l\u001b[?25h"]
[157.741533, "o", "\u001b[?25l\u001b[30m\u001b[44m\u001b[30;1H[0] 0:sudo- 1:bash*Z                                                                 \"gaz@orin: ~/src/uh-ha\" 19:21 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[10;38H"]
[158.294553, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[36m\u001b[1m\u001b[Hdata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\u001b[39m\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[20X\u001b[35m\r\n    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[21X\u001b[5;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[5X\u001b[7;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[8;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[9;62H\u001b[1K\u001b[36m\r\n## Step 3c: Get binary names from the packages we installed, p\u001b[39m\u001b[11;62H\u001b[1K\u001b[36m\rlus the defaults.\u001b[1m\r\ndata/03c.binary-names:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages d\r\nata/03b.limited-packages scripts/03c.get_binary_names.py\u001b[6X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Extracting binary names\"\u001b[39m\u001b[22X\u001b[35m\r\n    @\u001b[38;5;130mcat data/01a.ubuntu-bin > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[23X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03c.get_binary_names.py data/01b.ubuntu-binarie\r\ns-and-packages data/03b.limited-packages >> \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[18;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[19;62H\u001b[1K\u001b[36m\r\n## Step 3d: Install the packages into a Docker container, in b\u001b[39m\u001b[21;62H\u001b[1K\u001b[36m\ratches.\u001b[1m\r\ndata/03d.docker-build:\u001b(B\u001b[m scripts/03d.build-docker.sh scripts/03d\r\n.Dockerfile scripts/03d.Dockerfile-base data/03b.limited-packa\u001b[24;62H\u001b[1K\rges\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Building Docker images for binaries\"\u001b[39m\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mscripts/03d.build-docker.sh\u001b[39m\u001b[30X\u001b[27;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mtouch \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[28;62H\u001b[1K\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C64,17-20      89%\u001b[1X\u001b[1;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\u001b[2;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\u001b[3;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\u001b[4;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\u001b[5;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\u001b[6;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim scripts/03c.get_bina\u001b[7;64Hry_names.py \u001b[K\u001b[8;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim scripts/03d.build-do\u001b[9;64Hcker.sh \u001b[K\u001b[10;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\u001b[11;64H\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:21 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[10;101H"]
[158.295075, "o", "\u001b[37D(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K"]
[158.295398, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[10;101H"]
[159.848022, "o", "\u001b[?25l\u001b[1;63H\u001b[34mâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[39mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[26;20H"]
[159.848674, "o", "\u001b[?25l\u001b[1;63H\u001b[34mâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[39mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:vim*                                                                   \"gaz@orin: ~/src/uh-ha\" 19:21 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[26;20H"]
[160.694552, "o", "\u001b[29;46H5,13-16\u001b[27;16H"]
[161.017915, "o", "\u001b[29;46H4,17-20\u001b[26;20H"]
[161.650836, "o", "\u001b[29;46H5,13-16\u001b[27;16H"]
[161.813819, "o", "\u001b[29;46H6,1    \u001b[28;1H"]
[161.991344, "o", "\u001b[?25l\u001b[35m\u001b[H    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\u001b[39m\u001b[9X\u001b[35m\r\n    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[20X\u001b[35m\r\n    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[21X\u001b[4;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[5X\u001b[6;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[7;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[8;62H\u001b[1K\u001b[36m\r\n## Step 3c: Get binary names from the packages we installed, p\u001b[39m\u001b[10;62H\u001b[1K\u001b[36m\rlus the defaults.\u001b[1m\r\ndata/03c.binary-names:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages d\r\nata/03b.limited-packages scripts/03c.get_binary_names.py\u001b[6X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Extracting binary names\"\u001b[39m\u001b[22X\u001b[35m\r\n    @\u001b[38;5;130mcat data/01a.ubuntu-bin > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[23X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03c.get_binary_names.py data/01b.ubuntu-binarie\r\ns-and-packages data/03b.limited-packages >> \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[17;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[18;62H\u001b[1K\u001b[36m\r\n## Step 3d: Install the packages into a Docker container, in b\u001b[39m\u001b[20;62H\u001b[1K\u001b[36m\ratches.\u001b[1m\r\ndata/03d.docker-build:\u001b(B\u001b[m scripts/03d.build-docker.sh scripts/03d\r\n.Dockerfile scripts/03d.Dockerfile-base data/03b.limited-packa\u001b[23;62H\u001b[1K\rges\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Building Docker images for binaries\"\u001b[39m\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mscripts/03d.build-docker.sh\u001b[39m\u001b[30X\u001b[26;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mtouch \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[27;62H\u001b[1K\u001b[36m\r\n## Step 4: Extract --help texts for each binary\u001b[39m\u001b[15X\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C67,20\u001b[9X\u001b[9C91%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;20H"]
[162.154726, "o", "\u001b[?25l\u001b[35m\u001b[H    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[21X\u001b[2;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[5X\u001b[4;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[5;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[6;62H\u001b[1K\u001b[36m\r\n## Step 3c: Get binary names from the packages we installed, p\u001b[39m\u001b[8;62H\u001b[1K\u001b[36m\rlus the defaults.\u001b[1m\r\ndata/03c.binary-names:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages d\r\nata/03b.limited-packages scripts/03c.get_binary_names.py\u001b[6X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Extracting binary names\"\u001b[39m\u001b[22X\u001b[35m\r\n    @\u001b[38;5;130mcat data/01a.ubuntu-bin > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[23X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03c.get_binary_names.py data/01b.ubuntu-binarie\r\ns-and-packages data/03b.limited-packages >> \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[15;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[16;62H\u001b[1K\u001b[36m\r\n## Step 3d: Install the packages into a Docker container, in b\u001b[39m\u001b[18;62H\u001b[1K\u001b[36m\ratches.\u001b[1m\r\ndata/03d.docker-build:\u001b(B\u001b[m scripts/03d.build-docker.sh scripts/03d\r\n.Dockerfile scripts/03d.Dockerfile-base data/03b.limited-packa\u001b[21;62H\u001b[1K\rges\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Building Docker images for binaries\"\u001b[39m\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mscripts/03d.build-docker.sh\u001b[39m\u001b[30X\u001b[24;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mtouch \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[25;62H\u001b[1K\u001b[36m\r\n## Step 4: Extract --help texts for each binary\u001b[39m\u001b[15X\u001b[36m\u001b[1m\r\ndata/04.run-help-extractor:\u001b(B\u001b[m data/03d.docker-build data/03c.bin\r\nary-names scripts/04.run-help-extractor.sh\u001b[20X\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C68,20\u001b[9X\u001b[9C94%\u001b[1X\u001b[?12l\u001b[?25h\u001b[27;20H"]
[162.315762, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[35m\u001b[H    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[5X\u001b[3;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[4;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[5;62H\u001b[1K\u001b[36m\r\n## Step 3c: Get binary names from the packages we installed, p\u001b[39m\u001b[7;62H\u001b[1K\u001b[36m\rlus the defaults.\u001b[1m\r\ndata/03c.binary-names:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages d\r\nata/03b.limited-packages scripts/03c.get_binary_names.py\u001b[6X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Extracting binary names\"\u001b[39m\u001b[22X\u001b[35m\r\n    @\u001b[38;5;130mcat data/01a.ubuntu-bin > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[23X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03c.get_binary_names.py data/01b.ubuntu-binarie\r\ns-and-packages data/03b.limited-packages >> \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[14;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[15;62H\u001b[1K\u001b[36m\r\n## Step 3d: Install the packages into a Docker container, in b\u001b[39m\u001b[17;62H\u001b[1K\u001b[36m\ratches.\u001b[1m\r\ndata/03d.docker-build:\u001b(B\u001b[m scripts/03d.build-docker.sh scripts/03d\r\n.Dockerfile scripts/03d.Dockerfile-base data/03b.limited-packa\u001b[20;62H\u001b[1K\rges\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Building Docker images for binaries\"\u001b[39m\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mscripts/03d.build-docker.sh\u001b[39m\u001b[30X\u001b[23;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mtouch \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[24;62H\u001b[1K\u001b[36m\r\n## Step 4: Extract --help texts for each binary\u001b[39m\u001b[15X\u001b[36m\u001b[1m\r\ndata/04.run-help-extractor:\u001b(B\u001b[m data/03d.docker-build data/03c.bin\r\nary-names scripts/04.run-help-extractor.sh\u001b[20X\u001b[35m\r\n    @\u001b[38;5;130mecho \"04 - Running --help extractor in Docker\"\u001b[39m\u001b[11X\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C69,17-20      96%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;20H"]
[162.623619, "o", "\u001b[29;46H8,20   \u001b[26;20H"]
[162.784137, "o", "\u001b[29;46H7\u001b[25;20H"]
[162.966861, "o", "\u001b[29;46H6,1 \u001b[24;1H"]
[163.342642, "o", "\u001b[29;46H7,20\u001b[25;20H"]
[163.682743, "o", "\u001b[29;46H6,1 \u001b[24;1H"]
[163.844466, "o", "\u001b[29;46H5,13-16\u001b[23;16H"]
[164.004279, "o", "\u001b[29;46H4,17-20\u001b[22;20H"]
[164.168409, "o", "\u001b[29;46H3\u001b[21;20H"]
[164.390332, "o", "\u001b[29;46H2,20   \u001b[18;20H"]
[165.028954, "o", "\u001b[29;46H3,17-20\u001b[21;20H"]
[167.499734, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[10;101H"]
[167.500366, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:21 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[10;101H"]
[169.741689, "o", "c"]
[169.789656, "o", "d"]
[169.970006, "o", " "]
[170.04074, "o", "s"]
[170.17534, "o", "c"]
[170.36016, "o", "r"]
[171.135518, "o", "i"]
[171.27739, "o", "p"]
[171.431743, "o", "t"]
[171.494068, "o", "s"]
[171.832227, "o", "\u001b[11;64H\u001b[?2004l"]
[171.83284, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data/scripts\u001b(B\u001b[m$ \u001b[?2004h"]
[171.833392, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[11;109H"]
[172.992335, "o", "l"]
[173.059229, "o", "s"]
[173.219388, "o", " "]
[174.097574, "o", "-"]
[174.32159, "o", "l"]
[174.50661, "o", "a"]
[174.67056, "o", " "]
[176.169813, "o", "0"]
[176.847006, "o", "3"]
[177.377631, "o", "*"]
[178.467634, "o", "\u001b[12;64H\u001b[?2004l"]
[178.471035, "o", "-rwxrwxr-x 1 gaz gaz 2901 Dec 27 13:47 \u001b[32m\u001b[1m03a.package_priority.p\u001b[13;64Hy\u001b[14;64H\u001b(B\u001b[m-rwxrwxr-x 1 gaz gaz 1403 Dec 27 10:04 \u001b[32m\u001b[1m03c.get_binary_names.p\u001b[15;64Hy\u001b[16;64H\u001b(B\u001b[m-rwxrwxr-x 1 gaz gaz 1889 Dec 30 02:59 \u001b[32m\u001b[1m03d.build-docker.sh\u001b[17;64H\u001b(B\u001b[m-rw-rw-r-- 1 gaz gaz  376 Dec 31 17:31 03d.Dockerfile\u001b[18;64H-rw-rw-r-- 1 gaz gaz  631 Dec 30 01:49 03d.Dockerfile-base\u001b[19;64H-rwxrwxr-x 1 gaz gaz 1053 Dec 31 17:31 \u001b[32m\u001b[1m03d.install-packages.s\u001b[20;64Hh\u001b[21;64H\u001b(B\u001b[m"]
[178.471518, "o", "\u001b[?2004h(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data/scripts\u001b(B\u001b[m$ "]
[178.472001, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[21;109H"]
[179.282658, "o", "\u001b[?25l\u001b[H\u001b[K\u001b[36m\r\n# Process each batch\u001b[39m\u001b[K\u001b[33m\r\nfor\u001b[39m batch_file \u001b[33min\u001b[39m data/03d.packages/*; \u001b[33mdo\u001b[39m\u001b[K\u001b[4;4H\u001b[1K\u001b[36m\u001b[1m\u001b[Cnum\u001b(B\u001b[m=\u001b[35m$(\u001b[33mecho\u001b[38;5;130m \u001b[35m$(basename \u001b[33m\"\u001b[35m$batch_file\u001b[33m\"\u001b[35m)\u001b[38;5;130m \u001b[33m|\u001b[35m bc)\u001b[39m\u001b[K\u001b[5;4H\u001b[1K\u001b[36m\u001b[1m\u001b[Cbatch_tag\u001b(B\u001b[m=ubuntu-\u001b[35m$(( num * batch_size + batch_size ))\u001b[39m-\u001b[35m$(uname -m)\u001b[39m\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim scripts/03c.get_binary_names.py \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim scripts/03d.build-docker.sh \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ cd scripts\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data/scripts\u001b(B\u001b[m$ ls -la 03*\u001b[K\r\n-rwxrwxr-x 1 gaz gaz 2901 Dec 27 13:47 \u001b[32m\u001b[1m03a.package_priority.py\u001b(B\u001b[m\u001b[K\r\n-rwxrwxr-x 1 gaz gaz 1403 Dec 27 10:04 \u001b[32m\u001b[1m03c.get_binary_names.py\u001b(B\u001b[m\u001b[K\r\n-rwxrwxr-x 1 gaz gaz 1889 Dec 30 02:59 \u001b[32m\u001b[1m03d.build-docker.sh\u001b(B\u001b[m\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  376 Dec 31 17:31 03d.Dockerfile\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  631 Dec 30 01:49 03d.Dockerfile-base\u001b[K\r\n-rwxrwxr-x 1 gaz gaz 1053 Dec 31 17:31 \u001b[32m\u001b[1m03d.install-packages.sh\u001b(B\u001b[m\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data/scripts\u001b(B\u001b[m$ \u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*Z                                                                 \"gaz@orin: ~/src/uh-ha\" 19:21 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[21;46H"]
[179.282827, "o", "\r(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data/scripts\u001b(B\u001b[m$ \u001b[K"]
[179.283247, "o", "\u001b[?25l\u001b[?12l\u001b[?25h"]
[183.061966, "o", "v"]
[183.16149, "o", "i"]
[183.239651, "o", "m"]
[183.36338, "o", " "]
[183.77653, "o", "0"]
[183.878587, "o", "3"]
[184.59826, "o", "d"]
[185.409716, "o", "."]
[185.66221, "o", "D"]
[185.858311, "o", "o"]
[186.027679, "o", "ckerfile\u0007"]
[186.904346, "o", "-"]
[187.092133, "o", "base "]
[187.560325, "o", "\r\n"]
[187.560598, "o", "\u001b[?2004l"]
[187.590676, "o", "\u001b[?25l\u001b[H\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[?12l\u001b[?25h\u001b[H\u001b[?2004h"]
[187.591009, "o", "\u001b[1;29r\u001b[29S\u001b[29;1H\"03d.Dockerfile-base\"\u001b[1;30r\u001b[29;22H\u001b[?25l"]
[187.591294, "o", " 22L, 631B"]
[187.595183, "o", "\u001b[2;1Hâ–½\r  \r\n           \u001b[H"]
[187.596014, "o", "\u001b[36m# Dockerfile for Step 03d Base: Prepare Ubuntu with Scripts\r\n\u001b[39mFROM ubuntu:latest\u001b[K\r\n\u001b[K\r\n\u001b[36m# Set up environment variables\r\n\u001b[39mENV DEBIAN_FRONTEND=noninteractive\u001b[7;1H\u001b[36m# Install base dependencies. Keep package cache\r\n\u001b[39mRUN apt update && \\\r\n    apt upgrade && \\\r\n    apt install -y apt-utils figlet manpages unminimize apt-file ubuntu-docs && \\\r\n    apt-file update\u001b[13;1HRUN yes | /usr/bin/unminimize\u001b[15;1H\u001b[36m# Copy scripts into the container\r\n\u001b[39mCOPY scripts/03d.install-packages.sh /scripts/03d.install-packages.sh\u001b[18;1H\u001b[36m# Ensure the script is executable\r\n\u001b[39mRUN chmod +x /scripts/03d.install-packages.sh\u001b[21;1H\u001b[36m# Default command (does nothing, expects to be extended)\r\n\u001b[39mCMD [\u001b[38;5;130m\"/bin/bash\"\u001b[39m]\r\n\u001b[34m\u001b[1m~                                                                                                                           \u001b[24;1H~                                                                                                                           \u001b[25;1H~                                                                                                                           \u001b[26;1H~                                                                                                                           \u001b[27;1H~                                                                                                                           \u001b[28;1H~                                                                                                                           \u001b[29;107H\u001b(B\u001b[m1,1\u001b[11CAll\u001b[H\u001b[?12l\u001b[?25h"]
[187.917932, "o", "\u001b[?25l\u001b[30m\u001b[44m\u001b[30d[0] 0:sudo- 1:vim*Z                                                                  \"gaz@orin: ~/src/uh-ha\" 19:21 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;1H"]
[188.802403, "o", "\u001b[29;107H2\u001b[2;1H"]
[189.30264, "o", "\u001b[29;107H3,0-1\u001b[3;1H"]
[189.326676, "o", "\u001b[29;107H4,1  \u001b[4;1H"]
[189.34706, "o", "\u001b[29;107H5\u001b[5;1H"]
[189.385249, "o", "\u001b[29;107H6,0-1\u001b[6;1H"]
[189.423665, "o", "\u001b[29;107H7,1  \u001b[7;1H"]
[189.441801, "o", "\u001b[29;107H8\u001b[8;1H"]
[189.48113, "o", "\u001b[29;107H9\u001b[9;1H"]
[189.59581, "o", "\u001b[29;107H10,1\u001b[10;1H"]
[189.843554, "o", "\u001b[29;108H1\u001b[11;1H"]
[190.020138, "o", "\u001b[29;108H2,0-1\u001b[12;1H"]
[190.175052, "o", "\u001b[29;108H3,1  \u001b[13;1H"]
[191.890902, "o", "\u001b[29d\u001b[38;5;130m-- INSERT --\u001b[39m\u001b[94X\u001b[94C13,1\u001b[10X\u001b[10CAll\u001b[K\u001b[13;1H"]
[192.544477, "o", "\u001b[29;110H30\u001b[13;30H"]
[193.026482, "o", "\u001b[29;111H1\u001b[13;31H"]
[193.404619, "o", "\u001b[36m#\u001b[29;111H\u001b[39m2\u001b[13;32H"]
[193.539214, "o", "\u001b[36m \u001b[29;111H\u001b[39m3\u001b[13;33H"]
[193.88419, "o", "\u001b[36mg\u001b[29;111H\u001b[39m4\u001b[13;34H"]
[194.157338, "o", "\u001b[36mr\u001b[29;111H\u001b[39m5\u001b[13;35H"]
[194.33208, "o", "\u001b[36mr\u001b[29;111H\u001b[39m6\u001b[13;36H"]
[194.585856, "o", "\u001b[36mr\u001b[29;111H\u001b[39m7\u001b[13;37H"]
[194.934241, "o", "\b\u001b[K\u001b[29;111H6\u001b[13;36H"]
[195.112594, "o", "\b\u001b[K\u001b[29;111H5\u001b[13;35H"]
[195.213745, "o", "\b\u001b[K\u001b[29;111H4\u001b[13;34H"]
[195.404404, "o", "\b\u001b[K\u001b[29;111H3\u001b[13;33H"]
[195.539864, "o", "\b\u001b[K\u001b[29;111H2\u001b[13;32H"]
[195.67142, "o", "\b\u001b[K\u001b[29;111H1\u001b[13;31H"]
[195.832796, "o", "\u001b[29;111H0\u001b[13;30H"]
[195.991562, "o", "\b\u001b[K\u001b[29;110H29\u001b[13;29H"]
[197.426691, "o", "\u001b[29;1H\u001b[K\u001b[?25l"]
[197.427422, "o", "1 change; before #1  5 seconds ago\u001b[72C\u001b[K"]
[197.428053, "o", "\u001b[13;29He\u001b[29;107H\u001b[K13,29\u001b[9CAll\u001b[13;29H\u001b[?12l\u001b[?25h"]
[198.24272, "o", "\u001b[29;108H4,0-1\u001b[14;1H"]
[198.468439, "o", "\u001b[29;108H5,29 \u001b[15;29H"]
[199.284736, "o", "\u001b[29;108H6\u001b[16;29H"]
[200.81188, "o", "\u001b[29;108H7,0-1\u001b[17;1H"]
[200.983318, "o", "\u001b[29;108H8,29 \u001b[18;29H"]
[201.839023, "o", "\u001b[29;108H9\u001b[19;29H"]
[202.008105, "o", "\u001b[29;107H20,0-1\u001b[20;1H"]
[202.182218, "o", "\u001b[29;108H1,29 \u001b[21;29H"]
[202.357297, "o", "\r\nCMD \u001b[46m[\u001b[11C]\u001b[29;108H\u001b[49m2,17\u001b[22;17H"]
[203.022588, "o", "\u001b[29;1H:\u001b[K\u0007"]
[204.804465, "o", "q"]
[204.874728, "o", "\r"]
[204.877966, "o", "\u001b[?25l\u001b[?12l\u001b[?25h\u001b[?25l\u001b[?2004l"]
[204.878055, "o", "\u001b[K\u001b[7A\u001b[?12l\u001b[?25h"]
[204.878673, "o", "\u001b[?25l\u001b[H\u001b[K\u001b[36m\r\n# Process each batch\u001b[39m\u001b[K\u001b[33m\r\nfor\u001b[39m batch_file \u001b[33min\u001b[39m data/03d.packages/*; \u001b[33mdo\u001b[39m\u001b[K\u001b[4;4H\u001b[1K\u001b[36m\u001b[1m\u001b[Cnum\u001b(B\u001b[m=\u001b[35m$(\u001b[33mecho\u001b[38;5;130m \u001b[35m$(basename \u001b[33m\"\u001b[35m$batch_file\u001b[33m\"\u001b[35m)\u001b[38;5;130m \u001b[33m|\u001b[35m bc)\u001b[39m\u001b[K\u001b[5;4H\u001b[1K\u001b[36m\u001b[1m\u001b[Cbatch_tag\u001b(B\u001b[m=ubuntu-\u001b[35m$(( num * batch_size + batch_size ))\u001b[39m-\u001b[35m$(uname -m)\u001b[39m\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim scripts/03c.get_binary_names.py \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim scripts/03d.build-docker.sh \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ cd scripts\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data/scripts\u001b(B\u001b[m$ ls -la 03*\u001b[K\r\n-rwxrwxr-x 1 gaz gaz 2901 Dec 27 13:47 \u001b[32m\u001b[1m03a.package_priority.py\u001b(B\u001b[m\u001b[K\r\n-rwxrwxr-x 1 gaz gaz 1403 Dec 27 10:04 \u001b[32m\u001b[1m03c.get_binary_names.py\u001b(B\u001b[m\u001b[K\r\n-rwxrwxr-x 1 gaz gaz 1889 Dec 30 02:59 \u001b[32m\u001b[1m03d.build-docker.sh\u001b(B\u001b[m\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  376 Dec 31 17:31 03d.Dockerfile\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  631 Dec 30 01:49 03d.Dockerfile-base\u001b[K\r\n-rwxrwxr-x 1 gaz gaz 1053 Dec 31 17:31 \u001b[32m\u001b[1m03d.install-packages.sh\u001b(B\u001b[m\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data/scripts\u001b(B\u001b[m$ vim 03d.Dockerfile-base \u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[?12l\u001b[?25h\u001b[7A"]
[204.879908, "o", "\u001b[?2004h(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data/scripts\u001b(B\u001b[m$ "]
[204.880318, "o", "\u001b[?25l\u001b[?12l\u001b[?25h"]
[205.227805, "o", "\u001b[?25l\u001b[30m\u001b[44m\u001b[30;1H[0] 0:sudo- 1:vim*Z                                                                  \"gaz@orin: ~/src/uh-ha\" 19:22 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[22;46H"]
[205.332354, "o", "\u001b[?25l\u001b[30m\u001b[44m\u001b[30;1H[0] 0:sudo- 1:bash*Z                                                                 \"gaz@orin: ~/src/uh-ha\" 19:22 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[22;46H"]
[206.864681, "o", "v"]
[207.031354, "o", "i"]
[207.083199, "o", "m"]
[207.162889, "o", " "]
[207.485843, "o", "0"]
[207.60986, "o", "3"]
[208.09807, "o", "d"]
[208.367176, "o", "."]
[208.610426, "o", "\u0007"]
[209.144942, "o", "D"]
[209.326033, "o", "ockerfile\u0007"]
[210.686267, "o", "\r\n\u001b[?2004l"]
[210.726461, "o", "\u001b[?25l\u001b[H\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[?12l\u001b[?25h\u001b[H\u001b[?2004h"]
[210.726964, "o", "\u001b[1;29r\u001b[29S\u001b[29;1H\"03d.Dockerfile\"\u001b[1;30r\u001b[29;17H\u001b[?25l"]
[210.728243, "o", " 16L, 376B"]
[210.735245, "o", "\u001b[2;1Hâ–½\r  \r\n           \u001b[H"]
[210.736718, "o", "\u001b[36m# Dockerfile for Step 03d: Install Packages in Docker\r\n\u001b[33mARG\u001b[39m BASE_IMAGE\u001b[K\r\n\u001b[33mFROM\u001b[39m $BASE_IMAGE\u001b[K\u001b[5;1H\u001b[36m# Set up environment variables\r\n\u001b[33mENV\u001b[39m DEBIAN_FRONTEND=noninteractive\u001b[8;1H\u001b[36m# Package file goes in\r\n\u001b[33mARG\u001b[39m BATCH_FILE\r\n\u001b[33mCOPY\u001b[39m $BATCH_FILE /$BATCH_FILE\u001b[12;1H\u001b[36m# Run the install script for this batch\r\n\u001b[33mRUN\u001b[39m /scripts/03d.install-packages.sh /\u001b[35m$BATCH_FILE\u001b[39m /data/failed-packages.log\u001b[15;1H\u001b[36m# Default command\r\n\u001b[33mCMD\u001b[39m \u001b[35m[\u001b[39m\"\u001b[38;5;130m/bin/bash\u001b[39m\"\u001b[35m]\r\n\u001b[34m\u001b[1m~                                                                                                                           \u001b[18;1H~                                                                                                                           \u001b[19;1H~                                                                                                                           \u001b[20;1H~                                                                                                                           \u001b[21;1H~                                                                                                                           \u001b[22;1H~                                                                                                                           \u001b[23;1H~                                                                                                                           \u001b[24;1H~                                                                                                                           \u001b[25;1H~                                                                                                                           \u001b[26;1H~                                                                                                                           \u001b[27;1H~                                                                                                                           \u001b[27;124H\u001b(B\u001b[m\r\n\u001b[34m\u001b[1m~                                                                                                                           \u001b[29;107H\u001b(B\u001b[m1,1\u001b[11CAll\u001b[H\u001b[?12l\u001b[?25h"]
[211.21192, "o", "\u001b[?25l\u001b[30m\u001b[44m\u001b[30d[0] 0:sudo- 1:vim*Z                                                                  \"gaz@orin: ~/src/uh-ha\" 19:22 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;1H"]
[211.813977, "o", "\u001b[29;107H2\u001b[2;1H"]
[212.311588, "o", "\u001b[29;107H3\u001b[3;1H"]
[212.336507, "o", "\u001b[29;107H4,0-1\u001b[4;1H"]
[212.35826, "o", "\u001b[29;107H5,1  \u001b[5;1H"]
[212.399407, "o", "\u001b[29;107H6\u001b[6;1H"]
[212.420959, "o", "\u001b[29;107H7,0-1\u001b[7;1H"]
[212.461999, "o", "\u001b[29;107H8,1  \u001b[8;1H"]
[212.482863, "o", "\u001b[29;107H9\u001b[9;1H"]
[212.524622, "o", "\u001b[29;107H10,1\u001b[10;1H"]
[212.648076, "o", "\u001b[29;108H1,0-1\u001b[11;1H"]
[212.854879, "o", "\u001b[29;108H2,1  \u001b[12;1H"]
[212.964432, "o", "\u001b[29;108H3\u001b[13;1H"]
[213.257011, "o", "\u001b[29;110H2\u001b[13;2H"]
[213.775663, "o", "\u001b[29;110H3\u001b[13;3H"]
[213.779789, "o", "\u001b[29;110H4\u001b[13;4H"]
[213.820867, "o", "\u001b[29;110H5\u001b[13;5H"]
[213.842643, "o", "\u001b[29;110H6\u001b[13;6H"]
[213.882962, "o", "\u001b[29;110H7\u001b[13;7H"]
[213.903599, "o", "\u001b[29;110H8\u001b[13;8H"]
[213.944538, "o", "\u001b[29;110H9\u001b[13;9H"]
[213.965899, "o", "\u001b[29;110H10\u001b[13;10H"]
[214.007017, "o", "\u001b[29;111H1\u001b[13;11H"]
[214.028301, "o", "\u001b[29;111H2\u001b[13;12H"]
[214.048417, "o", "\u001b[29;111H3\u001b[13;13H"]
[214.09038, "o", "\u001b[29;111H4\u001b[13;14H"]
[214.110301, "o", "\u001b[29;111H5\u001b[13;15H"]
[214.154033, "o", "\u001b[29;111H6\u001b[13;16H"]
[214.175525, "o", "\u001b[29;111H7\u001b[13;17H"]
[214.218122, "o", "\u001b[29;111H8\u001b[13;18H"]
[214.237374, "o", "\u001b[29;111H9\u001b[13;19H"]
[214.280227, "o", "\u001b[29;110H20\u001b[13;20H"]
[214.300738, "o", "\u001b[29;111H1\u001b[13;21H"]
[214.32135, "o", "\u001b[29;111H2\u001b[13;22H"]
[214.361712, "o", "\u001b[29;111H3\u001b[13;23H"]
[214.383175, "o", "\u001b[29;111H4\u001b[13;24H"]
[214.425002, "o", "\u001b[29;111H5\u001b[13;25H"]
[214.445095, "o", "\u001b[29;111H6\u001b[13;26H"]
[214.485498, "o", "\u001b[29;111H7\u001b[13;27H"]
[214.50595, "o", "\u001b[29;111H8\u001b[13;28H"]
[214.546564, "o", "\u001b[29;111H9\u001b[13;29H"]
[214.567415, "o", "\u001b[29;110H30\u001b[13;30H"]
[214.608359, "o", "\u001b[29;111H1\u001b[13;31H"]
[214.629969, "o", "\u001b[29;111H2\u001b[13;32H"]
[214.672287, "o", "\u001b[29;111H3\u001b[13;33H"]
[214.692421, "o", "\u001b[29;111H4\u001b[13;34H"]
[214.735877, "o", "\u001b[29;111H5\u001b[13;35H"]
[214.756818, "o", "\u001b[29;111H6\u001b[13;36H"]
[214.777333, "o", "\u001b[29;111H7\u001b[13;37H"]
[214.842521, "o", "\u001b[29;111H6\u001b[13;36H"]
[215.361715, "o", "\u001b[29;111H5\u001b[13;35H"]
[215.367053, "o", "\u001b[29;111H4\u001b[13;34H"]
[215.387902, "o", "\u001b[29;111H3\u001b[13;33H"]
[215.432178, "o", "\u001b[29;111H2\u001b[13;32H"]
[215.451767, "o", "\u001b[29;111H1\u001b[13;31H"]
[215.492976, "o", "\u001b[29;111H0\u001b[13;30H"]
[215.512309, "o", "\u001b[29;110H29\u001b[13;29H"]
[215.554653, "o", "\u001b[29;111H8\u001b[13;28H"]
[215.576006, "o", "\u001b[29;111H7\u001b[13;27H"]
[215.616924, "o", "\u001b[29;111H6\u001b[13;26H"]
[215.638321, "o", "\u001b[29;111H5\u001b[13;25H"]
[215.67955, "o", "\u001b[29;111H4\u001b[13;24H"]
[215.699814, "o", "\u001b[29;111H3\u001b[13;23H"]
[215.721257, "o", "\u001b[29;111H2\u001b[13;22H"]
[215.763073, "o", "\u001b[29;111H1\u001b[13;21H"]
[215.783031, "o", "\u001b[29;111H0\u001b[13;20H"]
[215.826841, "o", "\u001b[29;110H19\u001b[13;19H"]
[215.848486, "o", "\u001b[29;111H8\u001b[13;18H"]
[215.890103, "o", "\u001b[29;111H7\u001b[13;17H"]
[215.910717, "o", "\u001b[29;111H6\u001b[13;16H"]
[215.955298, "o", "\u001b[29;111H5\u001b[13;15H"]
[215.974468, "o", "\u001b[29;111H4\u001b[13;14H"]
[216.055628, "o", "\u001b[29;111H5\u001b[13;15H"]
[216.578296, "o", "\u001b[29;111H6\u001b[13;16H"]
[216.583756, "o", "\u001b[29;111H7\u001b[13;17H"]
[216.626775, "o", "\u001b[29;111H8\u001b[13;18H"]
[216.647061, "o", "\u001b[29;111H9\u001b[13;19H"]
[216.687773, "o", "\u001b[29;110H20\u001b[13;20H"]
[216.709154, "o", "\u001b[29;111H1\u001b[13;21H"]
[216.751381, "o", "\u001b[29;111H2\u001b[13;22H"]
[216.770879, "o", "\u001b[29;111H3\u001b[13;23H"]
[216.792189, "o", "\u001b[29;111H4\u001b[13;24H"]
[216.834971, "o", "\u001b[29;111H5\u001b[13;25H"]
[216.856644, "o", "\u001b[29;111H6\u001b[13;26H"]
[216.898961, "o", "\u001b[29;111H7\u001b[13;27H"]
[216.918942, "o", "\u001b[29;111H8\u001b[13;28H"]
[216.960837, "o", "\u001b[29;111H9\u001b[13;29H"]
[216.981468, "o", "\u001b[29;110H30\u001b[13;30H"]
[217.024265, "o", "\u001b[29;111H1\u001b[13;31H"]
[217.043644, "o", "\u001b[29;111H2\u001b[13;32H"]
[217.085249, "o", "\u001b[29;111H3\u001b[13;33H"]
[217.393109, "o", "\u001b[29;110H75\u001b[13;75H"]
[217.680407, "o", "\u001b[29;111H4\u001b[13;74H"]
[218.182918, "o", "\u001b[29;111H3\u001b[13;73H"]
[218.2116, "o", "\u001b[29;111H2\u001b[13;72H"]
[218.232764, "o", "\u001b[29;111H1\u001b[13;71H"]
[218.276037, "o", "\u001b[29;111H0\u001b[13;70H"]
[218.295505, "o", "\u001b[29;110H69\u001b[13;69H"]
[218.317063, "o", "\u001b[29;111H8\u001b[13;68H"]
[218.360258, "o", "\u001b[29;111H7\u001b[13;67H"]
[218.378914, "o", "\u001b[29;111H6\u001b[13;66H"]
[218.419711, "o", "\u001b[29;111H5\u001b[13;65H"]
[218.439533, "o", "\u001b[29;111H4\u001b[13;64H"]
[218.480915, "o", "\u001b[29;111H3\u001b[13;63H"]
[218.502207, "o", "\u001b[29;111H2\u001b[13;62H"]
[218.545993, "o", "\u001b[29;111H1\u001b[13;61H"]
[218.565372, "o", "\u001b[29;111H0\u001b[13;60H"]
[218.607012, "o", "\u001b[29;110H59\u001b[13;59H"]
[218.627823, "o", "\u001b[29;111H8\u001b[13;58H"]
[218.648056, "o", "\u001b[29;111H7\u001b[13;57H"]
[218.69179, "o", "\u001b[29;111H6\u001b[13;56H"]
[218.712369, "o", "\u001b[29;111H5\u001b[13;55H"]
[218.753947, "o", "\u001b[29;111H4\u001b[13;54H"]
[218.774147, "o", "\u001b[29;111H3\u001b[13;53H"]
[218.816468, "o", "\u001b[29;111H2\u001b[13;52H"]
[220.127203, "o", "\u001b[29;1H:\u001b[K"]
[220.312944, "o", "q"]
[220.502174, "o", "!"]
[221.087619, "o", "\r"]
[221.090738, "o", "\u001b[?25l\u001b[?12l\u001b[?25h\u001b[?25l\u001b[?2004l\u001b[K"]
[221.091409, "o", "\u001b[H\u001b[K\u001b[36m\r\n# Process each batch\u001b[39m\u001b[K\u001b[33m\r\nfor\u001b[39m batch_file \u001b[33min\u001b[39m data/03d.packages/*; \u001b[33mdo\u001b[39m\u001b[K\u001b[4;4H\u001b[1K\u001b[36m\u001b[1m\u001b[Cnum\u001b(B\u001b[m=\u001b[35m$(\u001b[33mecho\u001b[38;5;130m \u001b[35m$(basename \u001b[33m\"\u001b[35m$batch_file\u001b[33m\"\u001b[35m)\u001b[38;5;130m \u001b[33m|\u001b[35m bc)\u001b[39m\u001b[K\u001b[5;4H\u001b[1K\u001b[36m\u001b[1m\u001b[Cbatch_tag\u001b(B\u001b[m=ubuntu-\u001b[35m$(( num * batch_size + batch_size ))\u001b[39m-\u001b[35m$(uname -m)\u001b[39m\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim scripts/03c.get_binary_names.py \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim scripts/03d.build-docker.sh \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ cd scripts\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data/scripts\u001b(B\u001b[m$ ls -la 03*\u001b[K\r\n-rwxrwxr-x 1 gaz gaz 2901 Dec 27 13:47 \u001b[32m\u001b[1m03a.package_priority.py\u001b(B\u001b[m\u001b[K\r\n-rwxrwxr-x 1 gaz gaz 1403 Dec 27 10:04 \u001b[32m\u001b[1m03c.get_binary_names.py\u001b(B\u001b[m\u001b[K\r\n-rwxrwxr-x 1 gaz gaz 1889 Dec 30 02:59 \u001b[32m\u001b[1m03d.build-docker.sh\u001b(B\u001b[m\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  376 Dec 31 17:31 03d.Dockerfile\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  631 Dec 30 01:49 03d.Dockerfile-base\u001b[K\r\n-rwxrwxr-x 1 gaz gaz 1053 Dec 31 17:31 \u001b[32m\u001b[1m03d.install-packages.sh\u001b(B\u001b[m\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data/scripts\u001b(B\u001b[m$ vim 03d.Dockerfile-base \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data/scripts\u001b(B\u001b[m$ vim 03d.Dockerfile\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[6A\u001b[?12l\u001b[?25h"]
[221.092677, "o", "\u001b[?2004h"]
[221.092903, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data/scripts\u001b(B\u001b[m$ "]
[221.093268, "o", "\u001b[?25l\u001b[?12l\u001b[?25h"]
[221.136365, "o", "\u001b[?25l\u001b[30m\u001b[44m\u001b[30;1H[0] 0:sudo- 1:bash*Z                                                                 \"gaz@orin: ~/src/uh-ha\" 19:22 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[23;46H"]
[223.430871, "o", "v"]
[223.607147, "o", "i"]
[223.649001, "o", "m"]
[223.742336, "o", " "]
[223.933699, "o", "0"]
[224.03627, "o", "3"]
[224.266051, "o", "d"]
[224.533982, "o", ".\u0007"]
[225.368812, "o", "i"]
[225.617849, "o", "nstall-packages.sh "]
[226.191435, "o", "\r\n"]
[226.191725, "o", "\u001b[?2004l"]
[226.326581, "o", "\u001b[?25l\u001b[H\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[?12l\u001b[?25h\u001b[H\u001b[?2004h"]
[226.327084, "o", "\u001b[1;29r\u001b[29S\u001b[29;1H\"03d.install-packages.sh\"\u001b[1;30r\u001b[29;26H\u001b[?25l"]
[226.341042, "o", " 39L, 1053B"]
[226.348563, "o", "\u001b[2;1Hâ–½\r  \r\n           \u001b[H"]
[226.353843, "o", "\u001b[36m#!/bin/bash\u001b[39m\r\n\u001b[K\r\n\u001b[36m# Script to install a batch of packages and log failures\u001b[39m\u001b[K\u001b[5;1H\u001b[33mif [\u001b[39m \u001b[33m\"\u001b[35m$#\u001b[33m\"\u001b[39m \u001b[33m-ne\u001b[39m \u001b[38;5;130m2\u001b[39m \u001b[33m];\u001b[39m \u001b[33mthen\r\n\u001b[39m    \u001b[33mecho\u001b[38;5;130m \u001b[33m\"\u001b[38;5;130mUsage: \u001b[35m$0\u001b[38;5;130m <batch_file> <failed_log>\u001b[33m\"\r\n\u001b[39m    \u001b[33mexit\u001b[39m \u001b[38;5;130m1\r\n\u001b[33mfi\u001b[10;1H\u001b[36m\u001b[1mbatch_file\u001b(B\u001b[m=\u001b[33m\"\u001b[35m$1\u001b[33m\"\r\n\u001b[36m\u001b[1mfailed_log\u001b(B\u001b[m=\u001b[33m\"\u001b[35m$2\u001b[33m\"\u001b[13;1H\u001b[36m# Ensure the failed log file exists and append failures\r\n\u001b[33mtouch\u001b[39m \u001b[33m\"\u001b[35m$failed_log\u001b[33m\"\u001b[16;1H\u001b[36m\u001b[1minstall_and_cleanup() {\r\n\u001b(B\u001b[m    \u001b[36m\u001b[1mpackages\u001b(B\u001b[m=\u001b[33m\"\u001b[35m$@\u001b[33m\"\r\n\u001b[39m    \u001b[33mecho\u001b[38;5;130m \u001b[33m\"\u001b[38;5;130mInstalling packages: \u001b[35m$packages\u001b[33m\"\r\n\u001b[39m    apt-get install \u001b[35m-y\u001b[39m \u001b[35m--no-install-recommends\u001b[39m \u001b[35m$packages\u001b[39m \u001b[33m|\u001b[39m \u001b[33mgrep\u001b[39m \u001b[35m-Ev\u001b[39m \u001b[33m'\u001b[38;5;130m^Get:\u001b[33m'\r\n\u001b[39m    \u001b[33mecho\u001b[38;5;130m \u001b[33m\"\u001b[38;5;130mRunning autoremove to clean up unnecessary packages.\u001b[33m\"\r\n\u001b[39m    apt-get autoremove \u001b[35m-y\u001b[39m \u001b[33m||\u001b[39m \u001b[33mecho\u001b[38;5;130m \u001b[33m\"\u001b[38;5;130mAutoremove failed, continuing...\u001b[33m\"\u001b[23;5Hecho\u001b[38;5;130m TOTAL: \u001b[35m$(dpkg -l \u001b[33m|\u001b[35m \u001b[33mgrep\u001b[35m \u001b[33m'\u001b[38;5;130m^ii\u001b[33m'\u001b[35m \u001b[33m|\u001b[35m wc -l)\u001b[38;5;130m \u001b[33m|\u001b[39m figlet\r\n\u001b[36m\u001b[1m}\u001b[26;1H\u001b(B\u001b[m\u001b[33mexport\u001b[39m \u001b[35m-f\u001b[39m install_and_cleanup\u001b[28;1H\u001b[33mecho\u001b[38;5;130m \u001b[33m\"\u001b[38;5;130mProcessing batch: \u001b[35m$batch_file\u001b[33m\"\u001b[29;107H\u001b[39m1,1\u001b[11CTop\u001b[H\u001b[?12l\u001b[?25h"]
[226.493831, "o", "\u001b[?25l\u001b[30m\u001b[44m\u001b[30d[0] 0:sudo- 1:vim*Z                                                                  \"gaz@orin: ~/src/uh-ha\" 19:22 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;1H"]
[227.385594, "o", "\u001b[29;107H2,0-1\u001b[2;1H"]
[228.020229, "o", "\u001b[29;107H3,1  \u001b[3;1H"]
[229.095938, "o", "\u001b[29;107H4,0-1\u001b[4;1H"]
[229.586039, "o", "\u001b[29;107H5,1  \u001b[5;1H"]
[229.612452, "o", "\u001b[29;107H6\u001b[6;1H"]
[229.631242, "o", "\u001b[29;107H7\u001b[7;1H"]
[229.670103, "o", "\u001b[29;107H8\u001b[8;1H"]
[229.690521, "o", "\u001b[29;107H9,0-1\u001b[9;1H"]
[229.729683, "o", "\u001b[29;107H10,1 \u001b[10;1H"]
[229.748712, "o", "\u001b[29;108H1\u001b[11;1H"]
[229.78768, "o", "\u001b[29;108H2,0-1\u001b[12;1H"]
[229.805669, "o", "\u001b[29;108H3,1  \u001b[13;1H"]
[229.845045, "o", "\u001b[29;108H4\u001b[14;1H"]
[229.884241, "o", "\u001b[29;108H5,0-1\u001b[15;1H"]
[230.210428, "o", "\u001b[29;108H4,1  \u001b[14;1H"]
[230.403436, "o", "\u001b[29;108H3\u001b[13;1H"]
[233.985307, "o", "\u001b[29;108H4\u001b[14;1H"]
[234.492185, "o", "\u001b[29;108H5,0-1\u001b[15;1H"]
[234.520551, "o", "\u001b[29;108H6,1  \u001b[16;1H"]
[234.538775, "o", "\u001b[29;108H7\u001b[17;1H"]
[234.578676, "o", "\u001b[29;108H8\u001b[18;1H"]
[234.598619, "o", "\u001b[29;108H9\u001b[19;1H"]
[234.639611, "o", "\u001b[29;107H20\u001b[20;1H"]
[234.659886, "o", "\u001b[29;108H1\u001b[21;1H"]
[234.700311, "o", "\u001b[29;108H2\u001b[22;1H"]
[234.719549, "o", "\u001b[29;108H3\u001b[23;1H"]
[234.766179, "o", "\u001b[16;23H\u001b[36m\u001b[46m\u001b[1m{\u001b[24;1H}\u001b[29;108H\u001b(B\u001b[m4\u001b[24;1H"]
[234.782123, "o", "\u001b[16;23H\u001b[36m\u001b[1m{\u001b[24;1H}\u001b[29;108H\u001b(B\u001b[m5,0-1\u001b[25;1H"]
[234.819409, "o", "\u001b[29;108H6,1  \u001b[26;1H"]
[234.83875, "o", "\u001b[29;108H7,0-1\u001b[27;1H"]
[234.877352, "o", "\u001b[29;108H8,1  \u001b[28;1H"]
[234.898371, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[33mcat\u001b[39m \u001b[35m$batch_file\u001b[39m | xargs \u001b[35m-n\u001b[39m20 bash \u001b[35m-c\u001b[39m \u001b[33m'\u001b[38;5;130minstall_and_cleanup \"$@\"\u001b[33m'\u001b[39m _ || \u001b[33mtrue\u001b[39m\u001b[29;106H\u001b[1K\u001b[C29,1\u001b[11X\u001b[11C9%\u001b[K\u001b[1;30r\u001b[28;1H"]
[234.937731, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[36m\u001b[1mbatch_packages\u001b(B\u001b[m=\u001b[35m$(\u001b[33mcat\u001b[35m \u001b[33m\"\u001b[35m$batch_file\u001b[33m\"\u001b[35m)\u001b[29;107H\u001b[39m30,1\u001b[10X\u001b[10C18%\u001b[K\u001b[1;30r\u001b[28;1H"]
[234.957889, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[29;107H31,0-1\u001b[8X\u001b[8C27%\u001b[K\u001b[1;30r\u001b[28;1H"]
[234.997599, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[33mfor\u001b[39m package \u001b[33min\u001b[39m \u001b[35m$batch_packages\u001b[39m; \u001b[33mdo\u001b[29;107H\u001b[39m32,1\u001b[10X\u001b[10C36%\u001b[K\u001b[1;30r\u001b[28;1H"]
[235.017205, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4C\u001b[33mecho\u001b[38;5;130m \u001b[33m\"\u001b[35m$package\u001b[33m\"\u001b[38;5;130m \u001b[33m|\u001b[39m figlet\u001b[29;107H33,1\u001b[10X\u001b[10C45%\u001b[K\u001b[1;30r\u001b[28;1H"]
[235.058994, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4C\u001b[33mif !\u001b[39m dpkg \u001b[33m-s\u001b[39m \u001b[33m\"\u001b[35m$package\u001b[33m\"\u001b[39m \u001b[33m>\u001b[39m/dev/null \u001b[38;5;130m2\u001b[33m>&\u001b[38;5;130m1\u001b[33m;\u001b[39m \u001b[33mthen\u001b[29;107H\u001b[39m34,1\u001b[10X\u001b[10C54%\u001b[K\u001b[1;30r\u001b[28;1H"]
[235.078444, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[8C\u001b[33mecho\u001b[38;5;130m \u001b[33m\"\u001b[35m$package\u001b[38;5;130m failed\u001b[33m\"\u001b[38;5;130m \u001b[33m>>\u001b[39m \u001b[33m\"\u001b[35m$failed_log\u001b[33m\"\u001b[29;107H\u001b[39m35,1\u001b[10X\u001b[10C63%\u001b[K\u001b[1;30r\u001b[28;1H"]
[235.116562, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[8C\u001b[33mecho\u001b[38;5;130m \u001b[33m\"\u001b[35m$package\u001b[38;5;130m failed\u001b[33m\"\u001b[29;107H\u001b[39m36,1\u001b[10X\u001b[10C72%\u001b[K\u001b[1;30r\u001b[28;1H"]
[235.135752, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4C\u001b[33mfi\u001b[29;107H\u001b[39m37,1\u001b[10X\u001b[10C81%\u001b[K\u001b[1;30r\u001b[28;1H"]
[235.175641, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[33mdone\u001b[29;107H\u001b[39m38,1\u001b[10X\u001b[10C90%\u001b[K\u001b[1;30r\u001b[28;1H"]
[235.216087, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[33mecho\u001b[38;5;130m TOTAL: \u001b[35m$(dpkg -l \u001b[33m|\u001b[35m \u001b[33mgrep\u001b[35m \u001b[33m'\u001b[38;5;130m^ii\u001b[33m'\u001b[35m \u001b[33m|\u001b[35m wc -l)\u001b[29;107H\u001b[39m39,1\u001b[10X\u001b[10CBot\u001b[K\u001b[1;30r\u001b[28;1H"]
[235.236565, "o", "\u0007"]
[235.761145, "o", "\u0007"]
[236.378903, "o", "\u0007"]
[236.72958, "o", "\u001b[29;108H8\u001b[27;1H"]
[237.212904, "o", "\u001b[29;108H7\u001b[26;1H"]
[237.238348, "o", "\u001b[29;108H6\u001b[25;1H"]
[237.258558, "o", "\u001b[29;108H5\u001b[24;1H"]
[237.297545, "o", "\u001b[29;108H4\u001b[23;1H"]
[237.317387, "o", "\u001b[29;108H3\u001b[22;1H"]
[237.359168, "o", "\u001b[29;108H2\u001b[21;1H"]
[237.379451, "o", "\u001b[29;108H1,0-1\u001b[20;1H"]
[237.421902, "o", "\u001b[29;108H0,1  \u001b[19;1H"]
[237.442588, "o", "\u001b[29;107H29\u001b[18;1H"]
[237.481842, "o", "\u001b[29;108H8\u001b[17;1H"]
[237.857372, "o", "\u001b[29;108H9\u001b[18;1H"]
[238.184304, "o", "\u001b[29;110H2\u001b[18;2H"]
[238.684443, "o", "\u001b[29;110H3\u001b[18;3H"]
[238.71268, "o", "\u001b[29;110H4\u001b[18;4H"]
[238.732107, "o", "\u001b[29;110H5\u001b[18;5H"]
[238.774078, "o", "\u001b[29;110H6\u001b[18;6H"]
[238.794413, "o", "\u001b[29;110H7\u001b[18;7H"]
[238.834554, "o", "\u001b[29;110H8\u001b[18;8H"]
[238.855175, "o", "\u001b[29;110H9\u001b[18;9H"]
[238.956678, "o", "\u001b[29;107H30\u001b[19;9H"]
[239.19437, "o", "\u001b[29;108H1,0-1\u001b[20;1H"]
[239.339873, "o", "\u001b[29;108H2,9  \u001b[21;9H"]
[239.494971, "o", "\u001b[29;108H3\u001b[22;9H"]
[239.658217, "o", "\u001b[29;108H4\u001b[23;9H"]
[240.021612, "o", "\u001b[29;110H10\u001b[23;10H"]
[240.527632, "o", "\u001b[29;111H1\u001b[23;11H"]
[240.555215, "o", "\u001b[29;111H2\u001b[23;12H"]
[240.576265, "o", "\u001b[29;111H3\u001b[23;13H"]
[240.596068, "o", "\u001b[29;111H4\u001b[23;14H"]
[240.635216, "o", "\u001b[29;111H5\u001b[23;15H"]
[240.675503, "o", "\u001b[29;111H6\u001b[23;16H"]
[240.695011, "o", "\u001b[29;111H7\u001b[23;17H"]
[240.73486, "o", "\u001b[29;111H8\u001b[23;18H"]
[240.755013, "o", "\u001b[29;111H9\u001b[23;19H"]
[240.776182, "o", "\u001b[29;110H20\u001b[23;20H"]
[240.816047, "o", "\u001b[29;111H1\u001b[23;21H"]
[240.916529, "o", "\u001b[29;108H5\u001b[24;21H"]
[241.351808, "o", "\u001b[29;111H2\u001b[24;22H"]
[241.794688, "o", "\u001b[29;108H6\u001b[25;22H"]
[242.096713, "o", "\u001b[29;108H7,6 \u001b[26;6H"]
[242.495392, "o", "\u001b[29;108H8,4\u001b[27;4H"]
[242.718128, "o", "\u001b[29;108H9,22\u001b[28;22H"]
[242.94192, "o", "\u0007"]
[243.987621, "o", "\u001b[29;111H3\u001b[28;23H"]
[244.49044, "o", "\u001b[29;111H4\u001b[28;24H"]
[244.49438, "o", "\u001b[29;111H5\u001b[28;25H"]
[244.51539, "o", "\u001b[29;111H6\u001b[28;26H"]
[244.556502, "o", "\u001b[29;111H7\u001b[28;27H"]
[244.598203, "o", "\u001b[29;111H8\u001b[28;28H"]
[244.61858, "o", "\u001b[29;111H9\u001b[28;29H"]
[245.774821, "o", "\r\n:\u001b[105C\u001b[K\u0007\u001b[2G"]
[246.019377, "o", "q"]
[246.30631, "o", "!"]
[249.056189, "o", "\r"]
[249.0597, "o", "\u001b[?25l\u001b[?12l\u001b[?25h\u001b[?25l\u001b[?2004l\u001b[K"]
[249.060345, "o", "\u001b[H\u001b[K\u001b[36m\r\n# Process each batch\u001b[39m\u001b[K\u001b[33m\r\nfor\u001b[39m batch_file \u001b[33min\u001b[39m data/03d.packages/*; \u001b[33mdo\u001b[39m\u001b[K\u001b[4;4H\u001b[1K\u001b[36m\u001b[1m\u001b[Cnum\u001b(B\u001b[m=\u001b[35m$(\u001b[33mecho\u001b[38;5;130m \u001b[35m$(basename \u001b[33m\"\u001b[35m$batch_file\u001b[33m\"\u001b[35m)\u001b[38;5;130m \u001b[33m|\u001b[35m bc)\u001b[39m\u001b[K\u001b[5;4H\u001b[1K\u001b[36m\u001b[1m\u001b[Cbatch_tag\u001b(B\u001b[m=ubuntu-\u001b[35m$(( num * batch_size + batch_size ))\u001b[39m-\u001b[35m$(uname -m)\u001b[39m\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim scripts/03c.get_binary_names.py \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim scripts/03d.build-docker.sh \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ cd scripts\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data/scripts\u001b(B\u001b[m$ ls -la 03*\u001b[K\r\n-rwxrwxr-x 1 gaz gaz 2901 Dec 27 13:47 \u001b[32m\u001b[1m03a.package_priority.py\u001b(B\u001b[m\u001b[K\r\n-rwxrwxr-x 1 gaz gaz 1403 Dec 27 10:04 \u001b[32m\u001b[1m03c.get_binary_names.py\u001b(B\u001b[m\u001b[K\r\n-rwxrwxr-x 1 gaz gaz 1889 Dec 30 02:59 \u001b[32m\u001b[1m03d.build-docker.sh\u001b(B\u001b[m\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  376 Dec 31 17:31 03d.Dockerfile\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  631 Dec 30 01:49 03d.Dockerfile-base\u001b[K\r\n-rwxrwxr-x 1 gaz gaz 1053 Dec 31 17:31 \u001b[32m\u001b[1m03d.install-packages.sh\u001b(B\u001b[m\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data/scripts\u001b(B\u001b[m$ vim 03d.Dockerfile-base \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data/scripts\u001b(B\u001b[m$ vim 03d.Dockerfile\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data/scripts\u001b(B\u001b[m$ vim 03d.install-packages.sh \u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[5A\u001b[?12l\u001b[?25h"]
[249.062056, "o", "\u001b[?2004h(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data/scripts\u001b(B\u001b[m$ "]
[249.062642, "o", "\u001b[?25l\u001b[?12l\u001b[?25h"]
[249.599727, "o", "\u001b[?25l\u001b[30m\u001b[44m\u001b[30;1H[0] 0:sudo- 1:bash*Z                                                                 \"gaz@orin: ~/src/uh-ha\" 19:22 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[24;46H"]
[254.834833, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[1;62H\u001b[1K\u001b[35m\u001b[H    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[35m\r\n    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[5X\u001b[3;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[4;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[5;62H\u001b[1K\u001b[36m\r\n## Step 3c: Get binary names from the packages we installed, p\u001b[39m\u001b[7;62H\u001b[1K\u001b[36m\rlus the defaults.\u001b[1m\r\ndata/03c.binary-names:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages d\r\nata/03b.limited-packages scripts/03c.get_binary_names.py\u001b[6X\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Extracting binary names\"\u001b[39m\u001b[22X\u001b[35m\r\n    @\u001b[38;5;130mcat data/01a.ubuntu-bin > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[23X\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03c.get_binary_names.py data/01b.ubuntu-binarie\r\ns-and-packages data/03b.limited-packages >> \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[10X\u001b[14;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[15;62H\u001b[1K\u001b[36m\r\n## Step 3d: Install the packages into a Docker container, in b\u001b[39m\u001b[17;62H\u001b[1K\u001b[36m\ratches.\u001b[1m\r\ndata/03d.docker-build:\u001b(B\u001b[m scripts/03d.build-docker.sh scripts/03d\r\n.Dockerfile scripts/03d.Dockerfile-base data/03b.limited-packa\u001b[20;62H\u001b[1K\rges\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Building Docker images for binaries\"\u001b[39m\u001b[10X\u001b[35m\r\n    @\u001b[38;5;130mscripts/03d.build-docker.sh\u001b[39m\u001b[30X\u001b[23;62H\u001b[1K\u001b[35m\r    @\u001b[38;5;130mtouch \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[24;62H\u001b[1K\u001b[36m\r\n## Step 4: Extract --help texts for each binary\u001b[39m\u001b[15X\u001b[36m\u001b[1m\r\ndata/04.run-help-extractor:\u001b(B\u001b[m data/03d.docker-build data/03c.bin\r\nary-names scripts/04.run-help-extractor.sh\u001b[20X\u001b[35m\r\n    @\u001b[38;5;130mecho \"04 - Running --help extractor in Docker\"\u001b[39m\u001b[11X\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C63,17-20      96%\u001b[1X\u001b[1;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\u001b[2;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\u001b[3;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim scripts/03c.get_bina\u001b[4;64Hry_names.py \u001b[K\u001b[5;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim scripts/03d.build-do\u001b[6;64Hcker.sh \u001b[K\u001b[7;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ cd scripts\u001b[K\u001b[8;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data/scripts\u001b(B\u001b[m$ ls -la 03*\u001b[K\u001b[9;64H-rwxrwxr-x 1 gaz gaz 2901 Dec 27 13:47 \u001b[32m\u001b[1m03a.package_priority.p\u001b[10;64Hy\u001b(B\u001b[m\u001b[K\u001b[11;64H-rwxrwxr-x 1 gaz gaz 1403 Dec 27 10:04 \u001b[32m\u001b[1m03c.get_binary_names.p\u001b[12;64Hy\u001b(B\u001b[m\u001b[K\u001b[13;64H-rwxrwxr-x 1 gaz gaz 1889 Dec 30 02:59 \u001b[32m\u001b[1m03d.build-docker.sh\u001b(B\u001b[m\u001b[K\u001b[14;64H-rw-rw-r-- 1 gaz gaz  376 Dec 31 17:31 03d.Dockerfile\u001b[K\u001b[15;64H-rw-rw-r-- 1 gaz gaz  631 Dec 30 01:49 03d.Dockerfile-base\u001b[K\u001b[16;64H-rwxrwxr-x 1 gaz gaz 1053 Dec 31 17:31 \u001b[32m\u001b[1m03d.install-packages.s\u001b[17;64Hh\u001b(B\u001b[m\u001b[K\u001b[18;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data/scripts\u001b(B\u001b[m$ vim 03d.Dockerfi\u001b[19;64Hle-base \u001b[K\u001b[20;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data/scripts\u001b(B\u001b[m$ vim 03d.Dockerfi\u001b[21;64Hle\u001b[K\u001b[22;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data/scripts\u001b(B\u001b[m$ vim 03d.install-\u001b[23;64Hpackages.sh \u001b[K\u001b[24;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data/scripts\u001b(B\u001b[m$ \u001b[K\u001b[25;64H\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:22 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[24;109H"]
[254.8352, "o", "\u001b[45D(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data/scripts\u001b(B\u001b[m$ \u001b[K"]
[254.835575, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[24;109H"]
[255.457304, "o", "e"]
[255.67236, "o", "x"]
[255.916347, "o", "i"]
[256.072393, "o", "t"]
[256.624871, "o", "\u001b[25;64H\u001b[?2004l"]
[256.625621, "o", "logout\u001b[26;64H"]
[256.632716, "o", "\u001b[?25l\u001b[35m\u001b[H    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[K\u001b[35m\r\n    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[39m\u001b[K\u001b[35m\r\n    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[K\u001b[35m\r\n    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[K\r\n\u001b[K\u001b[36m\r\n## Step 3c: Get binary names from the packages we installed, p\u001b[39m\u001b[K\u001b[36m\r\nlus the defaults.\u001b[39m\u001b[K\u001b[36m\u001b[1m\r\ndata/03c.binary-names:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages d\u001b[K\r\nata/03b.limited-packages scripts/03c.get_binary_names.py\u001b[K\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Extracting binary names\"\u001b[39m\u001b[K\u001b[35m\r\n    @\u001b[38;5;130mcat data/01a.ubuntu-bin > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[K\u001b[35m\r\n    @\u001b[38;5;130m./scripts/03c.get_binary_names.py data/01b.ubuntu-binarie\u001b[39m\u001b[K\u001b[38;5;130m\r\ns-and-packages data/03b.limited-packages >> \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[39m\u001b[K\u001b[35m\r\n    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[K\r\n\u001b[K\u001b[36m\r\n## Step 3d: Install the packages into a Docker container, in b\u001b[39m\u001b[K\u001b[36m\r\natches.\u001b[39m\u001b[K\u001b[36m\u001b[1m\r\ndata/03d.docker-build:\u001b(B\u001b[m scripts/03d.build-docker.sh scripts/03d\u001b[K\r\n.Dockerfile scripts/03d.Dockerfile-base data/03b.limited-packa\u001b[K\r\nges\u001b[K\u001b[35m\r\n    @\u001b[38;5;130mecho \"03 - Building Docker images for binaries\"\u001b[39m\u001b[K\u001b[35m\r\n    @\u001b[38;5;130mscripts/03d.build-docker.sh\u001b[39m\u001b[K\u001b[35m\r\n    @\u001b[38;5;130mtouch \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[39m\u001b[K\r\n\u001b[K\u001b[36m\r\n## Step 4: Extract --help texts for each binary\u001b[39m\u001b[K\u001b[36m\u001b[1m\r\ndata/04.run-help-extractor:\u001b(B\u001b[m data/03d.docker-build data/03c.bin\u001b[K\r\nary-names scripts/04.run-help-extractor.sh\u001b[K\u001b[35m\r\n    @\u001b[38;5;130mecho \"04 - Running --help extractor in Docker\"\u001b[39m\u001b[K\u001b[38;5;130m\r\n-- INSERT --\u001b[39m\u001b[32X\u001b[32C63,17-20      96%\u001b[K\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:22 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[21;20H\u001b[?2004h"]
[256.636228, "o", "\u001b[1;29r\u001b[29S\u001b[1;1H\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\r\n\u001b[35m    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\r\n\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\r\n\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[6;1H\u001b[36m## Step 3c: Get binary names from the packages we installed, plus the defaults.\r\n\u001b[1mdata/03c.binary-names:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages data/03b.limited-packages scripts/03c.get_binary_names.py\r\n\u001b[35m    @\u001b[38;5;130mecho \"03 - Extracting binary names\"\r\n\u001b[35m    @\u001b[38;5;130mcat data/01a.ubuntu-bin > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\r\n\u001b[35m    @\u001b[38;5;130m./scripts/03c.get_binary_names.py data/01b.ubuntu-binaries-and-packages data/03b.limited-packages >> \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\r\n\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[13;1H\u001b[36m## Step 3d: Install the packages into a Docker container, in batches.\r\n\u001b[1mdata/03d.docker-build:\u001b(B\u001b[m scripts/03d.build-docker.sh scripts/03d.Dockerfile scripts/03d.Dockerfile-base data/03b.limited-packages\r\n\u001b[35m    @\u001b[38;5;130mecho \"03 - Building Docker images for binaries\"\r\n\u001b[35m    @\u001b[38;5;130mscripts/03d.build-docker.sh\r\n\u001b[35m    @\u001b[38;5;130mtouch \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[20;1H\u001b[36m## Step 4: Extract --help texts for each binary\r\n\u001b[1mdata/04.run-help-extractor:\u001b(B\u001b[m data/03d.docker-build data/03c.binary-names scripts/04.run-help-extractor.sh\r\n\u001b[35m    @\u001b[38;5;130mecho \"04 - Running --help extractor in Docker\"\r\n\u001b[35m    @\u001b[38;5;130mscripts/04.run-help-extractor.sh\r\n\u001b[35m    @\u001b[38;5;130mtouch \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\r\n\u001b[34m\u001b[1m~                                                                                                  \u001b[1;30r\u001b[25;100H\u001b[?25l\u001b(B\u001b[m"]
[256.636431, "o", "\u001b[34m\u001b[1m                         \u001b[26;1H~                                                                                                                           \u001b[27;1H~                                                                                                                           \u001b[28;1H~                                                                                                                           \u001b[29;1H\u001b(B\u001b[m\u001b[38;5;130m-- INSERT --\u001b[94C\u001b[39m63,17-20      Bot\u001b[16;20H\u001b[?12l\u001b[?25h"]
[257.006359, "o", "\u001b[?25l\u001b[30m\u001b[44m\u001b[30;1H[0] 0:sudo- 1:vim*                                                                   \"gaz@orin: ~/src/uh-ha\" 19:22 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[16;20H"]
[259.042015, "o", "\u001b[29;1H\u001b[K\u001b[?25l"]
[259.042336, "o", "\u001b[106C63,16-19      Bot\u001b[16;19H\u001b[?12l\u001b[?25h"]
[259.598656, "o", "\u001b[29;1H:\u001b[105C\u001b[K\u0007\u001b[2G"]
[259.932697, "o", "q"]
[260.153475, "o", "!"]
[260.372751, "o", "\r"]
[260.376039, "o", "\u001b[K\u001b[13d\u001b[?2004l"]
[260.376564, "o", "\u001b[?25l\u001b[H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ cd src\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src\u001b(B\u001b[m$ cd uh-halp-data/\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ ls -l\u001b[K\r\ntotal 36\u001b[K\r\ndrwxrwxr-x 7 gaz gaz  4096 Jan  3 19:17 \u001b[34m\u001b[1mcasts\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 3 gaz gaz 12288 Jan  3 19:18 \u001b[34m\u001b[1mdata\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 3 gaz gaz  4096 Jan  3 19:16 \u001b[34m\u001b[1mdata.bak\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 2 gaz gaz  4096 Jan  3 19:13 \u001b[34m\u001b[1mlog\u001b(B\u001b[m\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  3176 Jan  3 19:02 Makefile\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  2550 Jan  1 07:28 README.md\u001b[K\r\ndrwxrwxr-x 2 gaz gaz  4096 Jan  3 19:03 \u001b[34m\u001b[1mscripts\u001b(B\u001b[m\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim Makefile \u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[?12l\u001b[?25h\u001b[13d"]
[260.37859, "o", "\u001b[?2004h"]
[260.378767, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ "]
[260.379008, "o", "\u001b[?25l\u001b[?12l\u001b[?25h"]
[260.579079, "o", "\u001b[?25l\u001b[30m\u001b[44m\u001b[30;1H[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:22 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[13;38H"]
[265.204724, "o", "\u001b[?25l\u001b[30m\u001b[44m\u001b[30;1H[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:23 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[13;38H"]
[265.486792, "o", "\u001b[1;30r\u001b(B\u001b[m\u001b[?1l\u001b>\u001b[H\u001b[2J\u001b[?2004l\u001b[?12l\u001b[?25h\u001b[?1000l\u001b[?1002l\u001b[?1003l\u001b[?1006l\u001b[?1005l\u001b[?7727l\u001b[?1004l\u001b[?1049l\u001b[23;0;0t"]
[265.486992, "o", "[detached (from session 0)]\r\n"]
[0.007874, "o", "\u001b[?1049h\u001b[22;0;0t\u001b[?1h\u001b=\u001b[H\u001b[2J\u001b[?12l\u001b[?25h\u001b[?1000l\u001b[?1002l\u001b[?1003l\u001b[?1006l\u001b[?1005l\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[?1006l\u001b[?1000l\u001b[?1002l\u001b[?1003l\u001b[?2004l\u001b[1;1H\u001b[1;30r\u001b[>c\u001b[>q\u001b[13;38H\u001b[?1006h\u001b[?1002h\u001b[?2004h"]
[0.00884, "o", "\u001b[?25l\u001b[H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ cd src\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src\u001b(B\u001b[m$ cd uh-halp-data/\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ ls -l\u001b[K\r\ntotal 36\u001b[K\r\ndrwxrwxr-x 7 gaz gaz  4096 Jan  3 19:17 \u001b[34m\u001b[1mcasts\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 3 gaz gaz 12288 Jan  3 19:18 \u001b[34m\u001b[1mdata\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 3 gaz gaz  4096 Jan  3 19:16 \u001b[34m\u001b[1mdata.bak\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 2 gaz gaz  4096 Jan  3 19:13 \u001b[34m\u001b[1mlog\u001b(B\u001b[m\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  3176 Jan  3 19:02 Makefile\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  2550 Jan  1 07:28 README.md\u001b[K\r\ndrwxrwxr-x 2 gaz gaz  4096 Jan  3 19:03 \u001b[34m\u001b[1mscripts\u001b(B\u001b[m\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim Makefile \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:23 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[13;38H\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[?1006l\u001b[?1000l\u001b[?1002l\u001b[?1003l\u001b[?2004l\u001b[1;1H\u001b[1;30r\u001b[?25l\u001b[1;1H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ cd src\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src\u001b(B\u001b[m$ cd uh-halp-data/\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ ls -l\u001b[K\r\ntotal 36\u001b[K\r\ndrwxrwxr-x 7 gaz gaz  4096 Jan  3 19:17 \u001b[34m\u001b[1mcasts\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 3 gaz gaz 12288 Jan  3 19:18 \u001b[34m\u001b[1mdata\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 3 gaz gaz  4096 Jan  3 19:16 \u001b[34m\u001b[1mdata.bak\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 2 gaz gaz  4096 Jan  3 19:13 \u001b[34m\u001b[1mlog\u001b(B\u001b[m\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  3176 Jan  3 19:02 Makefile\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  2550 Jan  1 07:28 README.md\u001b[K\r\ndrwxrwxr-x 2 gaz gaz  4096 Jan  3 19:03 \u001b[34m\u001b[1mscripts\u001b(B\u001b[m\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim Makefile \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:23 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[13;38H\u001b[?1006h\u001b[?1002h\u001b[?2004h"]
[0.054346, "o", "\u001b[?7727h\u001b[?7727h"]
[4.823702, "o", "m"]
[4.908695, "o", "a"]
[5.033708, "o", "k"]
[5.124068, "o", "e"]
[5.246904, "o", " "]
[7.176869, "o", "\b\u001b[K"]
[7.682, "o", "\b\u001b[K"]
[7.706445, "o", "\b\u001b[K"]
[7.723912, "o", "\b\u001b[K"]
[7.762221, "o", "\b\u001b[K"]
[7.801918, "o", "\u0007"]
[8.476032, "o", "v"]
[8.558837, "o", "i"]
[8.633761, "o", "m"]
[8.729582, "o", " "]
[9.016887, "o", "M"]
[9.26626, "o", "akefile "]
[9.563764, "o", "\r\n\u001b[?2004l"]
[9.593539, "o", "\u001b[?25l\u001b[H\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[?12l\u001b[?25h\u001b[H\u001b[?2004h"]
[9.593754, "o", "\u001b[1;29r\u001b[29S\u001b[29;1H\"Makefile\"\u001b[1;30r\u001b[29;11H\u001b[?25l"]
[9.593877, "o", " 71L, 3176B"]
[9.596393, "o", "\u001b[2;1Hâ–½\r  \r\n           \u001b[H"]
[9.598454, "o", "\u001b[36m# So we can actually have some persistence\r\n\u001b[1m.ONESHELL:\u001b(B\u001b[m\u001b[K\r\n\u001b[36m\u001b[1m.SHELLFLAGS \u001b(B\u001b[m:= -c -e\u001b[K\u001b[5;1H\u001b[36m\u001b[1mMAX_PACKAGES\u001b(B\u001b[m=15000\r\n\u001b[36m\u001b[1mPACKAGE_BLACKLIST\u001b(B\u001b[m=^pcp\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^mythexport\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^prewikka\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^slapd\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^mailman3-web\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^freedombox\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^kubuntu-installer-prompt\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^runit\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^amazon-ec2-net-utils\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^xemacs21-nomule\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^uvtool-libvirt\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^epoptes\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^namazu2\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^sympa\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^firebuild\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^epic4\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^epic5\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^initramfs-tools\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^linux-image-6.8.0-1009-xilinx|\u001b[36m\u001b[1m$$\u001b(B\u001b[m^sympa\u001b[36m\u001b[1m$$\u001b[10;1Hall:\r\n\u001b(B\u001b[m\u001b[35m    @\u001b[38;5;130mbash -c \"touch ./data/*\"\r\n\u001b[35m    @\u001b[36m\u001b[1m$(MAKE)\u001b(B\u001b[m\u001b[38;5;130m data/04.run-help-extractor\r\n    \u001b[36m# finished? really? give yourself a pat on the mouth\u001b[15;1H## Step 1a: List default binaries installed in Ubuntu.\r\n\u001b[1mdata/01a.ubuntu-bin:\u001b(B\u001b[m scripts/01a.standard-binaries.sh\r\n\u001b[35m    @\u001b[38;5;130mecho \"01 - Getting standard binary names\"\r\n\u001b[35m    @\u001b[38;5;130m./scripts/01a.standard-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\r\n\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[21;1H\u001b[36m## Step 1b: List all possible Ubuntu binaries from all available packages\r\n\u001b[1mdata/01b.ubuntu-binaries-and-packages:\u001b(B\u001b[m scripts/01b.all-ubuntu-binaries.sh\r\n\u001b[35m    @\u001b[38;5;130mecho \"01 - Getting all possible binary names\"\r\n\u001b[35m    @\u001b[38;5;130m./scripts/01b.all-ubuntu-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\r\n\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[27;1H\u001b[36m## Step 1 final: combine the outputs into a list of binaries.\r\n\u001b[1mdata/01.binaries:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages data/01a.ubuntu-bin scripts/01c.combine.sh\u001b[29;107H1,1\u001b[11CTop\u001b[H\u001b[?12l\u001b[?25h"]
[9.720602, "o", "\u001b[?25l\u001b[30m\u001b[44m\u001b[30d[0] 0:sudo- 1:vim*                                                                   \"gaz@orin: ~/src/uh-ha\" 19:23 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;1H"]
[9.800748, "o", "\u001b[29;107H2\u001b[2;1H"]
[10.317985, "o", "\u001b[29;107H3\u001b[3;1H"]
[10.340607, "o", "\u001b[29;107H4,0-1\u001b[4;1H"]
[10.360727, "o", "\u001b[29;107H5,1  \u001b[5;1H"]
[10.397194, "o", "\u001b[29;107H6\u001b[6;1H"]
[10.415644, "o", "\u001b[29;107H7,0-1\u001b[9;1H"]
[10.453943, "o", "\u001b[29;107H8,1  \u001b[10;1H"]
[10.495926, "o", "\u001b[29;107H9,1-4\u001b[11;4H"]
[10.51017, "o", "\u001b[29;107H10,1-4\u001b[12;4H"]
[10.549448, "o", "\u001b[29;108H1\u001b[13;4H"]
[10.568014, "o", "\u001b[29;108H2,0-1\u001b[14;1H"]
[10.608104, "o", "\u001b[29;108H3,1  \u001b[15;1H"]
[10.626834, "o", "\u001b[29;108H4\u001b[16;1H"]
[10.666337, "o", "\u001b[29;108H5,1-4\u001b[17;4H"]
[10.705148, "o", "\u001b[29;108H6\u001b[18;4H"]
[10.723454, "o", "\u001b[29;108H7\u001b[19;4H"]
[10.762898, "o", "\u001b[29;108H8,0-1\u001b[20;1H"]
[10.781675, "o", "\u001b[29;108H9,1  \u001b[21;1H"]
[10.820391, "o", "\u001b[29;107H20\u001b[22;1H"]
[10.839718, "o", "\u001b[29;108H1,1-4\u001b[23;4H"]
[10.877944, "o", "\u001b[29;108H2\u001b[24;4H"]
[10.916446, "o", "\u001b[29;108H3\u001b[25;4H"]
[10.934639, "o", "\u001b[29;108H4,0-1\u001b[26;1H"]
[10.973775, "o", "\u001b[29;108H5,1  \u001b[27;1H"]
[10.993041, "o", "\u001b[29;108H6\u001b[28;1H"]
[11.031859, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mecho \"01 - Combining the binary lists\"\u001b[39m\u001b[29;106H\u001b[1K\u001b[C27,1-4\u001b[9X\u001b[9C2%\u001b[K\u001b[1;30r\u001b[28;4H"]
[11.050703, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130m./scripts/01c.combine.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[29;107H\u001b[39m28,1-4\u001b[9X\u001b[9C4%\u001b[K\u001b[1;30r\u001b[28;4H"]
[11.086878, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[29;107H\u001b[39m29,1-4\u001b[9X\u001b[9C6%\u001b[K\u001b[1;30r\u001b[28;4H"]
[11.126369, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[29;107H30,0-1\u001b[9X\u001b[9C8%\u001b[K\u001b[1;30r\u001b[28;1H"]
[11.144678, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[36m## Step 2: Use LLM to rank the binaries in popularity order.\u001b[29;107H\u001b[39m31,1\u001b[10X\u001b[10C11%\u001b[K\u001b[1;30r\u001b[28;1H"]
[11.183349, "o", "\u001b[1;28r\u001b[1;1H\u001b[3M\u001b[26;1H\u001b[36m\u001b[1mdata/02a.popularity-contest:\u001b(B\u001b[m data/01.binaries\r\n\u001b[35m    @\u001b[38;5;130mecho \"02 - Running popularity contest\"\r\n\u001b[35m    @\u001b[38;5;130mtimestamp=\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130m(date -u +\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mY-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mm-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130md_\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mH\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mM\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mS)\u001b[29;107H\u001b[39m32,1\u001b[10X\u001b[10C13%\u001b[K\u001b[1;30r\u001b[26;1H"]
[11.20188, "o", "\u001b[29;108H3,1-4\u001b[27;4H"]
[11.241538, "o", "\u001b[29;108H4\u001b[28;4H"]
[11.280351, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130m./scripts/02.popularity_contest.py data/01.binaries log > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\"\u001b[29;107H\u001b[39m35,1-4\u001b[8X\u001b[8C16%\u001b[K\u001b[1;30r\u001b[28;4H"]
[11.299584, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mcp \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[29;107H\u001b[39m36,1-4\u001b[8X\u001b[8C18%\u001b[K\u001b[1;30r\u001b[28;4H"]
[11.338266, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[29;107H37,0-1\u001b[8X\u001b[8C20%\u001b[K\u001b[1;30r\u001b[28;1H"]
[11.356314, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[36m## Step 3a: Prioritize the packages based on the binary rankings.\u001b[29;107H\u001b[39m38,1\u001b[10X\u001b[10C23%\u001b[K\u001b[1;30r\u001b[28;1H"]
[11.394161, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[36m\u001b[1mdata/03a.package-priority:\u001b(B\u001b[m data/02a.popularity-contest scripts/03a.package_priority.py\u001b[29;107H39,1\u001b[10X\u001b[10C25%\u001b[K\u001b[1;30r\u001b[28;1H"]
[11.413142, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mecho \"03 - Calculating package priority\"\u001b[29;107H\u001b[39m40,1-4\u001b[8X\u001b[8C27%\u001b[K\u001b[1;30r\u001b[28;4H"]
[11.449994, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130m./scripts/03a.package_priority.py > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[29;107H\u001b[39m41,1-4\u001b[8X\u001b[8C30%\u001b[K\u001b[1;30r\u001b[28;4H"]
[11.486195, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[29;107H\u001b[39m42,1-4\u001b[8X\u001b[8C32%\u001b[K\u001b[1;30r\u001b[28;4H"]
[11.50497, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[29;107H43,0-1\u001b[8X\u001b[8C34%\u001b[K\u001b[1;30r\u001b[28;1H"]
[11.543484, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[36m## Step 3b: Limit the number of packages based on how many we want to install.\u001b[29;107H\u001b[39m44,1\u001b[10X\u001b[10C37%\u001b[K\u001b[1;30r\u001b[28;1H"]
[11.563279, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[36m\u001b[1mdata/03b.limited-packages:\u001b(B\u001b[m data/03a.package-priority\u001b[29;107H45,1\u001b[10X\u001b[10C39%\u001b[K\u001b[1;30r\u001b[28;1H"]
[11.601377, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mecho \"03 - Limiting to \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m packages\"\u001b[29;107H\u001b[39m46,1-4\u001b[8X\u001b[8C41%\u001b[K\u001b[1;30r\u001b[28;4H"]
[11.640897, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mhead -n \u001b[36m\u001b[1m$(MAX_PACKAGES)\u001b(B\u001b[m\u001b[38;5;130m \u001b[36m\u001b[1m$<\u001b(B\u001b[m\u001b[38;5;130m > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[29;107H\u001b[39m47,1-4\u001b[8X\u001b[8C44%\u001b[K\u001b[1;30r\u001b[28;4H"]
[11.659181, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mcut -d ' ' -f 2 \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[29;107H\u001b[39m48,1-4\u001b[8X\u001b[8C46%\u001b[K\u001b[1;30r\u001b[28;4H"]
[11.697594, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[29;107H\u001b[39m49,1-4\u001b[8X\u001b[8C48%\u001b[K\u001b[1;30r\u001b[28;4H"]
[11.718246, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mgrep -Ev \"\u001b[36m\u001b[1m$(PACKAGE_BLACKLIST)\u001b(B\u001b[m\u001b[38;5;130m\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\"\u001b[29;107H\u001b[39m50,1-4\u001b[8X\u001b[8C51%\u001b[K\u001b[1;30r\u001b[28;4H"]
[11.755486, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp2\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[29;107H\u001b[39m51,1-4\u001b[8X\u001b[8C53%\u001b[K\u001b[1;30r\u001b[28;4H"]
[11.794865, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[29;107H\u001b[39m52,1-4\u001b[8X\u001b[8C55%\u001b[K\u001b[1;30r\u001b[28;4H"]
[11.813386, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[29;107H53,0-1\u001b[8X\u001b[8C58%\u001b[K\u001b[1;30r\u001b[28;1H"]
[11.852639, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[36m## Step 3c: Get binary names from the packages we installed, plus the defaults.\u001b[29;107H\u001b[39m54,1\u001b[10X\u001b[10C60%\u001b[K\u001b[1;30r\u001b[28;1H"]
[11.871008, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[36m\u001b[1mdata/03c.binary-names:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages data/03b.limited-packages scripts/03c.get_binary_names.py\u001b[29;107H55,1\u001b[10X\u001b[10C62%\u001b[K\u001b[1;30r\u001b[28;1H"]
[11.910244, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mecho \"03 - Extracting binary names\"\u001b[29;107H\u001b[39m56,1-4\u001b[8X\u001b[8C65%\u001b[K\u001b[1;30r\u001b[28;4H"]
[11.928946, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mcat data/01a.ubuntu-bin > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[29;107H\u001b[39m57,1-4\u001b[8X\u001b[8C67%\u001b[K\u001b[1;30r\u001b[28;4H"]
[11.96849, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130m./scripts/03c.get_binary_names.py data/01b.ubuntu-binaries-and-packages data/03b.limited-packages >> \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[29;107H\u001b[39m58,1-4\u001b[8X\u001b[8C69%\u001b[K\u001b[1;30r\u001b[28;4H"]
[11.987969, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[29;107H\u001b[39m59,1-4\u001b[8X\u001b[8C72%\u001b[K\u001b[1;30r\u001b[28;4H"]
[12.025806, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[29;107H60,0-1\u001b[8X\u001b[8C74%\u001b[K\u001b[1;30r\u001b[28;1H"]
[12.065016, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[36m## Step 3d: Install the packages into a Docker container, in batches.\u001b[29;107H\u001b[39m61,1\u001b[10X\u001b[10C76%\u001b[K\u001b[1;30r\u001b[28;1H"]
[12.083636, "o", "\u001b[1;28r\u001b[1;1H\u001b[2M\u001b[27;1H\u001b[36m\u001b[1mdata/03d.docker-build:\u001b(B\u001b[m scripts/03d.build-docker.sh scripts/03d.Dockerfile scripts/03d.Dockerfile-base data/03b.limited-packages\u001b[29;107H62,1\u001b[10X\u001b[10C79%\u001b[K\u001b[1;30r\u001b[27;1H"]
[12.12327, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mecho \"03 - Building Docker images for binaries\"\u001b[29;107H\u001b[39m63,1-4\u001b[8X\u001b[8C81%\u001b[K\u001b[1;30r\u001b[28;4H"]
[12.142296, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mscripts/03d.build-docker.sh\u001b[29;107H\u001b[39m64,1-4\u001b[8X\u001b[8C84%\u001b[K\u001b[1;30r\u001b[28;4H"]
[12.181169, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mtouch \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[29;107H\u001b[39m65,1-4\u001b[8X\u001b[8C86%\u001b[K\u001b[1;30r\u001b[28;4H"]
[12.369013, "o", "\u001b[29;108H4\u001b[27;4H"]
[12.872969, "o", "\u001b[29;108H3\u001b[26;4H"]
[12.900122, "o", "\u001b[29;108H2,1  \u001b[24;1H"]
[12.919967, "o", "\u001b[29;108H1\u001b[23;1H"]
[12.959034, "o", "\u001b[29;108H0,0-1\u001b[22;1H"]
[13.204395, "o", "\u001b[29;108H1,1  \u001b[23;1H"]
[13.691794, "o", "\u001b[29;108H2\u001b[24;1H"]
[13.715972, "o", "\u001b[29;108H3,1-4\u001b[26;4H"]
[13.755271, "o", "\u001b[29;108H4\u001b[27;4H"]
[13.774491, "o", "\u001b[29;108H5\u001b[28;4H"]
[13.812406, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[29;107H66,0-1\u001b[8X\u001b[8C88%\u001b[K\u001b[1;30r\u001b[28;1H"]
[13.830965, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[36m## Step 4: Extract --help texts for each binary\u001b[29;107H\u001b[39m67,1\u001b[10X\u001b[10C90%\u001b[K\u001b[1;30r\u001b[28;1H"]
[13.868986, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[36m\u001b[1mdata/04.run-help-extractor:\u001b(B\u001b[m data/03d.docker-build data/03c.binary-names scripts/04.run-help-extractor.sh\u001b[29;107H68,1\u001b[10X\u001b[10C93%\u001b[K\u001b[1;30r\u001b[28;1H"]
[13.907585, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mecho \"04 - Running --help extractor in Docker\"\u001b[29;107H\u001b[39m69,1-4\u001b[8X\u001b[8C95%\u001b[K\u001b[1;30r\u001b[28;4H"]
[13.927153, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mscripts/04.run-help-extractor.sh\u001b[29;107H\u001b[39m70,1-4\u001b[8X\u001b[8C97%\u001b[K\u001b[1;30r\u001b[28;4H"]
[13.965309, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mtouch \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[29;107H\u001b[39m71,1-4\u001b[8X\u001b[8CBot\u001b[K\u001b[1;30r\u001b[28;4H"]
[13.983201, "o", "\u0007"]
[14.273802, "o", "\u001b[29;108H0\u001b[27;4H"]
[14.756352, "o", "\u001b[29;107H69\u001b[26;4H"]
[14.780563, "o", "\u001b[29;108H8,1  \u001b[25;1H"]
[14.79997, "o", "\u001b[29;108H7\u001b[24;1H"]
[14.838268, "o", "\u001b[29;108H6,0-1\u001b[23;1H"]
[14.87723, "o", "\u001b[29;108H5,1-4\u001b[22;4H"]
[14.896198, "o", "\u001b[29;108H4\u001b[21;4H"]
[14.934845, "o", "\u001b[29;108H3\u001b[20;4H"]
[14.95407, "o", "\u001b[29;108H2,1  \u001b[18;1H"]
[15.318208, "o", "\u001b[29;108H3,1-4\u001b[20;4H"]
[15.503941, "o", "\u001b[29;108H4\u001b[21;4H"]
[16.795356, "o", "\u001b[29;110H2-5\u001b[21;5H"]
[17.213023, "o", "\u001b[29;110H3-6\u001b[21;6H"]
[17.247622, "o", "\u001b[29;110H4-7\u001b[21;7H"]
[17.422082, "o", "\u001b[29;110H7-10\u001b[21;10H"]
[17.423657, "o", "\u001b[29;110H10-13\u001b[21;13H"]
[17.460106, "o", "\u001b[29;111H1-14\u001b[21;14H"]
[17.634078, "o", "\u001b[29;111H2-15\u001b[21;15H"]
[17.843736, "o", "\u001b[29;108H5\u001b[22;15H"]
[18.294289, "o", "\u001b[29;108H4\u001b[21;15H"]
[18.473039, "o", "\u001b[29;108H3\u001b[20;15H"]
[18.682659, "o", "\u001b[29;108H2,15   \u001b[18;15H"]
[18.772405, "o", "\u001b[29;108H1\u001b[17;15H"]
[19.202792, "o", "\u001b[29;108H2\u001b[18;15H"]
[19.41413, "o", "\u001b[29;111H4\u001b[18;14H"]
[19.876331, "o", "\u001b[29;111H3\u001b[18;13H"]
[20.038357, "o", "\u001b[29;111H0\u001b[18;10H"]
[20.03981, "o", "\u001b[29;110H8 \u001b[18;8H"]
[20.051103, "o", "\u001b[29;110H7\u001b[18;7H"]
[20.249344, "o", "\u001b[29;110H4\u001b[18;4H"]
[20.2505, "o", "\u001b[29;110H1\u001b[18;1H"]
[20.458409, "o", "\u001b[29;110H2\u001b[18;2H"]
[20.893705, "o", "\u001b[29;110H6\u001b[18;6H"]
[21.93976, "o", "\u001b[29;1H:\u001b[105C\u001b[K\u0007\u001b[2G"]
[22.150758, "o", "q"]
[22.363402, "o", "!"]
[22.62469, "o", "\r"]
[22.628475, "o", "\u001b[?25l\u001b[?12l\u001b[?25h\u001b[?25l\u001b[?2004l\u001b[K"]
[22.628923, "o", "\u001b[H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ cd src\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src\u001b(B\u001b[m$ cd uh-halp-data/\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ ls -l\u001b[K\r\ntotal 36\u001b[K\r\ndrwxrwxr-x 7 gaz gaz  4096 Jan  3 19:17 \u001b[34m\u001b[1mcasts\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 3 gaz gaz 12288 Jan  3 19:18 \u001b[34m\u001b[1mdata\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 3 gaz gaz  4096 Jan  3 19:16 \u001b[34m\u001b[1mdata.bak\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 2 gaz gaz  4096 Jan  3 19:13 \u001b[34m\u001b[1mlog\u001b(B\u001b[m\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  3176 Jan  3 19:02 Makefile\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  2550 Jan  1 07:28 README.md\u001b[K\r\ndrwxrwxr-x 2 gaz gaz  4096 Jan  3 19:03 \u001b[34m\u001b[1mscripts\u001b(B\u001b[m\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim Makefile \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim Makefile \u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[14d\u001b[?12l\u001b[?25h"]
[22.630966, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[?2004h"]
[22.631295, "o", "\u001b[?25l\u001b[?12l\u001b[?25h"]
[22.950391, "o", "\u001b[?25l\u001b[30m\u001b[44m\u001b[30;1H[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:23 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[14;38H"]
[23.405283, "o", "m"]
[23.431314, "o", "a"]
[23.586774, "o", "k"]
[23.714516, "o", "e"]
[23.791109, "o", " "]
[25.70636, "o", "d"]
[25.765573, "o", "a"]
[25.953619, "o", "t"]
[26.0007, "o", "a"]
[26.327235, "o", "/"]
[26.793383, "o", "0"]
[26.882526, "o", "3"]
[28.119172, "o", "\u0007"]
[28.286706, "o", "\r\n03a.package-priority  03b.limited-packages  03c.binary-names      03d.docker-build      \r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ make data/03"]
[28.287157, "o", "\u001b[?25l\u001b[?12l\u001b[?25h"]
[29.703808, "o", "d"]
[29.939881, "o", ".docker-build "]
[35.418323, "o", "\u001b[?25l\u001b[H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ cd src\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src\u001b(B\u001b[m$ cd uh-halp-data/\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ ls -l\u001b[K\r\ntotal 36\u001b[K\r\ndrwxrwxr-x 7 gaz gaz  4096 Jan  3 19:17 \u001b[34m\u001b[1mcasts\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 3 gaz gaz 12288 Jan  3 19:18 \u001b[34m\u001b[1mdata\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 3 gaz gaz  4096 Jan  3 19:16 \u001b[34m\u001b[1mdata.bak\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 2 gaz gaz  4096 Jan  3 19:13 \u001b[34m\u001b[1mlog\u001b(B\u001b[m\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  3176 Jan  3 19:02 Makefile\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  2550 Jan  1 07:28 README.md\u001b[K\r\ndrwxrwxr-x 2 gaz gaz  4096 Jan  3 19:03 \u001b[34m\u001b[1mscripts\u001b(B\u001b[m\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim Makefile \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim Makefile \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ make data/03\u001b[K\r\n03a.package-priority  03b.limited-packages  03c.binary-names      03d.docker-build      \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ make data/03d.docker-build \u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:23 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[16;65H"]
[36.748646, "o", "\r\n\u001b[?2004l"]
[36.755214, "o", "03 - Calculating package priority\r\n"]
[37.07199, "o", "03 - Limiting to 15000 packages\r\n"]
[37.095109, "o", "03 - Building Docker images for binaries\r\n"]
[37.097215, "o", "+ mkdir -p data\r\n"]
[37.099686, "o", "+ plain_progress=\r\n"]
[37.100335, "o", "+ docker --help build\r\n"]
[37.100613, "o", "+ grep -- --progress\r\n"]
[37.115993, "o", "DEPRECATED: The legacy builder is deprecated and will be removed in a future release.\r\n            Install the buildx component to build images with BuildKit:\r\n            https://docs.docker.com/go/buildx/\u001b[28;1H"]
[37.120275, "o", "++ uname -m\r\n"]
[37.122049, "o", "\u001b[1;29r\u001b[29;1H\n\u001b[A+ base_image=uh-halp-data-binaries:ubuntu-base-aarch64\r\n\u001b[K\u001b[1;30r\u001b[29;1H"]
[37.122223, "o", "\u001b[1;29r\u001b[1;1H\u001b[2S\u001b[27d+ echo 'Building base uh-halp-data-binaries:ubuntu-base-aarch64 ...'\r\nBuilding base uh-halp-data-binaries:ubuntu-base-aarch64 ...\u001b[K\r\n\u001b[K\u001b[1;30r\u001b[29;1H"]
[37.12259, "o", "\u001b[1;29r\u001b[29;1H\n\u001b[A+ docker build -t uh-halp-data-binaries:ubuntu-base-aarch64 -f scripts/03d.Dockerfile-base .\r\n\u001b[K\u001b[1;30r\u001b[29;1H"]
[37.122946, "o", "\u001b[1;29r\u001b[29;1H\n\u001b[A+ tee log/03d.base-build.log\r\n\u001b[K\u001b[1;30r\u001b[29;1H"]
[37.139844, "o", "\u001b[1;29r\u001b[1;1H\u001b[4S\u001b[25dDEPRECATED: The legacy builder is deprecated and will be removed in a future release.\r\n            Install the buildx component to build images with BuildKit:\u001b[K\r\n            https://docs.docker.com/go/buildx/\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[1;30r\u001b[29;1H"]
[37.278054, "o", "\u001b[?25l\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:make*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:23 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[29;1H"]
[39.73229, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[1;62H\u001b[1K\u001b[Hd \r\n03 - Calculating package priority\u001b[29X\r\n03 - Limiting to 15000 packages\u001b[31X\r\n03 - Building Docker images for binaries\u001b[22X\u001b[5;62H\u001b[1K\r+ mkdir -p data\u001b[6;62H\u001b[1K\r+ plain_progress=\u001b[7;62H\u001b[1K\r+ docker --help build\u001b[8;62H\u001b[1K\r+ grep -- --progress\r\nDEPRECATED: The legacy builder is deprecated and will be remov\u001b[10;62H\u001b[1K\red in a future release.\r\n            Install the buildx component to build images with \u001b[12;62H\u001b[1K\rBuildKit:\r\n            https://docs.docker.com/go/buildx/\u001b[16X\u001b[14;62H\u001b[1K\n\u001b[1K\r++ uname -m\r\n+ base_image=uh-halp-data-binaries:ubuntu-base-aarch64\u001b[8X\r\n+ echo 'Building base uh-halp-data-binaries:ubuntu-base-aarch6\u001b[18;62H\u001b[1K\r4 ...'\r\nBuilding base uh-halp-data-binaries:ubuntu-base-aarch64 ...\u001b[3X\r\n+ docker build -t uh-halp-data-binaries:ubuntu-base-aarch64 -f\u001b[21;62H\u001b[1K\r scripts/03d.Dockerfile-base .\u001b[22;62H\u001b[1K\r+ tee log/03d.base-build.log\r\nDEPRECATED: The legacy builder is deprecated and will be remov\u001b[24;62H\u001b[1K\red in a future release.\r\n            Install the buildx component to build images with \u001b[26;62H\u001b[1K\rBuildKit:\r\n            https://docs.docker.com/go/buildx/\u001b[16X\u001b[28;62H\u001b[1K\n\u001b[1K\u001b[1;64H\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:make*                                                                                   \"orin\" 19:23 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;64H"]
[39.732972, "o", "\u001b[?25l\bâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                                   \"orin\" 19:23 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;64H"]
[39.818711, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ \u001b[?2004h"]
[39.819424, "o", "\u001b[?25l\u001b[21Dâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                            \"gaz@orin: ~\" 19:23 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;84H"]
[40.932031, "o", "\u001b[2;64H"]
[40.932231, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ "]
[40.932651, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[2;84H"]
[41.075201, "o", "\u001b[3;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ "]
[41.075648, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[3;84H"]
[41.20491, "o", "\u001b[4;64H"]
[41.205218, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ "]
[41.205437, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[4;84H"]
[41.33398, "o", "\u001b[5;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ \u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[5;84H"]
[41.471118, "o", "\u001b[6;64H\u001b[?2004l"]
[41.471692, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ \u001b[?2004h"]
[41.471991, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[6;84H"]
[47.761046, "o", "\u001b[?25l\u001b[30m\u001b[44m\u001b[30;1H[0] 0:sudo- 1:bash*                                                                            \"gaz@orin: ~\" 19:24 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[6;84H"]
[53.939772, "o", "c"]
[54.011165, "o", "d"]
[54.114291, "o", " "]
[55.747131, "o", "s"]
[55.946711, "o", "r"]
[56.18233, "o", "c"]
[56.376875, "o", "/"]
[57.058072, "o", "u"]
[57.557473, "o", "h"]
[57.719175, "o", "-halp-data/"]
[90.56539, "o", "\r(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data/log\u001b(B\u001b[m$ \u001b[K"]
[90.565584, "o", "\u001b[?25l\u001b[?12l\u001b[?25h"]
[91.387396, "o", "l"]
[91.478773, "o", "s"]
[91.613964, "o", " "]
[91.687169, "o", "-"]
[91.772748, "o", "l"]
[92.015866, "o", "\r\n\u001b[?2004l"]
[92.018812, "o", "total 48\r\n-rw-rw-r-- 1 gaz gaz 46739 Jan  3 19:24 03d.base-build.log\r\n"]
[92.019364, "o", "\u001b[?2004h(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data/log\u001b(B\u001b[m$ "]
[92.019505, "o", "\u001b[?25l\u001b[?12l\u001b[?25h"]
[93.681546, "o", "c"]
[93.687344, "o", "d"]
[93.912104, "o", " "]
[93.941618, "o", "."]
[94.15209, "o", "."]
[94.314384, "o", "\u001b[1;29r\u001b[29;1H\n\u001b[K\u001b[1;30r\u001b[29;1H\u001b[?2004l"]
[94.314629, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[?2004h"]
[94.315189, "o", "\u001b[?25l\u001b[?12l\u001b[?25h"]
[97.792357, "o", "e"]
[97.937484, "o", "c"]
[97.989987, "o", "h"]
[98.170983, "o", "o"]
[98.339653, "o", " "]
[100.426814, "o", "T"]
[100.699233, "o", "i"]
[100.822995, "o", "s"]
[101.163695, "o", "\b\u001b[K"]
[101.517056, "o", "h"]
[101.568381, "o", "i"]
[101.710193, "o", "s"]
[101.781192, "o", " "]
[101.886384, "o", "t"]
[102.617939, "o", "\b\u001b[K"]
[102.707026, "o", "\b\u001b[K"]
[102.866445, "o", "\b\u001b[K"]
[102.989962, "o", "\b\u001b[K"]
[103.138877, "o", "\b\u001b[K"]
[103.266444, "o", "\b\u001b[K"]
[103.552065, "o", "h"]
[103.658211, "o", "i"]
[103.720196, "o", "s"]
[103.803259, "o", " "]
[103.942737, "o", "t"]
[104.033775, "o", "a"]
[104.237353, "o", "k"]
[104.405903, "o", "e"]
[104.41318, "o", "s"]
[104.51598, "o", " "]
[104.62231, "o", "a"]
[104.730997, "o", " "]
[105.369796, "o", "w"]
[105.739091, "o", "h"]
[105.844388, "o", "i"]
[106.108093, "o", "l"]
[106.176558, "o", "e"]
[106.591168, "o", "!"]
[106.781201, "o", " "]
[107.782541, "o", "\u001b[?25l\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*Z                                                                 \"gaz@orin: ~/src/uh-ha\" 19:25 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[29;63H"]
[108.899804, "o", "\b\u001b[K"]
[109.065852, "o", "\b\u001b[K"]
[109.214977, "o", " "]
[109.507231, "o", "|"]
[109.53502, "o", " "]
[110.935738, "o", "f"]
[111.025883, "o", "i"]
[111.229513, "o", "g"]
[111.456345, "o", "l"]
[111.525946, "o", "e"]
[111.688229, "o", "t"]
[111.779458, "o", " "]
[112.111578, "o", "|"]
[112.173554, "o", " "]
[112.360986, "o", "l"]
[112.522599, "o", "o"]
[112.70992, "o", "l"]
[112.879003, "o", "c"]
[112.926723, "o", "a"]
[113.106352, "o", "t"]
[113.437624, "o", "\u001b[1;29r\u001b[29;1H\n\u001b[K\u001b[1;30r\u001b[29;1H\u001b[?2004l"]
[113.543319, "o", "\u001b[38;5;33m ____\u001b(B\u001b[m"]
[113.543566, "o", "\u001b[38;5;33m_\u001b(B\u001b[m\u001b[38;5;33m _\u001b[38;5;39m     _ \u001b(B\u001b[m\u001b[38;5;39m "]
[113.543939, "o", "\u001b(B\u001b[m\u001b[38;5;39m \u001b[38;5;38m \u001b[38;5;44m   _       \u001b[38;5;43m \u001b[38;5;49m_     "]
[113.544116, "o", "\u001b(B\u001b[m\u001b[38;5;49m   \u001b[38;5;48m  \u001b(B\u001b[m"]
[113.544251, "o", "\u001b[38;5;48m  \u001b(B\u001b[m"]
[113.544438, "o", "\u001b[38;5;48m   \u001b(B\u001b[m\u001b[38;5;48m  \u001b[38;5;84m \u001b[38;5;83m \u001b(B\u001b[m\u001b[38;5;83m "]
[113.544477, "o", "\u001b(B\u001b[m\u001b[38;5;83m  \u001b(B\u001b[m"]
[113.544512, "o", "\u001b[38;5;83m \u001b(B\u001b[m\u001b[38;5;83m "]
[113.544529, "o", "\u001b(B\u001b[m\u001b[38;5;83m \u001b(B\u001b[m"]
[113.544764, "o", "\u001b[38;5;83m \u001b(B\u001b[m\u001b[38;5;83m  \u001b(B\u001b[m\u001b[38;5;83m \u001b(B\u001b[m\u001b[38;5;119m \u001b(B\u001b[m"]
[113.544807, "o", "\u001b[38;5;118m \u001b(B\u001b[m\u001b[38;5;118m \u001b(B\u001b[m"]
[113.54483, "o", "\u001b[38;5;118m_\u001b(B\u001b[m"]
[113.545257, "o", "\u001b[38;5;118m     \u001b(B\u001b[m"]
[113.545361, "o", "\u001b[38;5;118m_\u001b[38;5;154m _      \u001b(B\u001b[m\u001b[1;29r\u001b[29;1H\n\u001b[K"]
[113.545569, "o", "\u001b[1;30r\u001b[29;1H\u001b[38;5;33m|_\u001b(B\u001b[m\u001b[38;5;33m   \u001b[38;5;39m_\u001b(B\u001b[m"]
[113.545593, "o", "\u001b[38;5;39m|\u001b(B\u001b[m\u001b[38;5;39m "]
[113.54568, "o", "\u001b(B\u001b[m"]
[113.54582, "o", "\u001b[38;5;39m|__ \u001b(B\u001b[m\u001b[38;5;39m(\u001b(B\u001b[m"]
[113.547069, "o", "\u001b[38;5;39m_\u001b[38;5;38m)\u001b[38;5;44m___  \u001b(B\u001b[m\u001b[38;5;44m| \u001b(B\u001b[m\u001b[38;5;44m|\u001b(B\u001b[m"]
[113.547211, "o", "\u001b[38;5;44m_\u001b(B\u001b[m\u001b[38;5;44m \u001b(B\u001b[m"]
[113.547358, "o", "\u001b[38;5;44m_\u001b[38;5;43m_\u001b[38;5;49m _| \u001b(B\u001b[m\u001b[38;5;49m| "]
[113.547512, "o", "\u001b(B\u001b[m\u001b[38;5;49m___\u001b[38;5;48m__"]
[113.547618, "o", "\u001b(B\u001b[m\u001b[38;5;48m  __"]
[113.547799, "o", "\u001b(B\u001b[m\u001b[38;5;48m_  \u001b[38;5;84m \u001b[38;5;83m \u001b(B\u001b[m"]
[113.54789, "o", "\u001b[38;5;83m_\u001b(B\u001b[m"]
[113.548145, "o", "\u001b[38;5;83m_ _  __\u001b(B\u001b[m"]
[113.548315, "o", "\u001b[38;5;83m \u001b(B\u001b[m\u001b[38;5;83m \u001b(B\u001b[m\u001b[38;5;119m \u001b[38;5;118m \u001b(B\u001b[m"]
[113.548423, "o", "\u001b[38;5;118m  \u001b(B\u001b[m\u001b[38;5;118m_\u001b(B\u001b[m\u001b[38;5;118m|\u001b(B\u001b[m\u001b[38;5;118m \u001b(B\u001b[m\u001b[38;5;118m|\u001b(B\u001b[m"]
[113.548527, "o", "\u001b[38;5;118m_\u001b(B\u001b[m\u001b[38;5;118m_"]
[113.548605, "o", "\u001b(B\u001b[m\u001b[38;5;154m (_\u001b(B\u001b[m\u001b[38;5;154m) \u001b(B\u001b[m"]
[113.548702, "o", "\u001b[38;5;154m|\u001b(B\u001b[m\u001b[38;5;154m _"]
[113.548772, "o", "\u001b(B\u001b[m\u001b[38;5;154m__"]
[113.548862, "o", "\u001b(B\u001b[m\u001b[1;29r\u001b[29;1H\n\u001b[28;78H\u001b[38;5;148m \u001b[39m\r\n\u001b[K"]
[113.548926, "o", "\u001b[1;30r\u001b[29;1H\u001b[38;5;33m "]
[113.549007, "o", "\u001b(B\u001b[m\u001b[38;5;33m "]
[113.549032, "o", "\u001b(B\u001b[m"]
[113.549145, "o", "\u001b[38;5;39m| |\u001b(B\u001b[m\u001b[38;5;39m | '"]
[113.549216, "o", "\u001b(B\u001b[m"]
[113.549278, "o", "\u001b[38;5;39m_\u001b(B\u001b[m"]
[113.549355, "o", "\u001b[38;5;39m \u001b[38;5;38m\\\u001b(B\u001b[m"]
[113.549447, "o", "\u001b[38;5;44m| / \u001b(B\u001b[m\u001b[38;5;44m__|"]
[113.549508, "o", "\u001b(B\u001b[m"]
[113.549531, "o", "\u001b[38;5;44m |\u001b(B\u001b[m"]
[113.549639, "o", "\u001b[38;5;44m _\u001b[38;5;43m_\u001b[38;5;49m/\u001b(B\u001b[m\u001b[38;5;49m "]
[113.549707, "o", "\u001b(B\u001b[m\u001b[38;5;49m_"]
[113.549729, "o", "\u001b(B\u001b[m\u001b[38;5;49m` "]
[113.549742, "o", "\u001b(B\u001b[m\u001b[38;5;49m|"]
[113.549756, "o", "\u001b(B\u001b[m\u001b[38;5;49m "]
[113.549933, "o", "\u001b(B\u001b[m\u001b[38;5;49m|\u001b(B\u001b[m\u001b[38;5;49m/\u001b(B\u001b[m"]
[113.550006, "o", "\u001b[38;5;48m \u001b(B\u001b[m\u001b[38;5;48m/\u001b(B\u001b[m\u001b[38;5;48m \u001b(B\u001b[m\u001b[38;5;48m_\u001b(B\u001b[m\u001b[38;5;48m \u001b(B\u001b[m\u001b[38;5;48m\\\u001b(B\u001b[m"]
[113.550076, "o", "\u001b[38;5;48m/\u001b(B\u001b[m\u001b[38;5;48m \u001b(B\u001b[m\u001b[38;5;48m_\u001b(B\u001b[m"]
[113.550226, "o", "\u001b[38;5;84m_\u001b[38;5;83m| \u001b(B\u001b[m"]
[113.55031, "o", "\u001b[38;5;83m \u001b(B\u001b[m\u001b[38;5;83m/\u001b(B\u001b[m"]
[113.55043, "o", "\u001b[38;5;83m _`\u001b(B\u001b[m\u001b[38;5;83m | \\"]
[113.550527, "o", "\u001b(B\u001b[m\u001b[38;5;119m \u001b(B\u001b[m"]
[113.55064, "o", "\u001b[38;5;118m\\ /\u001b(B\u001b[m\u001b[38;5;118m\\ /"]
[113.550722, "o", "\u001b(B\u001b[m\u001b[38;5;118m \u001b(B\u001b[m"]
[113.550791, "o", "\u001b[38;5;118m/\u001b(B\u001b[m\u001b[38;5;118m \u001b[38;5;154m'_ \u001b(B\u001b[m"]
[113.550848, "o", "\u001b[38;5;154m\\\u001b(B\u001b[m"]
[113.550871, "o", "\u001b[38;5;154m|\u001b(B\u001b[m\u001b[38;5;154m \u001b(B\u001b[m"]
[113.550926, "o", "\u001b[38;5;154m|\u001b(B\u001b[m"]
[113.550945, "o", "\u001b[38;5;154m \u001b(B\u001b[m"]
[113.550998, "o", "\u001b[38;5;154m|\u001b(B\u001b[m\u001b[38;5;154m/\u001b(B\u001b[m"]
[113.551017, "o", "\u001b[38;5;148m \u001b(B\u001b[m"]
[113.551068, "o", "\u001b[38;5;184m_\u001b(B\u001b[m"]
[113.551087, "o", "\u001b[38;5;184m \u001b(B\u001b[m\u001b[38;5;184m\\"]
[113.5511, "o", "\u001b(B\u001b[m"]
[113.551169, "o", "\u001b[1;29r\u001b[29;1H\n\u001b[K\u001b[1;30r\u001b[29;1H"]
[113.551294, "o", "\u001b[38;5;39m \u001b(B\u001b[m"]
[113.551503, "o", "\u001b[38;5;39m \u001b(B\u001b[m\u001b[38;5;39m|\u001b(B\u001b[m"]
[113.551545, "o", "\u001b[38;5;39m \u001b(B\u001b[m"]
[113.551614, "o", "\u001b[38;5;39m|\u001b(B\u001b[m\u001b[38;5;39m \u001b(B\u001b[m\u001b[38;5;39m|\u001b(B\u001b[m"]
[113.551737, "o", "\u001b[38;5;39m \u001b(B\u001b[m"]
[113.551828, "o", "\u001b[38;5;38m|\u001b[38;5;44m \u001b(B\u001b[m\u001b[38;5;44m|\u001b(B\u001b[m\u001b[38;5;44m |\u001b(B\u001b[m"]
[113.551958, "o", "\u001b[38;5;44m \\\u001b(B\u001b[m\u001b[38;5;44m__ \u001b(B\u001b[m\u001b[38;5;44m\\"]
[113.552003, "o", "\u001b(B\u001b[m\u001b[38;5;44m \u001b(B\u001b[m"]
[113.55202, "o", "\u001b[38;5;43m|\u001b(B\u001b[m\u001b[38;5;49m "]
[113.552087, "o", "\u001b(B\u001b[m"]
[113.552383, "o", "\u001b[38;5;49m||\u001b(B\u001b[m\u001b[38;5;49m \u001b(B\u001b[m\u001b[38;5;49m(\u001b(B\u001b[m\u001b[38;5;49m_\u001b(B\u001b[m\u001b[38;5;49m|\u001b(B\u001b[m"]
[113.552552, "o", "\u001b[38;5;49m \u001b(B\u001b[m\u001b[38;5;49m|\u001b(B\u001b[m\u001b[38;5;48m \u001b(B\u001b[m\u001b[38;5;48m \u001b(B\u001b[m\u001b[38;5;48m \u001b(B\u001b[m\u001b[38;5;48m<\u001b(B\u001b[m\u001b[38;5;48m \u001b(B\u001b[m\u001b[38;5;48m \u001b(B\u001b[m"]
[113.552633, "o", "\u001b[38;5;48m_\u001b(B\u001b[m"]
[113.552674, "o", "\u001b[38;5;48m_/\u001b[38;5;84m\\\u001b(B\u001b[m\u001b[38;5;83m_\u001b(B\u001b[m\u001b[38;5;83m_"]
[113.552906, "o", "\u001b(B\u001b[m\u001b[38;5;83m \\ | (_\u001b(B\u001b[m\u001b[38;5;83m|"]
[113.553089, "o", "\u001b(B\u001b[m\u001b[38;5;83m \u001b(B\u001b[m\u001b[38;5;119m|\u001b(B\u001b[m\u001b[38;5;118m \u001b(B\u001b[m\u001b[38;5;118m \u001b(B\u001b[m\u001b[38;5;118m\\\u001b(B\u001b[m\u001b[38;5;118m \u001b(B\u001b[m\u001b[38;5;118mV\u001b(B\u001b[m"]
[113.553225, "o", "\u001b[38;5;118m \u001b(B\u001b[m\u001b[38;5;118m \u001b(B\u001b[m"]
[113.553337, "o", "\u001b[38;5;118mV\u001b(B\u001b[m\u001b[38;5;118m \u001b(B\u001b[m\u001b[38;5;154m/\u001b(B\u001b[m\u001b[38;5;154m|\u001b(B\u001b[m\u001b[38;5;154m \u001b(B\u001b[m\u001b[38;5;154m|\u001b(B\u001b[m"]
[113.553436, "o", "\u001b[38;5;154m \u001b(B\u001b[m\u001b[38;5;154m|\u001b(B\u001b[m\u001b[38;5;154m \u001b(B\u001b[m\u001b[38;5;154m|\u001b(B\u001b[m"]
[113.553532, "o", "\u001b[38;5;154m \u001b(B\u001b[m\u001b[38;5;154m|\u001b(B\u001b[m\u001b[38;5;148m \u001b(B\u001b[m\u001b[38;5;184m|\u001b(B\u001b[m"]
[113.553578, "o", "\u001b[38;5;184m \u001b(B\u001b[m"]
[113.553763, "o", "\u001b[38;5;184m \u001b(B\u001b[m\u001b[38;5;184m_\u001b(B\u001b[m\u001b[38;5;184m_\u001b(B\u001b[m\u001b[38;5;184m/\u001b(B\u001b[m"]
[113.553844, "o", "\u001b[1;29r\u001b[29;1H\n\u001b[K\u001b[1;30r\u001b[29;1H"]
[113.554038, "o", "\u001b[38;5;39m \u001b(B\u001b[m"]
[113.554277, "o", "\u001b[38;5;39m \u001b(B\u001b[m\u001b[38;5;39m|_\u001b(B\u001b[m\u001b[38;5;39m|\u001b(B\u001b[m\u001b[38;5;38m \u001b(B\u001b[m\u001b[38;5;44m|\u001b(B\u001b[m\u001b[38;5;44m_\u001b(B\u001b[m\u001b[38;5;44m|\u001b(B\u001b[m\u001b[38;5;44m \u001b(B\u001b[m\u001b[38;5;44m|\u001b(B\u001b[m\u001b[38;5;44m_\u001b(B\u001b[m\u001b[38;5;44m|\u001b(B\u001b[m\u001b[38;5;44m_\u001b(B\u001b[m\u001b[38;5;44m|\u001b(B\u001b[m\u001b[38;5;44m_\u001b(B\u001b[m\u001b[38;5;44m_\u001b(B\u001b[m"]
[113.554488, "o", "\u001b[38;5;43m_\u001b(B\u001b[m\u001b[38;5;49m/\u001b(B\u001b[m\u001b[38;5;49m \u001b(B\u001b[m\u001b[38;5;49m \u001b(B\u001b[m\u001b[38;5;49m\\\u001b(B\u001b[m\u001b[38;5;49m_\u001b(B\u001b[m\u001b[38;5;49m_\u001b(B\u001b[m\u001b[38;5;49m\\"]
[113.554571, "o", "\u001b(B\u001b[m\u001b[38;5;49m_\u001b(B\u001b[m\u001b[38;5;49m_\u001b(B\u001b[m\u001b[38;5;48m,\u001b(B\u001b[m\u001b[38;5;48m_\u001b(B\u001b[m"]
[113.554609, "o", "\u001b[38;5;48m|\u001b(B\u001b[m"]
[113.554842, "o", "\u001b[38;5;48m_\u001b(B\u001b[m\u001b[38;5;48m|\u001b(B\u001b[m\u001b[38;5;48m\\\u001b(B\u001b[m\u001b[38;5;48m_\u001b(B\u001b[m\u001b[38;5;48m\\\u001b(B\u001b[m\u001b[38;5;48m_\u001b(B\u001b[m"]
[113.554915, "o", "\u001b[38;5;84m_\u001b(B\u001b[m\u001b[38;5;83m_\u001b(B\u001b[m\u001b[38;5;83m|\u001b(B\u001b[m\u001b[38;5;83m|\u001b(B\u001b[m"]
[113.554951, "o", "\u001b[38;5;83m_\u001b(B\u001b[m\u001b[38;5;83m_"]
[113.55498, "o", "\u001b(B\u001b[m\u001b[38;5;83m_"]
[113.555005, "o", "\u001b(B\u001b[m\u001b[38;5;83m/\u001b(B\u001b[m"]
[113.555176, "o", "\u001b[38;5;83m \u001b(B\u001b[m\u001b[38;5;83m \u001b(B\u001b[m\u001b[38;5;83m\\\u001b(B\u001b[m"]
[113.555221, "o", "\u001b[38;5;83m_\u001b(B\u001b[m\u001b[38;5;119m_\u001b(B\u001b[m\u001b[38;5;118m,\u001b(B\u001b[m\u001b[38;5;118m_\u001b(B\u001b[m\u001b[38;5;118m|\u001b(B\u001b[m"]
[113.555249, "o", "\u001b[38;5;118m \u001b(B\u001b[m"]
[113.55529, "o", "\u001b[38;5;118m \u001b(B\u001b[m\u001b[38;5;118m \u001b(B\u001b[m"]
[113.555636, "o", "\u001b[38;5;118m\\\u001b(B\u001b[m\u001b[38;5;118m_\u001b(B\u001b[m\u001b[38;5;118m/\u001b(B\u001b[m\u001b[38;5;154m\\\u001b(B\u001b[m\u001b[38;5;154m_\u001b(B\u001b[m\u001b[38;5;154m/\u001b(B\u001b[m\u001b[38;5;154m \u001b(B\u001b[m\u001b[38;5;154m|\u001b(B\u001b[m"]
[113.555738, "o", "\u001b[38;5;154m_\u001b(B\u001b[m\u001b[38;5;154m|\u001b(B\u001b[m\u001b[38;5;154m \u001b(B\u001b[m\u001b[38;5;154m|\u001b(B\u001b[m\u001b[38;5;154m_\u001b(B\u001b[m\u001b[38;5;148m|\u001b(B\u001b[m\u001b[38;5;184m_\u001b(B\u001b[m\u001b[38;5;184m|\u001b(B\u001b[m\u001b[38;5;184m_\u001b(B\u001b[m"]
[113.555974, "o", "\u001b[38;5;184m|\u001b(B\u001b[m"]
[113.556113, "o", "\u001b[38;5;184m\\\u001b(B\u001b[m\u001b[38;5;184m_\u001b(B\u001b[m\u001b[38;5;184m_\u001b(B\u001b[m\u001b[38;5;184m_\u001b(B\u001b[m\u001b[38;5;184m|\u001b(B\u001b[m\u001b[1;29r\u001b[29;1H\n\u001b[K\u001b[1;30r\u001b[29;1H"]
[113.55624, "o", "\u001b[38;5;39m \u001b(B\u001b[m\u001b[38;5;39m \u001b(B\u001b[m\u001b[38;5;38m \u001b(B\u001b[m\u001b[38;5;44m \u001b(B\u001b[m"]
[113.55635, "o", "\u001b[38;5;44m \u001b(B\u001b[m\u001b[38;5;44m \u001b(B\u001b[m\u001b[38;5;44m "]
[113.556459, "o", "\u001b(B\u001b[m\u001b[38;5;44m \u001b(B\u001b[m"]
[113.556528, "o", "\u001b[38;5;44m \u001b(B\u001b[m\u001b[38;5;44m \u001b(B\u001b[m\u001b[38;5;44m   "]
[113.556559, "o", "\u001b(B\u001b[m\u001b[38;5;44m \u001b(B\u001b[m"]
[113.556585, "o", "\u001b[38;5;43m \u001b(B\u001b[m"]
[113.556829, "o", "\u001b[38;5;49m \u001b(B\u001b[m\u001b[38;5;49m \u001b(B\u001b[m\u001b[38;5;49m \u001b(B\u001b[m\u001b[38;5;49m \u001b(B\u001b[m\u001b[38;5;49m \u001b(B\u001b[m\u001b[38;5;49m \u001b(B\u001b[m\u001b[38;5;49m \u001b(B\u001b[m"]
[113.556875, "o", "\u001b[38;5;49m \u001b(B\u001b[m"]
[113.556901, "o", "\u001b[38;5;49m \u001b(B\u001b[m"]
[113.557134, "o", "\u001b[38;5;48m \u001b(B\u001b[m\u001b[38;5;48m "]
[113.55733, "o", "\u001b(B\u001b[m\u001b[38;5;48m \u001b(B\u001b[m\u001b[38;5;48m \u001b(B\u001b[m\u001b[38;5;48m \u001b(B\u001b[m\u001b[38;5;48m \u001b(B\u001b[m\u001b[38;5;48m \u001b(B\u001b[m\u001b[38;5;48m \u001b(B\u001b[m\u001b[38;5;48m \u001b(B\u001b[m\u001b[38;5;84m \u001b(B\u001b[m\u001b[38;5;83m \u001b(B\u001b[m"]
[113.557396, "o", "\u001b[38;5;83m \u001b(B\u001b[m\u001b[38;5;83m \u001b(B\u001b[m\u001b[38;5;83m  \u001b(B\u001b[m\u001b[38;5;83m \u001b(B\u001b[m"]
[113.557624, "o", "\u001b[38;5;83m \u001b(B\u001b[m\u001b[38;5;83m \u001b(B\u001b[m\u001b[38;5;83m \u001b(B\u001b[m\u001b[38;5;83m \u001b(B\u001b[m\u001b[38;5;83m \u001b(B\u001b[m"]
[113.55774, "o", "\u001b[38;5;119m \u001b(B\u001b[m\u001b[38;5;118m \u001b(B\u001b[m\u001b[38;5;118m \u001b(B\u001b[m\u001b[38;5;118m \u001b(B\u001b[m\u001b[38;5;118m "]
[113.557837, "o", "\u001b(B\u001b[m\u001b[38;5;118m \u001b(B\u001b[m\u001b[38;5;118m \u001b(B\u001b[m\u001b[38;5;118m \u001b(B\u001b[m"]
[113.558091, "o", "\u001b[38;5;118m \u001b(B\u001b[m\u001b[38;5;118m \u001b(B\u001b[m"]
[113.558229, "o", "\u001b[38;5;154m          \u001b[38;5;148m \u001b[38;5;184m \u001b(B\u001b[m\u001b[38;5;184m  \u001b(B\u001b[m\u001b[38;5;184m \u001b(B\u001b[m\u001b[38;5;184m \u001b(B\u001b[m\u001b[38;5;184m "]
[113.558275, "o", "\u001b(B\u001b[m\u001b[38;5;184m  \u001b(B\u001b[m"]
[113.558306, "o", "\u001b[38;5;184m \u001b(B\u001b[m"]
[113.558333, "o", "\u001b[38;5;184m \u001b(B\u001b[m\u001b[38;5;184m "]
[113.558358, "o", "\u001b(B\u001b[m"]
[113.558382, "o", "\u001b[38;5;178m \u001b(B\u001b[m"]
[113.558545, "o", "\u001b[1;29r\u001b[29;1H\n\u001b[K\u001b[1;30r\u001b[29;1H"]
[113.561384, "o", "\u001b[?2004h(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ "]
[113.56168, "o", "\u001b[?25l\u001b[?12l\u001b[?25h"]
[116.044391, "o", "\u001b[1;30r\u001b(B\u001b[m\u001b[?1l\u001b>\u001b[H\u001b[2J\u001b[?2004l\u001b[?12l\u001b[?25h\u001b[?1000l\u001b[?1002l\u001b[?1003l\u001b[?1006l\u001b[?1005l\u001b[?7727l\u001b[?1004l\u001b[?1049l\u001b[23;0;0t"]
[116.04464, "o", "[detached (from session 0)]\r\n"]
