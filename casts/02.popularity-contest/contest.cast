{"version": 2, "width": 124, "height": 30, "timestamp": 1735930984, "env": {"SHELL": "/bin/bash", "TERM": "xterm-256color"}}
[0.008525, "o", "\u001b[?1049h\u001b[22;0;0t\u001b[?1h\u001b=\u001b[H\u001b[2J\u001b[?12l\u001b[?25h\u001b[?1000l\u001b[?1002l\u001b[?1003l\u001b[?1006l\u001b[?1005l\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[?1006l\u001b[?1000l\u001b[?1002l\u001b[?1003l\u001b[?2004l\u001b[1;1H\u001b[1;30r\u001b[>c\u001b[>q\u001b[1;38H\u001b[?1006h\u001b[?1002h\u001b[?2004h"]
[0.009496, "o", "\u001b[?25l\u001b[H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:03 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;38H\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[?1006l\u001b[?1000l\u001b[?1002l\u001b[?1003l\u001b[?2004l\u001b[1;1H\u001b[1;30r\u001b[1;38H\u001b[?1006h\u001b[?1002h\u001b[?2004h\u001b[?25l\u001b[H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:03 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;38H"]
[0.081515, "o", "\u001b[?7727h\u001b[?7727h"]
[1.718566, "o", "l"]
[1.803295, "o", "s"]
[1.927816, "o", " "]
[2.018141, "o", "-"]
[2.096768, "o", "l"]
[2.394091, "o", "\r\n\u001b[?2004l"]
[2.397505, "o", "total 36\r\n"]
[2.397723, "o", "drwxrwxr-x 6 gaz gaz  4096 Jan  3 18:47 \u001b[34m\u001b[1mcasts\r\n\u001b(B\u001b[mdrwxrwxr-x 4 gaz gaz 12288 Jan  3 19:01 \u001b[34m\u001b[1mdata\r\n\u001b(B\u001b[mdrwxrwxr-x 4 gaz gaz  4096 Jan  3 18:46 \u001b[34m\u001b[1mdata.bak\r\n\u001b(B\u001b[mdrwxrwxr-x 2 gaz gaz  4096 Dec 31 18:28 \u001b[34m\u001b[1mlog\r\n\u001b(B\u001b[m-rw-rw-r-- 1 gaz gaz  3176 Jan  3 19:02 Makefile\r\n-rw-rw-r-- 1 gaz gaz  2550 Jan  1 07:28 README.md\r\ndrwxrwxr-x 2 gaz gaz  4096 Jan  3 19:02 \u001b[34m\u001b[1mscripts\r\n\u001b(B\u001b[m"]
[2.398062, "o", "\u001b[?2004h"]
[2.398208, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ "]
[2.398357, "o", "\u001b[?25l\u001b[?12l\u001b[?25h"]
[4.318707, "o", "v"]
[4.427475, "o", "i"]
[4.508825, "o", "m"]
[4.589466, "o", " "]
[4.845888, "o", "M"]
[5.215748, "o", "akefile "]
[5.627848, "o", "\r\n\u001b[?2004l"]
[5.656656, "o", "\u001b[?25l\u001b[H\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[?12l\u001b[?25h\u001b[H\u001b[?2004h"]
[5.656924, "o", "\u001b[1;29r\u001b[29S\u001b[29;1H\"Makefile\"\u001b[1;30r\u001b[29;11H\u001b[?25l 71L, 3176B"]
[5.659418, "o", "\u001b[2;1Hâ–½\r  \r\n           \u001b[H"]
[5.661309, "o", "\u001b[36m# So we can actually have some persistence\r\n\u001b[1m.ONESHELL:\u001b(B\u001b[m\u001b[K\r\n\u001b[36m\u001b[1m.SHELLFLAGS \u001b(B\u001b[m:= -c -e\u001b[K\u001b[5;1H\u001b[36m\u001b[1mMAX_PACKAGES\u001b(B\u001b[m=15000\r\n\u001b[36m\u001b[1mPACKAGE_BLACKLIST\u001b(B\u001b[m=^pcp\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^mythexport\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^prewikka\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^slapd\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^mailman3-web\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^freedombox\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^kubuntu-installer-prompt\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^runit\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^amazon-ec2-net-utils\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^xemacs21-nomule\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^uvtool-libvirt\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^epoptes\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^namazu2\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^sympa\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^firebuild\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^epic4\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^epic5\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^initramfs-tools\u001b[36m\u001b[1m$$\u001b(B\u001b[m|^linux-image-6.8.0-1009-xilinx|\u001b[36m\u001b[1m$$\u001b(B\u001b[m^sympa\u001b[36m\u001b[1m$$\u001b[10;1Hall:\r\n\u001b(B\u001b[m\u001b[35m    @\u001b[38;5;130mbash -c \"touch ./data/*\"\r\n\u001b[35m    @\u001b[36m\u001b[1m$(MAKE)\u001b(B\u001b[m\u001b[38;5;130m data/04.run-help-extractor\r\n    \u001b[36m# finished? really? give yourself a pat on the mouth\u001b[15;1H## Step 1a: List default binaries installed in Ubuntu.\r\n\u001b[1mdata/01a.ubuntu-bin:\u001b(B\u001b[m scripts/01a.standard-binaries.sh\r\n\u001b[35m    @\u001b[38;5;130mecho \"01 - Getting standard binary names\"\r\n\u001b[35m    @\u001b[38;5;130m./scripts/01a.standard-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\r\n\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[21;1H\u001b[36m## Step 1b: List all possible Ubuntu binaries from all available packages\r\n\u001b[1mdata/01b.ubuntu-binaries-and-packages:\u001b(B\u001b[m scripts/01b.all-ubuntu-binaries.sh\r\n\u001b[35m    @\u001b[38;5;130mecho \"01 - Getting all possible binary names\"\r\n\u001b[35m    @\u001b[38;5;130m./scripts/01b.all-ubuntu-binaries.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\r\n\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[27;1H\u001b[36m## Step 1 final: combine the outputs into a list of binaries.\r\n\u001b[1mdata/01.binaries:\u001b(B\u001b[m data/01b.ubuntu-binaries-and-packages data/01a.ubuntu-bin scripts/01c.combine.sh\u001b[29;107H1,1\u001b[11CTop\u001b[H\u001b[?12l\u001b[?25h"]
[5.844646, "o", "\u001b[?25l\u001b[30m\u001b[44m\u001b[30d[0] 0:sudo- 1:vim*                                                                   \"gaz@orin: ~/src/uh-ha\" 19:03 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;1H"]
[6.486835, "o", "\u001b[29;107H2\u001b[2;1H"]
[6.982181, "o", "\u001b[29;107H3\u001b[3;1H"]
[7.009083, "o", "\u001b[29;107H4,0-1\u001b[4;1H"]
[7.030661, "o", "\u001b[29;107H5,1  \u001b[5;1H"]
[7.069681, "o", "\u001b[29;107H6\u001b[6;1H"]
[7.090386, "o", "\u001b[29;107H7,0-1\u001b[9;1H"]
[7.111259, "o", "\u001b[29;107H8,1  \u001b[10;1H"]
[7.150927, "o", "\u001b[29;107H9,1-4\u001b[11;4H"]
[7.193148, "o", "\u001b[29;107H10,1-4\u001b[12;4H"]
[7.212327, "o", "\u001b[29;108H1\u001b[13;4H"]
[7.23288, "o", "\u001b[29;108H2,0-1\u001b[14;1H"]
[7.275247, "o", "\u001b[29;108H3,1  \u001b[15;1H"]
[7.295118, "o", "\u001b[29;108H4\u001b[16;1H"]
[7.338069, "o", "\u001b[29;108H5,1-4\u001b[17;4H"]
[7.356918, "o", "\u001b[29;108H6\u001b[18;4H"]
[7.396837, "o", "\u001b[29;108H7\u001b[19;4H"]
[7.417325, "o", "\u001b[29;108H8,0-1\u001b[20;1H"]
[7.457294, "o", "\u001b[29;108H9,1  \u001b[21;1H"]
[7.477041, "o", "\u001b[29;107H20\u001b[22;1H"]
[7.519651, "o", "\u001b[29;108H1,1-4\u001b[23;4H"]
[9.187872, "o", "\u001b[29;108H2\u001b[24;4H"]
[9.701174, "o", "\u001b[29;108H3\u001b[25;4H"]
[9.706967, "o", "\u001b[29;108H4,0-1\u001b[26;1H"]
[9.727686, "o", "\u001b[29;108H5,1  \u001b[27;1H"]
[9.771033, "o", "\u001b[29;108H6\u001b[28;1H"]
[9.790704, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mecho \"01 - Combining the binary lists\"\u001b[39m\u001b[29;106H\u001b[1K\u001b[C27,1-4\u001b[9X\u001b[9C2%\u001b[K\u001b[1;30r\u001b[28;4H"]
[9.833412, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130m./scripts/01c.combine.sh > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\"\u001b[29;107H\u001b[39m28,1-4\u001b[9X\u001b[9C4%\u001b[K\u001b[1;30r\u001b[28;4H"]
[10.055369, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mmv \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[29;107H\u001b[39m29,1-4\u001b[9X\u001b[9C6%\u001b[K\u001b[1;30r\u001b[28;4H"]
[10.26989, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[29;107H30,0-1\u001b[9X\u001b[9C8%\u001b[K\u001b[1;30r\u001b[28;1H"]
[10.427005, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[36m## Step 2: Use LLM to rank the binaries in popularity order.\u001b[29;107H\u001b[39m31,1\u001b[10X\u001b[10C11%\u001b[K\u001b[1;30r\u001b[28;1H"]
[10.57731, "o", "\u001b[1;28r\u001b[1;1H\u001b[3M\u001b[26;1H\u001b[36m\u001b[1mdata/02a.popularity-contest:\u001b(B\u001b[m data/01.binaries\r\n\u001b[35m    @\u001b[38;5;130mecho \"02 - Running popularity contest\"\r\n\u001b[35m    @\u001b[38;5;130mtimestamp=\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130m(date -u +\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mY-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mm-\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130md_\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mH\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mM\u001b[36m\u001b[1m%\u001b(B\u001b[m\u001b[38;5;130mS)\u001b[29;107H\u001b[39m32,1\u001b[10X\u001b[10C13%\u001b[K\u001b[1;30r\u001b[26;1H"]
[10.719411, "o", "\u001b[29;108H3,1-4\u001b[27;4H"]
[10.860215, "o", "\u001b[29;108H4\u001b[28;4H"]
[11.004303, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130m./scripts/02.popularity_contest.py data/01.binaries log > \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\"\u001b[29;107H\u001b[39m35,1-4\u001b[8X\u001b[8C16%\u001b[K\u001b[1;30r\u001b[28;4H"]
[11.152737, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[35m    @\u001b[38;5;130mcp \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m.\u001b[36m\u001b[1m$$\u001b(B\u001b[m\u001b[38;5;130mtimestamp.tmp\" \"\u001b[36m\u001b[1m$@\u001b(B\u001b[m\u001b[38;5;130m\"\u001b[29;107H\u001b[39m36,1-4\u001b[8X\u001b[8C18%\u001b[K\u001b[1;30r\u001b[28;4H"]
[11.32872, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[29;107H37,0-1\u001b[8X\u001b[8C20%\u001b[K\u001b[1;30r\u001b[28;1H"]
[11.602153, "o", "\u001b[29;108H6,1-4\u001b[27;4H"]
[11.78272, "o", "\u001b[29;108H5\u001b[26;4H"]
[12.02357, "o", "\u001b[29;110H2-5\u001b[26;5H"]
[12.52253, "o", "\u001b[29;110H3-6\u001b[26;6H"]
[12.545074, "o", "\u001b[29;110H4-7\u001b[26;7H"]
[12.564875, "o", "\u001b[29;110H5-8\u001b[26;8H"]
[12.607411, "o", "\u001b[29;110H6-9\u001b[26;9H"]
[12.626202, "o", "\u001b[29;110H7-10\u001b[26;10H"]
[12.666036, "o", "\u001b[29;110H8-11\u001b[26;11H"]
[12.68514, "o", "\u001b[29;110H9-12\u001b[26;12H"]
[12.726609, "o", "\u001b[29;110H10-13\u001b[26;13H"]
[12.747378, "o", "\u001b[29;111H1-14\u001b[26;14H"]
[12.788147, "o", "\u001b[29;111H2-15\u001b[26;15H"]
[12.807709, "o", "\u001b[29;111H3-16\u001b[26;16H"]
[12.847648, "o", "\u001b[29;111H4-17\u001b[26;17H"]
[12.868488, "o", "\u001b[29;111H5-18\u001b[26;18H"]
[12.910446, "o", "\u001b[29;111H6-19\u001b[26;19H"]
[12.930265, "o", "\u001b[29;111H7-20\u001b[26;20H"]
[12.950665, "o", "\u001b[29;111H8-21\u001b[26;21H"]
[12.990558, "o", "\u001b[29;111H9-22\u001b[26;22H"]
[13.010079, "o", "\u001b[29;110H20-23\u001b[26;23H"]
[13.050711, "o", "\u001b[29;111H1-24\u001b[26;24H"]
[13.072257, "o", "\u001b[29;111H2-25\u001b[26;25H"]
[13.113709, "o", "\u001b[29;111H3-26\u001b[26;26H"]
[13.133692, "o", "\u001b[29;111H4-27\u001b[26;27H"]
[13.17482, "o", "\u001b[29;111H5-28\u001b[26;28H"]
[13.194746, "o", "\u001b[29;111H6-29\u001b[26;29H"]
[13.235073, "o", "\u001b[29;111H7-30\u001b[26;30H"]
[13.255991, "o", "\u001b[29;111H8-31\u001b[26;31H"]
[13.299271, "o", "\u001b[29;111H9-32\u001b[26;32H"]
[13.317988, "o", "\u001b[29;110H30-33\u001b[26;33H"]
[13.358234, "o", "\u001b[29;111H1-34\u001b[26;34H"]
[13.379465, "o", "\u001b[29;111H2-35\u001b[26;35H"]
[13.422606, "o", "\u001b[29;111H3-36\u001b[26;36H"]
[13.441332, "o", "\u001b[29;111H4-37\u001b[26;37H"]
[13.481452, "o", "\u001b[29;111H5-38\u001b[26;38H"]
[13.50218, "o", "\u001b[29;111H6-39\u001b[26;39H"]
[16.294642, "o", "\u001b[29;1H:\u001b[105C\u001b[K\u001b[2G"]
[16.53734, "o", "q"]
[17.20694, "o", "!"]
[17.524108, "o", "\r"]
[17.527605, "o", "\u001b[?25l\u001b[?12l\u001b[?25h\u001b[?25l\u001b[?2004l"]
[17.52784, "o", "\u001b[K\u001b[11d\u001b[?12l\u001b[?25h"]
[17.528244, "o", "\u001b[?25l\u001b[H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ ls -l\u001b[K\r\ntotal 36\u001b[K\r\ndrwxrwxr-x 6 gaz gaz  4096 Jan  3 18:47 \u001b[34m\u001b[1mcasts\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 4 gaz gaz 12288 Jan  3 19:01 \u001b[34m\u001b[1mdata\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 4 gaz gaz  4096 Jan  3 18:46 \u001b[34m\u001b[1mdata.bak\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 2 gaz gaz  4096 Dec 31 18:28 \u001b[34m\u001b[1mlog\u001b(B\u001b[m\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  3176 Jan  3 19:02 Makefile\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  2550 Jan  1 07:28 README.md\u001b[K\r\ndrwxrwxr-x 2 gaz gaz  4096 Jan  3 19:02 \u001b[34m\u001b[1mscripts\u001b(B\u001b[m\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim Makefile \u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[?12l\u001b[?25h\u001b[11d"]
[17.529725, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[?2004h"]
[17.530066, "o", "\u001b[?25l\u001b[?12l\u001b[?25h"]
[17.806296, "o", "\u001b[?25l\u001b[30m\u001b[44m\u001b[30;1H[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:03 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[11;38H"]
[18.192784, "o", "v"]
[18.33359, "o", "i"]
[18.380693, "o", "m"]
[18.46206, "o", " "]
[18.616214, "o", "s"]
[18.706647, "o", "c"]
[18.932956, "o", "ripts/"]
[20.116694, "o", "0"]
[20.178501, "o", "2"]
[20.468119, "o", ".popularity_contest.py "]
[21.410768, "o", "\r\n\u001b[?2004l"]
[21.440518, "o", "\u001b[?25l\u001b[H\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[?12l\u001b[?25h\u001b[H\u001b[?2004h"]
[21.440841, "o", "\u001b[1;29r\u001b[29S\u001b[29;1H\"scripts/02.popularity_contest.py\"\u001b[1;30r\u001b[29;35H\u001b[?25l"]
[21.440924, "o", " 171L, 5794B"]
[21.444849, "o", "\u001b[2;1Hâ–½\r  \r\n           \u001b[H"]
[21.447444, "o", "\u001b[36m#!/usr/bin/env python3\u001b[39m\r\n\u001b[K\r\n\u001b[35mimport\u001b[39m argparse\u001b[K\r\n\u001b[35mimport\u001b[39m random\r\n\u001b[35mimport\u001b[39m requests\r\n\u001b[35mimport\u001b[39m sys\r\n\u001b[35mimport\u001b[39m json\r\n\u001b[35mimport\u001b[39m logging\u001b[10;1H\u001b[33mdef\u001b[39m \u001b[36m\u001b[1msetup_logger\u001b(B\u001b[m(log_dir):\r\n    logger = logging.getLogger(\u001b[38;5;130m\"binary_ranking\"\u001b[39m)\r\n    logger.setLevel(logging.DEBUG)\u001b[14;5H\u001b[36m# Stream handler for INFO level logs to console (stderr)\r\n\u001b[39m    info_handler = logging.StreamHandler(sys.stderr)\r\n    info_handler.setLevel(logging.INFO)  \u001b[36m# Only logs INFO and above\r\n\u001b[39m    info_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(levelname)s - %(message)s\"\u001b[39m)\r\n    info_handler.setFormatter(info_formatter)\r\n    logger.addHandler(info_handler)\u001b[21;5H\u001b[36m# File handler for DEBUG logs\r\n\u001b[39m    log_file = f\u001b[38;5;130m\"{log_dir}/binary_ranking_debug.log\"\r\n\u001b[39m    file_handler = logging.FileHandler(log_file)\r\n    file_handler.setLevel(logging.DEBUG)  \u001b[36m# Logs all levels (DEBUG and above)\r\n\u001b[39m    file_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(levelname)s - %(message)s\"\u001b[39m)\r\n    file_handler.setFormatter(file_formatter)\r\n    logger.addHandler(file_handler)\u001b[29;107H1,1\u001b[11CTop\u001b[H\u001b[?12l\u001b[?25h"]
[21.911819, "o", "\u001b[?25l\u001b[30m\u001b[44m\u001b[30d[0] 0:sudo- 1:vim*                                                                   \"gaz@orin: ~/src/uh-ha\" 19:03 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;1H"]
[23.754619, "o", "\u001b[?25l\u001b[62Câ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[1;62H\u001b[1K\u001b[36m\u001b[H#!/usr/bin/env python3\u001b[39m\u001b[2;62H\u001b[1K\n\u001b[1K\u001b[35m\rimport\u001b[39m argparse\u001b[4;62H\u001b[1K\u001b[35m\rimport\u001b[39m random\u001b[5;62H\u001b[1K\u001b[35m\rimport\u001b[39m requests\u001b[6;62H\u001b[1K\u001b[35m\rimport\u001b[39m sys\u001b[7;62H\u001b[1K\u001b[35m\rimport\u001b[39m json\u001b[8;62H\u001b[1K\u001b[35m\rimport\u001b[39m logging\u001b[9;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1msetup_logger\u001b(B\u001b[m(log_dir):\r\n    logger = logging.getLogger(\u001b[38;5;130m\"binary_ranking\"\u001b[39m)\u001b[14X\r\n    logger.setLevel(logging.DEBUG)\u001b[28X\u001b[13;62H\u001b[1K\u001b[14;4H\u001b[1K\u001b[36m\u001b[C# Stream handler for INFO level logs to console (stderr)\u001b[39m\u001b[2X\r\n    info_handler = logging.StreamHandler(sys.stderr)\u001b[10X\r\n    info_handler.setLevel(logging.INFO)  \u001b[36m# Only logs INFO and \u001b[39m\r\n    info_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\r\n    info_handler.setFormatter(info_formatter)\u001b[17X\r\n    logger.addHandler(info_handler)\u001b[27X\u001b[20;62H\u001b[1K\u001b[21;4H\u001b[1K\u001b[36m\u001b[C# File handler for DEBUG logs\u001b[39m\u001b[29X\r\n    log_file = f\u001b[38;5;130m\"{log_dir}/binary_ranking_debug.log\"\u001b[39m\u001b[10X\r\n    file_handler = logging.FileHandler(log_file)\u001b[14X\r\n    file_handler.setLevel(logging.DEBUG)  \u001b[36m# Logs all levels (D\u001b[39m\r\n    file_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\r\n    file_handler.setFormatter(file_formatter)\u001b[17X\r\n    logger.addHandler(file_handler)\u001b[27X\u001b[28;62H\u001b[1K\r\n\"scripts/02.popularity_contest.py\" 171L, 5794B\u001b[16X\u001b[1;64H\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:vim*                                                                                    \"orin\" 19:03 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;64H\u001b[?2004l"]
[23.754902, "o", "\u001b[?25l\bâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                                   \"orin\" 19:03 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;64H"]
[23.756652, "o", "\u001b[1;29r\u001b[1;62H\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\u001b[H\u001b[36m#!/usr/bin/env python3\u001b[3;1H\u001b[35mimport\u001b[39m argparse\r\n\u001b[35mimport\u001b[39m random\r\n\u001b[35mimport\u001b[39m requests\r\n\u001b[35mimport\u001b[39m sys\r\n\u001b[35mimport\u001b[39m json\r\n\u001b[35mimport\u001b[39m logging\u001b[10;1H\u001b[33mdef\u001b[39m \u001b[36m\u001b[1msetup_logger\u001b(B\u001b[m(log_dir):\r\n    logger = logging.getLogger(\u001b[38;5;130m\"binary_ranking\"\u001b[39m)\r\n    logger.setLevel(logging.DEBUG)\u001b[14;5H\u001b[36m# Stream handler for INFO level logs to console (stderr)\r\n\u001b[39m    info_handler = logging.StreamHandler(sys.stderr)\r\n    info_handler.setLevel(logging.INFO)  \u001b[36m# Only logs INFO and \r\nabove\r\n\u001b[39m    info_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\r\name)s - %(message)s\"\u001b[39m)\r\n    info_handler.setFormatter(info_formatter)\r\n    logger.addHandler(info_handler)\u001b[23;5H\u001b[36m# File handler for DEBUG logs\r\n\u001b[39m    log_file = f\u001b[38;5;130m\"{log_dir}/binary_ranking_debug.log\"\r\n\u001b[39m    file_handler = logging.FileHandler(log_file)\r\n    file_handler.setLevel(logging.DEBUG)  \u001b[36m# Logs all levels (D\r\nEBUG and above)\r\n\u001b[34m\u001b[1m@                                                             \u001b[29;45H\u001b(B\u001b[m1,1\u001b[11CTop\u001b[1;30r\u001b[1;64H"]
[23.841722, "o", "\u001b[?2004h"]
[23.842034, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ "]
[23.842234, "o", "\u001b[?25l\u001b[21Dâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                            \"gaz@orin: ~\" 19:03 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;84H"]
[24.912733, "o", "\u001b[?25l\u001b[21D\u001b[34mâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[39mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:03 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;1H"]
[24.913402, "o", "\u001b[?25l\u001b[62C\u001b[34mâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[39mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:vim*                                                                   \"gaz@orin: ~/src/uh-ha\" 19:03 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;1H"]
[25.161774, "o", "\u0007"]
[25.181726, "o", "\u001b[29;45H2,0-1\u001b[2;1H"]
[25.697108, "o", "\u001b[29;45H3,1  \u001b[3;1H"]
[25.701952, "o", "\u001b[29;45H4\u001b[4;1H"]
[25.745178, "o", "\u001b[29;45H5\u001b[5;1H"]
[25.763497, "o", "\u001b[29;45H6\u001b[6;1H"]
[25.803331, "o", "\u001b[29;45H7\u001b[7;1H"]
[25.824796, "o", "\u001b[29;45H8\u001b[8;1H"]
[25.862819, "o", "\u001b[29;45H9,0-1\u001b[9;1H"]
[25.882548, "o", "\u001b[29;45H10,1 \u001b[10;1H"]
[25.923, "o", "\u001b[29;46H1\u001b[11;1H"]
[25.942356, "o", "\u001b[29;46H2\u001b[12;1H"]
[25.982754, "o", "\u001b[29;46H3,0-1\u001b[13;1H"]
[26.001815, "o", "\u001b[29;46H4,1  \u001b[14;1H"]
[26.042041, "o", "\u001b[29;46H5\u001b[15;1H"]
[26.062118, "o", "\u001b[29;46H6\u001b[16;1H"]
[26.103045, "o", "\u001b[29;46H7\u001b[18;1H"]
[26.122418, "o", "\u001b[29;46H8\u001b[20;1H"]
[26.162825, "o", "\u001b[29;46H9\u001b[21;1H"]
[26.181991, "o", "\u001b[29;45H20,0-1\u001b[22;1H"]
[26.223853, "o", "\u001b[29;46H1,1  \u001b[23;1H"]
[26.243308, "o", "\u001b[29;46H2\u001b[24;1H"]
[26.284617, "o", "\u001b[29;46H3\u001b[25;1H"]
[26.30391, "o", "\u001b[29;46H4\u001b[26;1H"]
[26.345993, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\n\u001b[1K\u001b[35m\rimport\u001b[39m argparse\u001b[3;62H\u001b[1K\u001b[35m\rimport\u001b[39m random\u001b[4;62H\u001b[1K\u001b[35m\rimport\u001b[39m requests\u001b[5;62H\u001b[1K\u001b[35m\rimport\u001b[39m sys\u001b[6;62H\u001b[1K\u001b[35m\rimport\u001b[39m json\u001b[7;62H\u001b[1K\u001b[35m\rimport\u001b[39m logging\u001b[8;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1msetup_logger\u001b(B\u001b[m(log_dir):\r\n    logger = logging.getLogger(\u001b[38;5;130m\"binary_ranking\"\u001b[39m)\u001b[14X\r\n    logger.setLevel(logging.DEBUG)\u001b[28X\u001b[12;62H\u001b[1K\u001b[13;4H\u001b[1K\u001b[36m\u001b[C# Stream handler for INFO level logs to console (stderr)\u001b[39m\u001b[2X\r\n    info_handler = logging.StreamHandler(sys.stderr)\u001b[10X\r\n    info_handler.setLevel(logging.INFO)  \u001b[36m# Only logs INFO and \u001b[39m\u001b[16;62H\u001b[1K\u001b[36m\rabove\u001b[39m\r\n    info_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[18;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\r\n    info_handler.setFormatter(info_formatter)\u001b[17X\r\n    logger.addHandler(info_handler)\u001b[27X\u001b[21;62H\u001b[1K\u001b[22;4H\u001b[1K\u001b[36m\u001b[C# File handler for DEBUG logs\u001b[39m\u001b[29X\r\n    log_file = f\u001b[38;5;130m\"{log_dir}/binary_ranking_debug.log\"\u001b[39m\u001b[10X\r\n    file_handler = logging.FileHandler(log_file)\u001b[14X\r\n    file_handler.setLevel(logging.DEBUG)  \u001b[36m# Logs all levels (D\u001b[39m\u001b[26;62H\u001b[1K\u001b[36m\rEBUG and above)\u001b[39m\r\n    file_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[28;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\u001b[29;44H\u001b[1K\u001b[C25,1\u001b[11X\u001b[11C0%\u001b[1X\u001b[?12l\u001b[?25h\u001b[27;1H"]
[26.364905, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[35m\u001b[Himport\u001b[39m argparse\u001b[2;62H\u001b[1K\u001b[35m\rimport\u001b[39m random\u001b[3;62H\u001b[1K\u001b[35m\rimport\u001b[39m requests\u001b[4;62H\u001b[1K\u001b[35m\rimport\u001b[39m sys\u001b[5;62H\u001b[1K\u001b[35m\rimport\u001b[39m json\u001b[6;62H\u001b[1K\u001b[35m\rimport\u001b[39m logging\u001b[7;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1msetup_logger\u001b(B\u001b[m(log_dir):\r\n    logger = logging.getLogger(\u001b[38;5;130m\"binary_ranking\"\u001b[39m)\u001b[14X\r\n    logger.setLevel(logging.DEBUG)\u001b[28X\u001b[11;62H\u001b[1K\u001b[12;4H\u001b[1K\u001b[36m\u001b[C# Stream handler for INFO level logs to console (stderr)\u001b[39m\u001b[2X\r\n    info_handler = logging.StreamHandler(sys.stderr)\u001b[10X\r\n    info_handler.setLevel(logging.INFO)  \u001b[36m# Only logs INFO and \u001b[39m\u001b[15;62H\u001b[1K\u001b[36m\rabove\u001b[39m\r\n    info_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[17;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\r\n    info_handler.setFormatter(info_formatter)\u001b[17X\r\n    logger.addHandler(info_handler)\u001b[27X\u001b[20;62H\u001b[1K\u001b[21;4H\u001b[1K\u001b[36m\u001b[C# File handler for DEBUG logs\u001b[39m\u001b[29X\r\n    log_file = f\u001b[38;5;130m\"{log_dir}/binary_ranking_debug.log\"\u001b[39m\u001b[10X\r\n    file_handler = logging.FileHandler(log_file)\u001b[14X\r\n    file_handler.setLevel(logging.DEBUG)  \u001b[36m# Logs all levels (D\u001b[39m\u001b[25;62H\u001b[1K\u001b[36m\rEBUG and above)\u001b[39m\r\n    file_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[27;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\u001b[28;4H\u001b[1K\u001b[Cfile_handler.setFormatter(file_formatter)\u001b[17X\u001b[29;44H\u001b[1K\u001b[C26,1\u001b[11X\u001b[11C1%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[26.405812, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[35m\u001b[Himport\u001b[39m random\u001b[2;62H\u001b[1K\u001b[35m\rimport\u001b[39m requests\u001b[3;62H\u001b[1K\u001b[35m\rimport\u001b[39m sys\u001b[4;62H\u001b[1K\u001b[35m\rimport\u001b[39m json\u001b[5;62H\u001b[1K\u001b[35m\rimport\u001b[39m logging\u001b[6;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1msetup_logger\u001b(B\u001b[m(log_dir):\r\n    logger = logging.getLogger(\u001b[38;5;130m\"binary_ranking\"\u001b[39m)\u001b[14X\r\n    logger.setLevel(logging.DEBUG)\u001b[28X\u001b[10;62H\u001b[1K\u001b[11;4H\u001b[1K\u001b[36m\u001b[C# Stream handler for INFO level logs to console (stderr)\u001b[39m\u001b[2X\r\n    info_handler = logging.StreamHandler(sys.stderr)\u001b[10X\r\n    info_handler.setLevel(logging.INFO)  \u001b[36m# Only logs INFO and \u001b[39m\u001b[14;62H\u001b[1K\u001b[36m\rabove\u001b[39m\r\n    info_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[16;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\r\n    info_handler.setFormatter(info_formatter)\u001b[17X\r\n    logger.addHandler(info_handler)\u001b[27X\u001b[19;62H\u001b[1K\u001b[20;4H\u001b[1K\u001b[36m\u001b[C# File handler for DEBUG logs\u001b[39m\u001b[29X\r\n    log_file = f\u001b[38;5;130m\"{log_dir}/binary_ranking_debug.log\"\u001b[39m\u001b[10X\r\n    file_handler = logging.FileHandler(log_file)\u001b[14X\r\n    file_handler.setLevel(logging.DEBUG)  \u001b[36m# Logs all levels (D\u001b[39m\u001b[24;62H\u001b[1K\u001b[36m\rEBUG and above)\u001b[39m\r\n    file_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[26;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\u001b[27;4H\u001b[1K\u001b[Cfile_handler.setFormatter(file_formatter)\u001b[17X\u001b[28;4H\u001b[1K\u001b[Clogger.addHandler(file_handler)\u001b[27X\u001b[29;44H\u001b[1K\u001b[C27,1\u001b[11X\u001b[11C2%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[26.42537, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[35m\u001b[Himport\u001b[39m requests\u001b[2;62H\u001b[1K\u001b[35m\rimport\u001b[39m sys\u001b[3;62H\u001b[1K\u001b[35m\rimport\u001b[39m json\u001b[4;62H\u001b[1K\u001b[35m\rimport\u001b[39m logging\u001b[5;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1msetup_logger\u001b(B\u001b[m(log_dir):\r\n    logger = logging.getLogger(\u001b[38;5;130m\"binary_ranking\"\u001b[39m)\u001b[14X\r\n    logger.setLevel(logging.DEBUG)\u001b[28X\u001b[9;62H\u001b[1K\u001b[10;4H\u001b[1K\u001b[36m\u001b[C# Stream handler for INFO level logs to console (stderr)\u001b[39m\u001b[2X\r\n    info_handler = logging.StreamHandler(sys.stderr)\u001b[10X\r\n    info_handler.setLevel(logging.INFO)  \u001b[36m# Only logs INFO and \u001b[39m\u001b[13;62H\u001b[1K\u001b[36m\rabove\u001b[39m\r\n    info_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[15;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\r\n    info_handler.setFormatter(info_formatter)\u001b[17X\r\n    logger.addHandler(info_handler)\u001b[27X\u001b[18;62H\u001b[1K\u001b[19;4H\u001b[1K\u001b[36m\u001b[C# File handler for DEBUG logs\u001b[39m\u001b[29X\r\n    log_file = f\u001b[38;5;130m\"{log_dir}/binary_ranking_debug.log\"\u001b[39m\u001b[10X\r\n    file_handler = logging.FileHandler(log_file)\u001b[14X\r\n    file_handler.setLevel(logging.DEBUG)  \u001b[36m# Logs all levels (D\u001b[39m\u001b[23;62H\u001b[1K\u001b[36m\rEBUG and above)\u001b[39m\r\n    file_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[25;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\u001b[26;4H\u001b[1K\u001b[Cfile_handler.setFormatter(file_formatter)\u001b[17X\u001b[27;4H\u001b[1K\u001b[Clogger.addHandler(file_handler)\u001b[27X\u001b[28;62H\u001b[1K\u001b[29;44H\u001b[1K\u001b[C28,0-1\u001b[9X\u001b[9C2%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[26.466593, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[35m\u001b[Himport\u001b[39m sys\u001b[2;62H\u001b[1K\u001b[35m\rimport\u001b[39m json\u001b[3;62H\u001b[1K\u001b[35m\rimport\u001b[39m logging\u001b[4;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1msetup_logger\u001b(B\u001b[m(log_dir):\r\n    logger = logging.getLogger(\u001b[38;5;130m\"binary_ranking\"\u001b[39m)\u001b[14X\r\n    logger.setLevel(logging.DEBUG)\u001b[28X\u001b[8;62H\u001b[1K\u001b[9;4H\u001b[1K\u001b[36m\u001b[C# Stream handler for INFO level logs to console (stderr)\u001b[39m\u001b[2X\r\n    info_handler = logging.StreamHandler(sys.stderr)\u001b[10X\r\n    info_handler.setLevel(logging.INFO)  \u001b[36m# Only logs INFO and \u001b[39m\u001b[12;62H\u001b[1K\u001b[36m\rabove\u001b[39m\r\n    info_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[14;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\r\n    info_handler.setFormatter(info_formatter)\u001b[17X\r\n    logger.addHandler(info_handler)\u001b[27X\u001b[17;62H\u001b[1K\u001b[18;4H\u001b[1K\u001b[36m\u001b[C# File handler for DEBUG logs\u001b[39m\u001b[29X\r\n    log_file = f\u001b[38;5;130m\"{log_dir}/binary_ranking_debug.log\"\u001b[39m\u001b[10X\r\n    file_handler = logging.FileHandler(log_file)\u001b[14X\r\n    file_handler.setLevel(logging.DEBUG)  \u001b[36m# Logs all levels (D\u001b[39m\u001b[22;62H\u001b[1K\u001b[36m\rEBUG and above)\u001b[39m\r\n    file_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[24;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\u001b[25;4H\u001b[1K\u001b[Cfile_handler.setFormatter(file_formatter)\u001b[17X\u001b[26;4H\u001b[1K\u001b[Clogger.addHandler(file_handler)\u001b[27X\u001b[27;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m logger\u001b[29;44H\u001b[1K\u001b[C29,1\u001b[11X\u001b[11C3%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[26.486088, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[35m\u001b[Himport\u001b[39m json\u001b[2;62H\u001b[1K\u001b[35m\rimport\u001b[39m logging\u001b[3;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1msetup_logger\u001b(B\u001b[m(log_dir):\r\n    logger = logging.getLogger(\u001b[38;5;130m\"binary_ranking\"\u001b[39m)\u001b[14X\r\n    logger.setLevel(logging.DEBUG)\u001b[28X\u001b[7;62H\u001b[1K\u001b[8;4H\u001b[1K\u001b[36m\u001b[C# Stream handler for INFO level logs to console (stderr)\u001b[39m\u001b[2X\r\n    info_handler = logging.StreamHandler(sys.stderr)\u001b[10X\r\n    info_handler.setLevel(logging.INFO)  \u001b[36m# Only logs INFO and \u001b[39m\u001b[11;62H\u001b[1K\u001b[36m\rabove\u001b[39m\r\n    info_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[13;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\r\n    info_handler.setFormatter(info_formatter)\u001b[17X\r\n    logger.addHandler(info_handler)\u001b[27X\u001b[16;62H\u001b[1K\u001b[17;4H\u001b[1K\u001b[36m\u001b[C# File handler for DEBUG logs\u001b[39m\u001b[29X\r\n    log_file = f\u001b[38;5;130m\"{log_dir}/binary_ranking_debug.log\"\u001b[39m\u001b[10X\r\n    file_handler = logging.FileHandler(log_file)\u001b[14X\r\n    file_handler.setLevel(logging.DEBUG)  \u001b[36m# Logs all levels (D\u001b[39m\u001b[21;62H\u001b[1K\u001b[36m\rEBUG and above)\u001b[39m\r\n    file_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[23;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\u001b[24;4H\u001b[1K\u001b[Cfile_handler.setFormatter(file_formatter)\u001b[17X\u001b[25;4H\u001b[1K\u001b[Clogger.addHandler(file_handler)\u001b[27X\u001b[26;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m logger\u001b[28;62H\u001b[1K\u001b[29;44H\u001b[1K\u001b[C30,0-1\u001b[9X\u001b[9C4%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[26.526844, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[35m\u001b[Himport\u001b[39m logging\u001b[2;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1msetup_logger\u001b(B\u001b[m(log_dir):\r\n    logger = logging.getLogger(\u001b[38;5;130m\"binary_ranking\"\u001b[39m)\u001b[14X\r\n    logger.setLevel(logging.DEBUG)\u001b[28X\u001b[6;62H\u001b[1K\u001b[7;4H\u001b[1K\u001b[36m\u001b[C# Stream handler for INFO level logs to console (stderr)\u001b[39m\u001b[2X\r\n    info_handler = logging.StreamHandler(sys.stderr)\u001b[10X\r\n    info_handler.setLevel(logging.INFO)  \u001b[36m# Only logs INFO and \u001b[39m\u001b[10;62H\u001b[1K\u001b[36m\rabove\u001b[39m\r\n    info_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[12;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\r\n    info_handler.setFormatter(info_formatter)\u001b[17X\r\n    logger.addHandler(info_handler)\u001b[27X\u001b[15;62H\u001b[1K\u001b[16;4H\u001b[1K\u001b[36m\u001b[C# File handler for DEBUG logs\u001b[39m\u001b[29X\r\n    log_file = f\u001b[38;5;130m\"{log_dir}/binary_ranking_debug.log\"\u001b[39m\u001b[10X\r\n    file_handler = logging.FileHandler(log_file)\u001b[14X\r\n    file_handler.setLevel(logging.DEBUG)  \u001b[36m# Logs all levels (D\u001b[39m\u001b[20;62H\u001b[1K\u001b[36m\rEBUG and above)\u001b[39m\r\n    file_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[22;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\u001b[23;4H\u001b[1K\u001b[Cfile_handler.setFormatter(file_formatter)\u001b[17X\u001b[24;4H\u001b[1K\u001b[Clogger.addHandler(file_handler)\u001b[27X\u001b[25;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m logger\u001b[27;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_lines\u001b(B\u001b[m(lines):\u001b[29;44H\u001b[1K\u001b[C31,1\u001b[11X\u001b[11C4%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[26.547896, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1msetup_logger\u001b(B\u001b[m(log_dir):\r\n    logger = logging.getLogger(\u001b[38;5;130m\"binary_ranking\"\u001b[39m)\u001b[14X\r\n    logger.setLevel(logging.DEBUG)\u001b[28X\u001b[5;62H\u001b[1K\u001b[6;4H\u001b[1K\u001b[36m\u001b[C# Stream handler for INFO level logs to console (stderr)\u001b[39m\u001b[2X\r\n    info_handler = logging.StreamHandler(sys.stderr)\u001b[10X\r\n    info_handler.setLevel(logging.INFO)  \u001b[36m# Only logs INFO and \u001b[39m\u001b[9;62H\u001b[1K\u001b[36m\rabove\u001b[39m\r\n    info_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[11;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\r\n    info_handler.setFormatter(info_formatter)\u001b[17X\r\n    logger.addHandler(info_handler)\u001b[27X\u001b[14;62H\u001b[1K\u001b[15;4H\u001b[1K\u001b[36m\u001b[C# File handler for DEBUG logs\u001b[39m\u001b[29X\r\n    log_file = f\u001b[38;5;130m\"{log_dir}/binary_ranking_debug.log\"\u001b[39m\u001b[10X\r\n    file_handler = logging.FileHandler(log_file)\u001b[14X\r\n    file_handler.setLevel(logging.DEBUG)  \u001b[36m# Logs all levels (D\u001b[39m\u001b[19;62H\u001b[1K\u001b[36m\rEBUG and above)\u001b[39m\r\n    file_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[21;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\u001b[22;4H\u001b[1K\u001b[Cfile_handler.setFormatter(file_formatter)\u001b[17X\u001b[23;4H\u001b[1K\u001b[Clogger.addHandler(file_handler)\u001b[27X\u001b[24;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m logger\u001b[26;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_lines\u001b(B\u001b[m(lines):\u001b[28;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cbinary_dict = {}\u001b[29;44H\u001b[1K\u001b[C32,1\u001b[11X\u001b[11C5%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[26.586223, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[33m\u001b[Hdef\u001b[39m \u001b[36m\u001b[1msetup_logger\u001b(B\u001b[m(log_dir):\r\n    logger = logging.getLogger(\u001b[38;5;130m\"binary_ranking\"\u001b[39m)\u001b[14X\r\n    logger.setLevel(logging.DEBUG)\u001b[28X\u001b[4;62H\u001b[1K\u001b[5;4H\u001b[1K\u001b[36m\u001b[C# Stream handler for INFO level logs to console (stderr)\u001b[39m\u001b[2X\r\n    info_handler = logging.StreamHandler(sys.stderr)\u001b[10X\r\n    info_handler.setLevel(logging.INFO)  \u001b[36m# Only logs INFO and \u001b[39m\u001b[8;62H\u001b[1K\u001b[36m\rabove\u001b[39m\r\n    info_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[10;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\r\n    info_handler.setFormatter(info_formatter)\u001b[17X\r\n    logger.addHandler(info_handler)\u001b[27X\u001b[13;62H\u001b[1K\u001b[14;4H\u001b[1K\u001b[36m\u001b[C# File handler for DEBUG logs\u001b[39m\u001b[29X\r\n    log_file = f\u001b[38;5;130m\"{log_dir}/binary_ranking_debug.log\"\u001b[39m\u001b[10X\r\n    file_handler = logging.FileHandler(log_file)\u001b[14X\r\n    file_handler.setLevel(logging.DEBUG)  \u001b[36m# Logs all levels (D\u001b[39m\u001b[18;62H\u001b[1K\u001b[36m\rEBUG and above)\u001b[39m\r\n    file_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[20;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\u001b[21;4H\u001b[1K\u001b[Cfile_handler.setFormatter(file_formatter)\u001b[17X\u001b[22;4H\u001b[1K\u001b[Clogger.addHandler(file_handler)\u001b[27X\u001b[23;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m logger\u001b[25;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_lines\u001b(B\u001b[m(lines):\u001b[27;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cbinary_dict = {}\u001b[28;62H\u001b[1K\u001b[29;44H\u001b[1K\u001b[C33,0-1\u001b[9X\u001b[9C6%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[26.606088, "o", "\u001b[?25l\u001b[H    logger = logging.getLogger(\u001b[38;5;130m\"binary_ranking\"\u001b[39m)\u001b[14X\r\n    logger.setLevel(logging.DEBUG)\u001b[28X\u001b[3;62H\u001b[1K\u001b[4;4H\u001b[1K\u001b[36m\u001b[C# Stream handler for INFO level logs to console (stderr)\u001b[39m\u001b[2X\r\n    info_handler = logging.StreamHandler(sys.stderr)\u001b[10X\r\n    info_handler.setLevel(logging.INFO)  \u001b[36m# Only logs INFO and \u001b[39m\u001b[7;62H\u001b[1K\u001b[36m\rabove\u001b[39m\r\n    info_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[9;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\r\n    info_handler.setFormatter(info_formatter)\u001b[17X\r\n    logger.addHandler(info_handler)\u001b[27X\u001b[12;62H\u001b[1K\u001b[13;4H\u001b[1K\u001b[36m\u001b[C# File handler for DEBUG logs\u001b[39m\u001b[29X\r\n    log_file = f\u001b[38;5;130m\"{log_dir}/binary_ranking_debug.log\"\u001b[39m\u001b[10X\r\n    file_handler = logging.FileHandler(log_file)\u001b[14X\r\n    file_handler.setLevel(logging.DEBUG)  \u001b[36m# Logs all levels (D\u001b[39m\u001b[17;62H\u001b[1K\u001b[36m\rEBUG and above)\u001b[39m\r\n    file_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[19;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\u001b[20;4H\u001b[1K\u001b[Cfile_handler.setFormatter(file_formatter)\u001b[17X\u001b[21;4H\u001b[1K\u001b[Clogger.addHandler(file_handler)\u001b[27X\u001b[22;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m logger\u001b[24;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_lines\u001b(B\u001b[m(lines):\u001b[26;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cbinary_dict = {}\u001b[27;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m lines:\u001b[29;44H\u001b[1K\u001b[C34,1\u001b[11X\u001b[11C6%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[26.647778, "o", "\u001b[?25l\u001b[H    logger.setLevel(logging.DEBUG)\u001b[28X\u001b[2;62H\u001b[1K\u001b[3;4H\u001b[1K\u001b[36m\u001b[C# Stream handler for INFO level logs to console (stderr)\u001b[39m\u001b[2X\r\n    info_handler = logging.StreamHandler(sys.stderr)\u001b[10X\r\n    info_handler.setLevel(logging.INFO)  \u001b[36m# Only logs INFO and \u001b[39m\u001b[6;62H\u001b[1K\u001b[36m\rabove\u001b[39m\r\n    info_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[8;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\r\n    info_handler.setFormatter(info_formatter)\u001b[17X\r\n    logger.addHandler(info_handler)\u001b[27X\u001b[11;62H\u001b[1K\u001b[12;4H\u001b[1K\u001b[36m\u001b[C# File handler for DEBUG logs\u001b[39m\u001b[29X\r\n    log_file = f\u001b[38;5;130m\"{log_dir}/binary_ranking_debug.log\"\u001b[39m\u001b[10X\r\n    file_handler = logging.FileHandler(log_file)\u001b[14X\r\n    file_handler.setLevel(logging.DEBUG)  \u001b[36m# Logs all levels (D\u001b[39m\u001b[16;62H\u001b[1K\u001b[36m\rEBUG and above)\u001b[39m\r\n    file_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[18;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\u001b[19;4H\u001b[1K\u001b[Cfile_handler.setFormatter(file_formatter)\u001b[17X\u001b[20;4H\u001b[1K\u001b[Clogger.addHandler(file_handler)\u001b[27X\u001b[21;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m logger\u001b[23;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_lines\u001b(B\u001b[m(lines):\u001b[25;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cbinary_dict = {}\u001b[26;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m lines:\u001b[28;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Cline = line.strip()\u001b[29;44H\u001b[1K\u001b[C35,1\u001b[11X\u001b[11C7%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[26.666906, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[2;4H\u001b[1K\u001b[36m\u001b[C# Stream handler for INFO level logs to console (stderr)\u001b[39m\u001b[2X\r\n    info_handler = logging.StreamHandler(sys.stderr)\u001b[10X\r\n    info_handler.setLevel(logging.INFO)  \u001b[36m# Only logs INFO and \u001b[39m\u001b[5;62H\u001b[1K\u001b[36m\rabove\u001b[39m\r\n    info_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[7;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\r\n    info_handler.setFormatter(info_formatter)\u001b[17X\r\n    logger.addHandler(info_handler)\u001b[27X\u001b[10;62H\u001b[1K\u001b[11;4H\u001b[1K\u001b[36m\u001b[C# File handler for DEBUG logs\u001b[39m\u001b[29X\r\n    log_file = f\u001b[38;5;130m\"{log_dir}/binary_ranking_debug.log\"\u001b[39m\u001b[10X\r\n    file_handler = logging.FileHandler(log_file)\u001b[14X\r\n    file_handler.setLevel(logging.DEBUG)  \u001b[36m# Logs all levels (D\u001b[39m\u001b[15;62H\u001b[1K\u001b[36m\rEBUG and above)\u001b[39m\r\n    file_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[17;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\u001b[18;4H\u001b[1K\u001b[Cfile_handler.setFormatter(file_formatter)\u001b[17X\u001b[19;4H\u001b[1K\u001b[Clogger.addHandler(file_handler)\u001b[27X\u001b[20;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m logger\u001b[22;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_lines\u001b(B\u001b[m(lines):\u001b[24;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cbinary_dict = {}\u001b[25;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m lines:\u001b[27;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Cline = line.strip()\u001b[28;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[29;44H\u001b[1K\u001b[C36,1\u001b[11X\u001b[11C8%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[26.707972, "o", "\u001b[?25l\u001b[1;4H\u001b[1K\u001b[36m\u001b[C# Stream handler for INFO level logs to console (stderr)\u001b[39m\u001b[2X\r\n    info_handler = logging.StreamHandler(sys.stderr)\u001b[10X\r\n    info_handler.setLevel(logging.INFO)  \u001b[36m# Only logs INFO and \u001b[39m\u001b[4;62H\u001b[1K\u001b[36m\rabove\u001b[39m\r\n    info_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[6;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\r\n    info_handler.setFormatter(info_formatter)\u001b[17X\r\n    logger.addHandler(info_handler)\u001b[27X\u001b[9;62H\u001b[1K\u001b[10;4H\u001b[1K\u001b[36m\u001b[C# File handler for DEBUG logs\u001b[39m\u001b[29X\r\n    log_file = f\u001b[38;5;130m\"{log_dir}/binary_ranking_debug.log\"\u001b[39m\u001b[10X\r\n    file_handler = logging.FileHandler(log_file)\u001b[14X\r\n    file_handler.setLevel(logging.DEBUG)  \u001b[36m# Logs all levels (D\u001b[39m\u001b[14;62H\u001b[1K\u001b[36m\rEBUG and above)\u001b[39m\r\n    file_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[16;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\u001b[17;4H\u001b[1K\u001b[Cfile_handler.setFormatter(file_formatter)\u001b[17X\u001b[18;4H\u001b[1K\u001b[Clogger.addHandler(file_handler)\u001b[27X\u001b[19;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m logger\u001b[21;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_lines\u001b(B\u001b[m(lines):\u001b[23;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cbinary_dict = {}\u001b[24;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m lines:\u001b[26;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Cline = line.strip()\u001b[27;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[28;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[29;44H\u001b[1K\u001b[C37,1\u001b[11X\u001b[11C8%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[26.732177, "o", "\u001b[?25l\u001b[H    info_handler = logging.StreamHandler(sys.stderr)\u001b[10X\r\n    info_handler.setLevel(logging.INFO)  \u001b[36m# Only logs INFO and \u001b[39m\u001b[3;62H\u001b[1K\u001b[36m\rabove\u001b[39m\r\n    info_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[5;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\r\n    info_handler.setFormatter(info_formatter)\u001b[17X\r\n    logger.addHandler(info_handler)\u001b[27X\u001b[8;62H\u001b[1K\u001b[9;4H\u001b[1K\u001b[36m\u001b[C# File handler for DEBUG logs\u001b[39m\u001b[29X\r\n    log_file = f\u001b[38;5;130m\"{log_dir}/binary_ranking_debug.log\"\u001b[39m\u001b[10X\r\n    file_handler = logging.FileHandler(log_file)\u001b[14X\r\n    file_handler.setLevel(logging.DEBUG)  \u001b[36m# Logs all levels (D\u001b[39m\u001b[13;62H\u001b[1K\u001b[36m\rEBUG and above)\u001b[39m\r\n    file_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[15;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\u001b[16;4H\u001b[1K\u001b[Cfile_handler.setFormatter(file_formatter)\u001b[17X\u001b[17;4H\u001b[1K\u001b[Clogger.addHandler(file_handler)\u001b[27X\u001b[18;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m logger\u001b[20;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_lines\u001b(B\u001b[m(lines):\u001b[22;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cbinary_dict = {}\u001b[23;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m lines:\u001b[25;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Cline = line.strip()\u001b[26;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[27;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[28;62H\u001b[1K\u001b[29;44H\u001b[1K\u001b[C38,0-1\u001b[9X\u001b[9C9%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[26.770661, "o", "\u001b[?25l\u001b[H    info_handler.setLevel(logging.INFO)  \u001b[36m# Only logs INFO and \u001b[39m\u001b[2;62H\u001b[1K\u001b[36m\rabove\u001b[39m\r\n    info_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[4;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\r\n    info_handler.setFormatter(info_formatter)\u001b[17X\r\n    logger.addHandler(info_handler)\u001b[27X\u001b[7;62H\u001b[1K\u001b[8;4H\u001b[1K\u001b[36m\u001b[C# File handler for DEBUG logs\u001b[39m\u001b[29X\r\n    log_file = f\u001b[38;5;130m\"{log_dir}/binary_ranking_debug.log\"\u001b[39m\u001b[10X\r\n    file_handler = logging.FileHandler(log_file)\u001b[14X\r\n    file_handler.setLevel(logging.DEBUG)  \u001b[36m# Logs all levels (D\u001b[39m\u001b[12;62H\u001b[1K\u001b[36m\rEBUG and above)\u001b[39m\r\n    file_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[14;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\u001b[15;4H\u001b[1K\u001b[Cfile_handler.setFormatter(file_formatter)\u001b[17X\u001b[16;4H\u001b[1K\u001b[Clogger.addHandler(file_handler)\u001b[27X\u001b[17;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m logger\u001b[19;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_lines\u001b(B\u001b[m(lines):\u001b[21;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cbinary_dict = {}\u001b[22;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m lines:\u001b[24;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Cline = line.strip()\u001b[25;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[26;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[27;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cparts = line.split()\u001b[29;44H\u001b[1K\u001b[C39,1\u001b[10X\u001b[10C10%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[26.79121, "o", "\u001b[?25l\u001b[H    info_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[2;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\r\n    info_handler.setFormatter(info_formatter)\u001b[17X\r\n    logger.addHandler(info_handler)\u001b[27X\u001b[5;62H\u001b[1K\u001b[6;4H\u001b[1K\u001b[36m\u001b[C# File handler for DEBUG logs\u001b[39m\u001b[29X\r\n    log_file = f\u001b[38;5;130m\"{log_dir}/binary_ranking_debug.log\"\u001b[39m\u001b[10X\r\n    file_handler = logging.FileHandler(log_file)\u001b[14X\r\n    file_handler.setLevel(logging.DEBUG)  \u001b[36m# Logs all levels (D\u001b[39m\u001b[10;62H\u001b[1K\u001b[36m\rEBUG and above)\u001b[39m\r\n    file_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[12;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\u001b[13;4H\u001b[1K\u001b[Cfile_handler.setFormatter(file_formatter)\u001b[17X\u001b[14;4H\u001b[1K\u001b[Clogger.addHandler(file_handler)\u001b[27X\u001b[15;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m logger\u001b[17;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_lines\u001b(B\u001b[m(lines):\u001b[19;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cbinary_dict = {}\u001b[20;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m lines:\u001b[22;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Cline = line.strip()\u001b[23;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[24;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[25;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cparts = line.split()\u001b[27;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[29;44H\u001b[1K\u001b[C40,0-1\u001b[8X\u001b[8C10%\u001b[1X\u001b[?12l\u001b[?25h\u001b[27;1H"]
[26.811081, "o", "\u001b[29;46H1,1  \u001b[28;1H"]
[26.853813, "o", "\u001b[?25l\u001b[H    info_handler.setFormatter(info_formatter)\u001b[17X\r\n    logger.addHandler(info_handler)\u001b[27X\u001b[3;62H\u001b[1K\u001b[4;4H\u001b[1K\u001b[36m\u001b[C# File handler for DEBUG logs\u001b[39m\u001b[29X\r\n    log_file = f\u001b[38;5;130m\"{log_dir}/binary_ranking_debug.log\"\u001b[39m\u001b[10X\r\n    file_handler = logging.FileHandler(log_file)\u001b[14X\r\n    file_handler.setLevel(logging.DEBUG)  \u001b[36m# Logs all levels (D\u001b[39m\u001b[8;62H\u001b[1K\u001b[36m\rEBUG and above)\u001b[39m\r\n    file_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[10;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\u001b[11;4H\u001b[1K\u001b[Cfile_handler.setFormatter(file_formatter)\u001b[17X\u001b[12;4H\u001b[1K\u001b[Clogger.addHandler(file_handler)\u001b[27X\u001b[13;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m logger\u001b[15;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_lines\u001b(B\u001b[m(lines):\u001b[17;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cbinary_dict = {}\u001b[18;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m lines:\u001b[20;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Cline = line.strip()\u001b[21;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[22;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[23;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cparts = line.split()\u001b[25;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[27;12H\u001b[1K\u001b[Cpath_binary, repo = parts\u001b[25X\u001b[28;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cpath, binary = (\u001b[29;44H\u001b[1K\u001b[C42,1\u001b[10X\u001b[10C11%\u001b[1X\u001b[?12l\u001b[?25h\u001b[27;1H"]
[26.87429, "o", "\u001b[29;46H3\u001b[28;1H"]
[26.913887, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[2;4H\u001b[1K\u001b[36m\u001b[C# File handler for DEBUG logs\u001b[39m\u001b[29X\r\n    log_file = f\u001b[38;5;130m\"{log_dir}/binary_ranking_debug.log\"\u001b[39m\u001b[10X\r\n    file_handler = logging.FileHandler(log_file)\u001b[14X\r\n    file_handler.setLevel(logging.DEBUG)  \u001b[36m# Logs all levels (D\u001b[39m\u001b[6;62H\u001b[1K\u001b[36m\rEBUG and above)\u001b[39m\r\n    file_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[8;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\u001b[9;4H\u001b[1K\u001b[Cfile_handler.setFormatter(file_formatter)\u001b[17X\u001b[10;4H\u001b[1K\u001b[Clogger.addHandler(file_handler)\u001b[27X\u001b[11;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m logger\u001b[13;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_lines\u001b(B\u001b[m(lines):\u001b[15;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cbinary_dict = {}\u001b[16;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m lines:\u001b[18;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Cline = line.strip()\u001b[19;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[20;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[21;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cparts = line.split()\u001b[23;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[25;12H\u001b[1K\u001b[Cpath_binary, repo = parts\u001b[25X\u001b[26;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cpath, binary = (\u001b[27;16H\u001b[1K\u001b[Cpath_binary.rsplit(\u001b[38;5;130m\"/\"\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\"/\"\u001b[39m \u001b[33min\u001b[39m path_bina\u001b[28;62H\u001b[1K\rry \u001b[33melse\u001b[39m (\u001b[38;5;130m\"\"\u001b[39m, path_binary)\u001b[29;44H\u001b[1K\u001b[C44,1\u001b[10X\u001b[10C13%\u001b[1X\u001b[?12l\u001b[?25h\u001b[27;1H"]
[26.932958, "o", "\u001b[?25l\u001b[1;4H\u001b[1K\u001b[36m\u001b[C# File handler for DEBUG logs\u001b[39m\u001b[29X\r\n    log_file = f\u001b[38;5;130m\"{log_dir}/binary_ranking_debug.log\"\u001b[39m\u001b[10X\r\n    file_handler = logging.FileHandler(log_file)\u001b[14X\r\n    file_handler.setLevel(logging.DEBUG)  \u001b[36m# Logs all levels (D\u001b[39m\u001b[5;62H\u001b[1K\u001b[36m\rEBUG and above)\u001b[39m\r\n    file_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[7;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\u001b[8;4H\u001b[1K\u001b[Cfile_handler.setFormatter(file_formatter)\u001b[17X\u001b[9;4H\u001b[1K\u001b[Clogger.addHandler(file_handler)\u001b[27X\u001b[10;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m logger\u001b[12;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_lines\u001b(B\u001b[m(lines):\u001b[14;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cbinary_dict = {}\u001b[15;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m lines:\u001b[17;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Cline = line.strip()\u001b[18;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[19;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[20;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cparts = line.split()\u001b[22;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[24;12H\u001b[1K\u001b[Cpath_binary, repo = parts\u001b[25X\u001b[25;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cpath, binary = (\u001b[26;16H\u001b[1K\u001b[Cpath_binary.rsplit(\u001b[38;5;130m\"/\"\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\"/\"\u001b[39m \u001b[33min\u001b[39m path_bina\u001b[27;62H\u001b[1K\rry \u001b[33melse\u001b[39m (\u001b[38;5;130m\"\"\u001b[39m, path_binary)\u001b[28;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C)\u001b[29;44H\u001b[1K\u001b[C45,1\u001b[10X\u001b[10C13%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[26.976044, "o", "\u001b[?25l\u001b[H    log_file = f\u001b[38;5;130m\"{log_dir}/binary_ranking_debug.log\"\u001b[39m\u001b[10X\r\n    file_handler = logging.FileHandler(log_file)\u001b[14X\r\n    file_handler.setLevel(logging.DEBUG)  \u001b[36m# Logs all levels (D\u001b[39m\u001b[4;62H\u001b[1K\u001b[36m\rEBUG and above)\u001b[39m\r\n    file_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[6;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\u001b[7;4H\u001b[1K\u001b[Cfile_handler.setFormatter(file_formatter)\u001b[17X\u001b[8;4H\u001b[1K\u001b[Clogger.addHandler(file_handler)\u001b[27X\u001b[9;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m logger\u001b[11;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_lines\u001b(B\u001b[m(lines):\u001b[13;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cbinary_dict = {}\u001b[14;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m lines:\u001b[16;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Cline = line.strip()\u001b[17;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[18;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[19;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cparts = line.split()\u001b[21;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[23;12H\u001b[1K\u001b[Cpath_binary, repo = parts\u001b[25X\u001b[24;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cpath, binary = (\u001b[25;16H\u001b[1K\u001b[Cpath_binary.rsplit(\u001b[38;5;130m\"/\"\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\"/\"\u001b[39m \u001b[33min\u001b[39m path_bina\u001b[26;62H\u001b[1K\rry \u001b[33melse\u001b[39m (\u001b[38;5;130m\"\"\u001b[39m, path_binary)\u001b[27;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C)\u001b[28;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[29;44H\u001b[1K\u001b[C46,1\u001b[10X\u001b[10C14%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[26.995568, "o", "\u001b[?25l\u001b[H    file_handler = logging.FileHandler(log_file)\u001b[14X\r\n    file_handler.setLevel(logging.DEBUG)  \u001b[36m# Logs all levels (D\u001b[39m\u001b[3;62H\u001b[1K\u001b[36m\rEBUG and above)\u001b[39m\r\n    file_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[5;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\u001b[6;4H\u001b[1K\u001b[Cfile_handler.setFormatter(file_formatter)\u001b[17X\u001b[7;4H\u001b[1K\u001b[Clogger.addHandler(file_handler)\u001b[27X\u001b[8;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m logger\u001b[10;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_lines\u001b(B\u001b[m(lines):\u001b[12;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cbinary_dict = {}\u001b[13;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m lines:\u001b[15;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Cline = line.strip()\u001b[16;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[17;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[18;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cparts = line.split()\u001b[20;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[22;12H\u001b[1K\u001b[Cpath_binary, repo = parts\u001b[25X\u001b[23;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cpath, binary = (\u001b[24;16H\u001b[1K\u001b[Cpath_binary.rsplit(\u001b[38;5;130m\"/\"\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\"/\"\u001b[39m \u001b[33min\u001b[39m path_bina\u001b[25;62H\u001b[1K\rry \u001b[33melse\u001b[39m (\u001b[38;5;130m\"\"\u001b[39m, path_binary)\u001b[26;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C)\u001b[27;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[28;16H\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15X\u001b[29;44H\u001b[1K\u001b[C47,1\u001b[10X\u001b[10C15%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[27.034239, "o", "\u001b[?25l\u001b[H    file_handler.setLevel(logging.DEBUG)  \u001b[36m# Logs all levels (D\u001b[39m\u001b[2;62H\u001b[1K\u001b[36m\rEBUG and above)\u001b[39m\r\n    file_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[4;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\u001b[5;4H\u001b[1K\u001b[Cfile_handler.setFormatter(file_formatter)\u001b[17X\u001b[6;4H\u001b[1K\u001b[Clogger.addHandler(file_handler)\u001b[27X\u001b[7;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m logger\u001b[9;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_lines\u001b(B\u001b[m(lines):\u001b[11;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cbinary_dict = {}\u001b[12;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m lines:\u001b[14;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Cline = line.strip()\u001b[15;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[16;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[17;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cparts = line.split()\u001b[19;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[21;12H\u001b[1K\u001b[Cpath_binary, repo = parts\u001b[25X\u001b[22;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cpath, binary = (\u001b[23;16H\u001b[1K\u001b[Cpath_binary.rsplit(\u001b[38;5;130m\"/\"\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\"/\"\u001b[39m \u001b[33min\u001b[39m path_bina\u001b[24;62H\u001b[1K\rry \u001b[33melse\u001b[39m (\u001b[38;5;130m\"\"\u001b[39m, path_binary)\u001b[25;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C)\u001b[26;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[27;16H\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15X\u001b[28;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: repo,\u001b[29;44H\u001b[1K\u001b[C48,1\u001b[10X\u001b[10C15%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[27.055043, "o", "\u001b[?25l\u001b[H    file_formatter = logging.Formatter(\u001b[38;5;130m\"%(asctime)s - %(leveln\u001b[39m\u001b[2;62H\u001b[1K\u001b[38;5;130m\rame)s - %(message)s\"\u001b[39m)\u001b[3;4H\u001b[1K\u001b[Cfile_handler.setFormatter(file_formatter)\u001b[17X\u001b[4;4H\u001b[1K\u001b[Clogger.addHandler(file_handler)\u001b[27X\u001b[5;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m logger\u001b[7;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_lines\u001b(B\u001b[m(lines):\u001b[9;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cbinary_dict = {}\u001b[10;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m lines:\u001b[12;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Cline = line.strip()\u001b[13;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[14;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[15;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cparts = line.split()\u001b[17;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[19;12H\u001b[1K\u001b[Cpath_binary, repo = parts\u001b[25X\u001b[20;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cpath, binary = (\u001b[21;16H\u001b[1K\u001b[Cpath_binary.rsplit(\u001b[38;5;130m\"/\"\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\"/\"\u001b[39m \u001b[33min\u001b[39m path_bina\u001b[22;62H\u001b[1K\rry \u001b[33melse\u001b[39m (\u001b[38;5;130m\"\"\u001b[39m, path_binary)\u001b[23;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C)\u001b[24;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[25;16H\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15X\u001b[26;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: repo,\u001b[27;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[28;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[29;44H\u001b[1K\u001b[C49,1\u001b[10X\u001b[10C16%\u001b[1X\u001b[?12l\u001b[?25h\u001b[27;1H"]
[27.092143, "o", "\u001b[29;45H50\u001b[28;1H"]
[27.134354, "o", "\u001b[?25l\u001b[1;4H\u001b[1K\u001b[Cfile_handler.setFormatter(file_formatter)\u001b[17X\u001b[2;4H\u001b[1K\u001b[Clogger.addHandler(file_handler)\u001b[27X\u001b[3;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m logger\u001b[5;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_lines\u001b(B\u001b[m(lines):\u001b[7;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cbinary_dict = {}\u001b[8;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m lines:\u001b[10;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Cline = line.strip()\u001b[11;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[12;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[13;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cparts = line.split()\u001b[15;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[17;12H\u001b[1K\u001b[Cpath_binary, repo = parts\u001b[25X\u001b[18;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cpath, binary = (\u001b[19;16H\u001b[1K\u001b[Cpath_binary.rsplit(\u001b[38;5;130m\"/\"\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\"/\"\u001b[39m \u001b[33min\u001b[39m path_bina\u001b[20;62H\u001b[1K\rry \u001b[33melse\u001b[39m (\u001b[38;5;130m\"\"\u001b[39m, path_binary)\u001b[21;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C)\u001b[22;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[23;16H\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15X\u001b[24;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: repo,\u001b[25;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[26;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[27;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[28;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[29;44H\u001b[1K\u001b[C51,1\u001b[10X\u001b[10C17%\u001b[1X\u001b[?12l\u001b[?25h\u001b[27;1H"]
[27.153641, "o", "\u001b[29;46H2\u001b[28;1H"]
[27.772768, "o", "\u001b[29;46H1\u001b[27;1H"]
[28.26008, "o", "\u001b[29;46H0\u001b[26;1H"]
[28.286195, "o", "\u001b[29;45H49\u001b[25;1H"]
[28.993938, "o", "\u001b[29;45H50\u001b[26;1H"]
[29.485063, "o", "\u001b[29;46H1\u001b[27;1H"]
[29.504271, "o", "\u001b[29;46H2\u001b[28;1H"]
[29.546651, "o", "\u001b[?25l\u001b[1;4H\u001b[1K\u001b[Clogger.addHandler(file_handler)\u001b[27X\u001b[2;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m logger\u001b[4;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_lines\u001b(B\u001b[m(lines):\u001b[6;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cbinary_dict = {}\u001b[7;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m lines:\u001b[9;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Cline = line.strip()\u001b[10;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[11;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[12;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cparts = line.split()\u001b[14;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[16;12H\u001b[1K\u001b[Cpath_binary, repo = parts\u001b[25X\u001b[17;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cpath, binary = (\u001b[18;16H\u001b[1K\u001b[Cpath_binary.rsplit(\u001b[38;5;130m\"/\"\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\"/\"\u001b[39m \u001b[33min\u001b[39m path_bina\u001b[19;62H\u001b[1K\rry \u001b[33melse\u001b[39m (\u001b[38;5;130m\"\"\u001b[39m, path_binary)\u001b[20;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C)\u001b[21;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[22;16H\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15X\u001b[23;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: repo,\u001b[24;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[25;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[26;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[27;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[28;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[29;44H\u001b[1K\u001b[C53,1\u001b[10X\u001b[10C18%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[29.566284, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m logger\u001b[3;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_lines\u001b(B\u001b[m(lines):\u001b[5;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cbinary_dict = {}\u001b[6;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m lines:\u001b[8;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Cline = line.strip()\u001b[9;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[10;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[11;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cparts = line.split()\u001b[13;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[15;12H\u001b[1K\u001b[Cpath_binary, repo = parts\u001b[25X\u001b[16;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cpath, binary = (\u001b[17;16H\u001b[1K\u001b[Cpath_binary.rsplit(\u001b[38;5;130m\"/\"\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\"/\"\u001b[39m \u001b[33min\u001b[39m path_bina\u001b[18;62H\u001b[1K\rry \u001b[33melse\u001b[39m (\u001b[38;5;130m\"\"\u001b[39m, path_binary)\u001b[19;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C)\u001b[20;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[21;16H\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15X\u001b[22;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: repo,\u001b[23;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[24;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[25;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[26;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[27;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[28;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[29;44H\u001b[1K\u001b[C54,1\u001b[10X\u001b[10C18%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[29.605894, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m logger\u001b[2;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_lines\u001b(B\u001b[m(lines):\u001b[4;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cbinary_dict = {}\u001b[5;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m lines:\u001b[7;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Cline = line.strip()\u001b[8;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[9;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[10;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cparts = line.split()\u001b[12;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[14;12H\u001b[1K\u001b[Cpath_binary, repo = parts\u001b[25X\u001b[15;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cpath, binary = (\u001b[16;16H\u001b[1K\u001b[Cpath_binary.rsplit(\u001b[38;5;130m\"/\"\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\"/\"\u001b[39m \u001b[33min\u001b[39m path_bina\u001b[17;62H\u001b[1K\rry \u001b[33melse\u001b[39m (\u001b[38;5;130m\"\"\u001b[39m, path_binary)\u001b[18;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C)\u001b[19;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[20;16H\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15X\u001b[21;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: repo,\u001b[22;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[23;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[24;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[25;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[26;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[27;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[28;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[29;44H\u001b[1K\u001b[C55,1\u001b[10X\u001b[10C19%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[29.623733, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_lines\u001b(B\u001b[m(lines):\u001b[3;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cbinary_dict = {}\u001b[4;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m lines:\u001b[6;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Cline = line.strip()\u001b[7;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[8;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[9;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cparts = line.split()\u001b[11;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[13;12H\u001b[1K\u001b[Cpath_binary, repo = parts\u001b[25X\u001b[14;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cpath, binary = (\u001b[15;16H\u001b[1K\u001b[Cpath_binary.rsplit(\u001b[38;5;130m\"/\"\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\"/\"\u001b[39m \u001b[33min\u001b[39m path_bina\u001b[16;62H\u001b[1K\rry \u001b[33melse\u001b[39m (\u001b[38;5;130m\"\"\u001b[39m, path_binary)\u001b[17;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C)\u001b[18;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[19;16H\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15X\u001b[20;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: repo,\u001b[21;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[22;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[23;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[24;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[25;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[26;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[27;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[28;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[29;44H\u001b[1K\u001b[C56,1\u001b[10X\u001b[10C20%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[29.665371, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[33m\u001b[Hdef\u001b[39m \u001b[36m\u001b[1mload_lines\u001b(B\u001b[m(lines):\u001b[2;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cbinary_dict = {}\u001b[3;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m lines:\u001b[5;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Cline = line.strip()\u001b[6;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[7;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[8;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cparts = line.split()\u001b[10;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[12;12H\u001b[1K\u001b[Cpath_binary, repo = parts\u001b[25X\u001b[13;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cpath, binary = (\u001b[14;16H\u001b[1K\u001b[Cpath_binary.rsplit(\u001b[38;5;130m\"/\"\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\"/\"\u001b[39m \u001b[33min\u001b[39m path_bina\u001b[15;62H\u001b[1K\rry \u001b[33melse\u001b[39m (\u001b[38;5;130m\"\"\u001b[39m, path_binary)\u001b[16;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C)\u001b[17;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[18;16H\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15X\u001b[19;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: repo,\u001b[20;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[21;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[22;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[23;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[24;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[25;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[26;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[27;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[28;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[29;44H\u001b[1K\u001b[C57,1\u001b[10X\u001b[10C20%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[29.684115, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cbinary_dict = {}\u001b[2;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m lines:\u001b[4;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Cline = line.strip()\u001b[5;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[6;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[7;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cparts = line.split()\u001b[9;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[11;12H\u001b[1K\u001b[Cpath_binary, repo = parts\u001b[25X\u001b[12;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cpath, binary = (\u001b[13;16H\u001b[1K\u001b[Cpath_binary.rsplit(\u001b[38;5;130m\"/\"\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\"/\"\u001b[39m \u001b[33min\u001b[39m path_bina\u001b[14;62H\u001b[1K\rry \u001b[33melse\u001b[39m (\u001b[38;5;130m\"\"\u001b[39m, path_binary)\u001b[15;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C)\u001b[16;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[17;16H\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15X\u001b[18;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: repo,\u001b[19;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[20;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[21;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[22;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[23;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[24;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[25;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[26;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[27;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[28;62H\u001b[1K\u001b[29;44H\u001b[1K\u001b[C58,0-1\u001b[8X\u001b[8C21%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[29.723759, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m lines:\u001b[3;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Cline = line.strip()\u001b[4;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[5;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[6;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cparts = line.split()\u001b[8;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[10;12H\u001b[1K\u001b[Cpath_binary, repo = parts\u001b[25X\u001b[11;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cpath, binary = (\u001b[12;16H\u001b[1K\u001b[Cpath_binary.rsplit(\u001b[38;5;130m\"/\"\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\"/\"\u001b[39m \u001b[33min\u001b[39m path_bina\u001b[13;62H\u001b[1K\rry \u001b[33melse\u001b[39m (\u001b[38;5;130m\"\"\u001b[39m, path_binary)\u001b[14;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C)\u001b[15;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[16;16H\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15X\u001b[17;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: repo,\u001b[18;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[19;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[20;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[21;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[22;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[23;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[24;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[25;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[26;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[27;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m binary_dict\u001b[29;44H\u001b[1K\u001b[C59,1\u001b[10X\u001b[10C22%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[29.763435, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m lines:\u001b[2;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Cline = line.strip()\u001b[3;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[4;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[5;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cparts = line.split()\u001b[7;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[9;12H\u001b[1K\u001b[Cpath_binary, repo = parts\u001b[25X\u001b[10;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cpath, binary = (\u001b[11;16H\u001b[1K\u001b[Cpath_binary.rsplit(\u001b[38;5;130m\"/\"\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\"/\"\u001b[39m \u001b[33min\u001b[39m path_bina\u001b[12;62H\u001b[1K\rry \u001b[33melse\u001b[39m (\u001b[38;5;130m\"\"\u001b[39m, path_binary)\u001b[13;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C)\u001b[14;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[15;16H\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15X\u001b[16;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: repo,\u001b[17;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[18;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[19;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[20;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[21;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[22;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[23;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[24;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[25;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[26;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m binary_dict\u001b[28;62H\u001b[1K\u001b[29;44H\u001b[1K\u001b[C60,0-1\u001b[8X\u001b[8C22%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[29.781934, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Cline = line.strip()\u001b[2;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[3;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[4;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cparts = line.split()\u001b[6;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[8;12H\u001b[1K\u001b[Cpath_binary, repo = parts\u001b[25X\u001b[9;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cpath, binary = (\u001b[10;16H\u001b[1K\u001b[Cpath_binary.rsplit(\u001b[38;5;130m\"/\"\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\"/\"\u001b[39m \u001b[33min\u001b[39m path_bina\u001b[11;62H\u001b[1K\rry \u001b[33melse\u001b[39m (\u001b[38;5;130m\"\"\u001b[39m, path_binary)\u001b[12;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C)\u001b[13;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[14;16H\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15X\u001b[15;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: repo,\u001b[16;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[17;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[18;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[19;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[20;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[21;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[22;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[23;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[24;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[25;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m binary_dict\u001b[27;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_file\u001b(B\u001b[m(file_name):\u001b[29;44H\u001b[1K\u001b[C61,1\u001b[10X\u001b[10C23%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[29.821981, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line:\u001b[2;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[3;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cparts = line.split()\u001b[5;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[7;12H\u001b[1K\u001b[Cpath_binary, repo = parts\u001b[25X\u001b[8;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cpath, binary = (\u001b[9;16H\u001b[1K\u001b[Cpath_binary.rsplit(\u001b[38;5;130m\"/\"\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\"/\"\u001b[39m \u001b[33min\u001b[39m path_bina\u001b[10;62H\u001b[1K\rry \u001b[33melse\u001b[39m (\u001b[38;5;130m\"\"\u001b[39m, path_binary)\u001b[11;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C)\u001b[12;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[13;16H\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15X\u001b[14;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: repo,\u001b[15;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[16;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[17;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[18;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[19;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[20;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[21;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[22;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[23;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[24;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m binary_dict\u001b[26;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_file\u001b(B\u001b[m(file_name):\u001b[28;4H\u001b[1K\u001b[33m\u001b[Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m\"r\"\u001b[39m) \u001b[33mas\u001b[39m file:\u001b[24X\u001b[29;44H\u001b[1K\u001b[C62,1\u001b[10X\u001b[10C24%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[29.843145, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[2;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cparts = line.split()\u001b[4;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[6;12H\u001b[1K\u001b[Cpath_binary, repo = parts\u001b[25X\u001b[7;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cpath, binary = (\u001b[8;16H\u001b[1K\u001b[Cpath_binary.rsplit(\u001b[38;5;130m\"/\"\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\"/\"\u001b[39m \u001b[33min\u001b[39m path_bina\u001b[9;62H\u001b[1K\rry \u001b[33melse\u001b[39m (\u001b[38;5;130m\"\"\u001b[39m, path_binary)\u001b[10;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C)\u001b[11;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[12;16H\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15X\u001b[13;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: repo,\u001b[14;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[15;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[16;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[17;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[18;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[19;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[20;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[21;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[22;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[23;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m binary_dict\u001b[25;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_file\u001b(B\u001b[m(file_name):\u001b[27;4H\u001b[1K\u001b[33m\u001b[Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m\"r\"\u001b[39m) \u001b[33mas\u001b[39m file:\u001b[24X\u001b[28;8H\u001b[1K\u001b[Clines = file.readlines()\u001b[30X\u001b[29;44H\u001b[1K\u001b[C63,1\u001b[10X\u001b[10C25%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[29.882212, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cparts = line.split()\u001b[3;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[5;12H\u001b[1K\u001b[Cpath_binary, repo = parts\u001b[25X\u001b[6;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cpath, binary = (\u001b[7;16H\u001b[1K\u001b[Cpath_binary.rsplit(\u001b[38;5;130m\"/\"\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\"/\"\u001b[39m \u001b[33min\u001b[39m path_bina\u001b[8;62H\u001b[1K\rry \u001b[33melse\u001b[39m (\u001b[38;5;130m\"\"\u001b[39m, path_binary)\u001b[9;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C)\u001b[10;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[11;16H\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15X\u001b[12;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: repo,\u001b[13;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[14;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[15;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[16;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[17;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[18;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[19;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[20;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[21;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[22;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m binary_dict\u001b[24;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_file\u001b(B\u001b[m(file_name):\u001b[26;4H\u001b[1K\u001b[33m\u001b[Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m\"r\"\u001b[39m) \u001b[33mas\u001b[39m file:\u001b[24X\u001b[27;8H\u001b[1K\u001b[Clines = file.readlines()\u001b[30X\u001b[28;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m load_lines(lines)\u001b[29;44H\u001b[1K\u001b[C64,1\u001b[10X\u001b[10C25%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[29.90304, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Cparts = line.split()\u001b[2;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[4;12H\u001b[1K\u001b[Cpath_binary, repo = parts\u001b[25X\u001b[5;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cpath, binary = (\u001b[6;16H\u001b[1K\u001b[Cpath_binary.rsplit(\u001b[38;5;130m\"/\"\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\"/\"\u001b[39m \u001b[33min\u001b[39m path_bina\u001b[7;62H\u001b[1K\rry \u001b[33melse\u001b[39m (\u001b[38;5;130m\"\"\u001b[39m, path_binary)\u001b[8;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C)\u001b[9;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[10;16H\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15X\u001b[11;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: repo,\u001b[12;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[13;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[14;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[15;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[16;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[17;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[18;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[19;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[20;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[21;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m binary_dict\u001b[23;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_file\u001b(B\u001b[m(file_name):\u001b[25;4H\u001b[1K\u001b[33m\u001b[Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m\"r\"\u001b[39m) \u001b[33mas\u001b[39m file:\u001b[24X\u001b[26;8H\u001b[1K\u001b[Clines = file.readlines()\u001b[30X\u001b[27;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m load_lines(lines)\u001b[28;62H\u001b[1K\u001b[29;44H\u001b[1K\u001b[C65,0-1\u001b[8X\u001b[8C26%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[29.94549, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[3;12H\u001b[1K\u001b[Cpath_binary, repo = parts\u001b[25X\u001b[4;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cpath, binary = (\u001b[5;16H\u001b[1K\u001b[Cpath_binary.rsplit(\u001b[38;5;130m\"/\"\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\"/\"\u001b[39m \u001b[33min\u001b[39m path_bina\u001b[6;62H\u001b[1K\rry \u001b[33melse\u001b[39m (\u001b[38;5;130m\"\"\u001b[39m, path_binary)\u001b[7;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C)\u001b[8;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[9;16H\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15X\u001b[10;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: repo,\u001b[11;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[12;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[13;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[14;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[15;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[16;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[17;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[18;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[19;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[20;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m binary_dict\u001b[22;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_file\u001b(B\u001b[m(file_name):\u001b[24;4H\u001b[1K\u001b[33m\u001b[Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m\"r\"\u001b[39m) \u001b[33mas\u001b[39m file:\u001b[24X\u001b[25;8H\u001b[1K\u001b[Clines = file.readlines()\u001b[30X\u001b[26;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m load_lines(lines)\u001b[27;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mchunker\u001b(B\u001b[m(keys, batch_size):\u001b[29;44H\u001b[1K\u001b[C66,1\u001b[10X\u001b[10C27%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[29.967452, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m2\u001b[39m:\u001b[2;12H\u001b[1K\u001b[Cpath_binary, repo = parts\u001b[25X\u001b[3;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cpath, binary = (\u001b[4;16H\u001b[1K\u001b[Cpath_binary.rsplit(\u001b[38;5;130m\"/\"\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\"/\"\u001b[39m \u001b[33min\u001b[39m path_bina\u001b[5;62H\u001b[1K\rry \u001b[33melse\u001b[39m (\u001b[38;5;130m\"\"\u001b[39m, path_binary)\u001b[6;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C)\u001b[7;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[8;16H\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15X\u001b[9;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: repo,\u001b[10;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[11;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[12;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[13;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[14;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[15;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[16;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[17;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[18;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[19;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m binary_dict\u001b[21;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_file\u001b(B\u001b[m(file_name):\u001b[23;4H\u001b[1K\u001b[33m\u001b[Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m\"r\"\u001b[39m) \u001b[33mas\u001b[39m file:\u001b[24X\u001b[24;8H\u001b[1K\u001b[Clines = file.readlines()\u001b[30X\u001b[25;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m load_lines(lines)\u001b[26;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mchunker\u001b(B\u001b[m(keys, batch_size):\u001b[28;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Crandom.shuffle(keys)\u001b[29;44H\u001b[1K\u001b[C67,1\u001b[10X\u001b[10C27%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[30.007171, "o", "\u001b[?25l\u001b[1;12H\u001b[1K\u001b[Cpath_binary, repo = parts\u001b[25X\u001b[2;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cpath, binary = (\u001b[3;16H\u001b[1K\u001b[Cpath_binary.rsplit(\u001b[38;5;130m\"/\"\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\"/\"\u001b[39m \u001b[33min\u001b[39m path_bina\u001b[4;62H\u001b[1K\rry \u001b[33melse\u001b[39m (\u001b[38;5;130m\"\"\u001b[39m, path_binary)\u001b[5;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C)\u001b[6;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[7;16H\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15X\u001b[8;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: repo,\u001b[9;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[10;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[11;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[12;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[13;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[14;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[16;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[17;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[18;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m binary_dict\u001b[20;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_file\u001b(B\u001b[m(file_name):\u001b[22;4H\u001b[1K\u001b[33m\u001b[Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m\"r\"\u001b[39m) \u001b[33mas\u001b[39m file:\u001b[24X\u001b[23;8H\u001b[1K\u001b[Clines = file.readlines()\u001b[30X\u001b[24;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m load_lines(lines)\u001b[25;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mchunker\u001b(B\u001b[m(keys, batch_size):\u001b[27;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Crandom.shuffle(keys)\u001b[28;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i \u001b[33min\u001b[39m \u001b[36m\u001b[1mrange\u001b(B\u001b[m(\u001b[38;5;130m0\u001b[39m, \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys), batch_size):\u001b[17X\u001b[29;44H\u001b[1K\u001b[C68,1\u001b[10X\u001b[10C28%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[30.027797, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cpath, binary = (\u001b[2;16H\u001b[1K\u001b[Cpath_binary.rsplit(\u001b[38;5;130m\"/\"\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\"/\"\u001b[39m \u001b[33min\u001b[39m path_bina\u001b[3;62H\u001b[1K\rry \u001b[33melse\u001b[39m (\u001b[38;5;130m\"\"\u001b[39m, path_binary)\u001b[4;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C)\u001b[5;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[6;16H\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15X\u001b[7;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: repo,\u001b[8;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[9;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[10;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[11;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[12;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[13;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[14;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[16;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[17;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m binary_dict\u001b[19;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_file\u001b(B\u001b[m(file_name):\u001b[21;4H\u001b[1K\u001b[33m\u001b[Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m\"r\"\u001b[39m) \u001b[33mas\u001b[39m file:\u001b[24X\u001b[22;8H\u001b[1K\u001b[Clines = file.readlines()\u001b[30X\u001b[23;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m load_lines(lines)\u001b[24;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mchunker\u001b(B\u001b[m(keys, batch_size):\u001b[26;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Crandom.shuffle(keys)\u001b[27;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i \u001b[33min\u001b[39m \u001b[36m\u001b[1mrange\u001b(B\u001b[m(\u001b[38;5;130m0\u001b[39m, \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys), batch_size):\u001b[17X\u001b[28;8H\u001b[1K\u001b[33m\u001b[Cyield\u001b[39m keys[i : i + batch_size]\u001b[24X\u001b[29;44H\u001b[1K\u001b[C69,1\u001b[10X\u001b[10C29%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[30.069743, "o", "\u001b[?25l\u001b[1;16H\u001b[1K\u001b[Cpath_binary.rsplit(\u001b[38;5;130m\"/\"\u001b[39m, \u001b[38;5;130m1\u001b[39m) \u001b[33mif\u001b[39m \u001b[38;5;130m\"/\"\u001b[39m \u001b[33min\u001b[39m path_bina\u001b[2;62H\u001b[1K\rry \u001b[33melse\u001b[39m (\u001b[38;5;130m\"\"\u001b[39m, path_binary)\u001b[3;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C)\u001b[4;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[5;16H\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15X\u001b[6;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: repo,\u001b[7;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[8;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[9;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[10;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[11;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[12;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[13;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[14;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[15;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[16;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m binary_dict\u001b[18;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_file\u001b(B\u001b[m(file_name):\u001b[20;4H\u001b[1K\u001b[33m\u001b[Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m\"r\"\u001b[39m) \u001b[33mas\u001b[39m file:\u001b[24X\u001b[21;8H\u001b[1K\u001b[Clines = file.readlines()\u001b[30X\u001b[22;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m load_lines(lines)\u001b[23;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mchunker\u001b(B\u001b[m(keys, batch_size):\u001b[25;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Crandom.shuffle(keys)\u001b[26;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i \u001b[33min\u001b[39m \u001b[36m\u001b[1mrange\u001b(B\u001b[m(\u001b[38;5;130m0\u001b[39m, \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys), batch_size):\u001b[17X\u001b[27;8H\u001b[1K\u001b[33m\u001b[Cyield\u001b[39m keys[i : i + batch_size]\u001b[24X\u001b[28;62H\u001b[1K\u001b[29;44H\u001b[1K\u001b[C70,0-1\u001b[8X\u001b[8C29%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[30.090032, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C)\u001b[2;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[3;16H\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15X\u001b[4;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: repo,\u001b[5;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[6;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[7;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[8;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[9;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[10;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[11;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[12;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[13;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[14;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m binary_dict\u001b[16;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_file\u001b(B\u001b[m(file_name):\u001b[18;4H\u001b[1K\u001b[33m\u001b[Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m\"r\"\u001b[39m) \u001b[33mas\u001b[39m file:\u001b[24X\u001b[19;8H\u001b[1K\u001b[Clines = file.readlines()\u001b[30X\u001b[20;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m load_lines(lines)\u001b[21;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mchunker\u001b(B\u001b[m(keys, batch_size):\u001b[23;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Crandom.shuffle(keys)\u001b[24;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i \u001b[33min\u001b[39m \u001b[36m\u001b[1mrange\u001b(B\u001b[m(\u001b[38;5;130m0\u001b[39m, \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys), batch_size):\u001b[17X\u001b[25;8H\u001b[1K\u001b[33m\u001b[Cyield\u001b[39m keys[i : i + batch_size]\u001b[24X\u001b[26;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mrank\u001b(B\u001b[m(keys, host, port, logger):\u001b[27X\r\n    url = f\u001b[38;5;130m\"http://{host}:{port}/api/generate\"\u001b[39m\u001b[16X\u001b[29;44H\u001b[1K\u001b[C71,1\u001b[10X\u001b[10C30%\u001b[1X\u001b[?12l\u001b[?25h\u001b[27;1H"]
[30.109926, "o", "\u001b[29;46H2\u001b[28;1H"]
[30.149945, "o", "\u001b[?25l\u001b[1;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[2;16H\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15X\u001b[3;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: repo,\u001b[4;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[5;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[6;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[7;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[8;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[9;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[10;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[11;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[12;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[13;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m binary_dict\u001b[15;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_file\u001b(B\u001b[m(file_name):\u001b[17;4H\u001b[1K\u001b[33m\u001b[Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m\"r\"\u001b[39m) \u001b[33mas\u001b[39m file:\u001b[24X\u001b[18;8H\u001b[1K\u001b[Clines = file.readlines()\u001b[30X\u001b[19;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m load_lines(lines)\u001b[20;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mchunker\u001b(B\u001b[m(keys, batch_size):\u001b[22;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Crandom.shuffle(keys)\u001b[23;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i \u001b[33min\u001b[39m \u001b[36m\u001b[1mrange\u001b(B\u001b[m(\u001b[38;5;130m0\u001b[39m, \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys), batch_size):\u001b[17X\u001b[24;8H\u001b[1K\u001b[33m\u001b[Cyield\u001b[39m keys[i : i + batch_size]\u001b[24X\u001b[25;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mrank\u001b(B\u001b[m(keys, host, port, logger):\u001b[27X\r\n    url = f\u001b[38;5;130m\"http://{host}:{port}/api/generate\"\u001b[39m\u001b[16X\u001b[28;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cpayload = {\u001b[29;44H\u001b[1K\u001b[C73,1\u001b[10X\u001b[10C31%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[30.171545, "o", "\u001b[?25l\u001b[1;16H\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: path \u001b[33mif\u001b[39m path \u001b[33melse\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[15X\u001b[2;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: repo,\u001b[3;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[4;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[5;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Celif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m:\u001b[6;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[7;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[8;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[9;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[10;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[11;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[12;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m binary_dict\u001b[14;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_file\u001b(B\u001b[m(file_name):\u001b[16;4H\u001b[1K\u001b[33m\u001b[Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m\"r\"\u001b[39m) \u001b[33mas\u001b[39m file:\u001b[24X\u001b[17;8H\u001b[1K\u001b[Clines = file.readlines()\u001b[30X\u001b[18;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m load_lines(lines)\u001b[19;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mchunker\u001b(B\u001b[m(keys, batch_size):\u001b[21;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Crandom.shuffle(keys)\u001b[22;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i \u001b[33min\u001b[39m \u001b[36m\u001b[1mrange\u001b(B\u001b[m(\u001b[38;5;130m0\u001b[39m, \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys), batch_size):\u001b[17X\u001b[23;8H\u001b[1K\u001b[33m\u001b[Cyield\u001b[39m keys[i : i + batch_size]\u001b[24X\u001b[24;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mrank\u001b(B\u001b[m(keys, host, port, logger):\u001b[27X\r\n    url = f\u001b[38;5;130m\"http://{host}:{port}/api/generate\"\u001b[39m\u001b[16X\u001b[27;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cpayload = {\u001b[28;62H\u001b[1K\u001b[8G\u001b[1K\u001b[38;5;130m\u001b[C\"model\"\u001b[39m: \u001b[38;5;130m\"llama3\"\u001b[39m,\u001b[29;44H\u001b[1K\u001b[C74,1\u001b[10X\u001b[10C32%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[30.21167, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Cbinary = parts[\u001b[38;5;130m0\u001b[39m]\u001b[2;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[3;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[4;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[5;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[6;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[7;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m binary_dict\u001b[9;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_file\u001b(B\u001b[m(file_name):\u001b[11;4H\u001b[1K\u001b[33m\u001b[Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m\"r\"\u001b[39m) \u001b[33mas\u001b[39m file:\u001b[24X\u001b[12;8H\u001b[1K\u001b[Clines = file.readlines()\u001b[30X\u001b[13;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m load_lines(lines)\u001b[14;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mchunker\u001b(B\u001b[m(keys, batch_size):\u001b[16;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Crandom.shuffle(keys)\u001b[17;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i \u001b[33min\u001b[39m \u001b[36m\u001b[1mrange\u001b(B\u001b[m(\u001b[38;5;130m0\u001b[39m, \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys), batch_size):\u001b[17X\u001b[18;8H\u001b[1K\u001b[33m\u001b[Cyield\u001b[39m keys[i : i + batch_size]\u001b[24X\u001b[19;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mrank\u001b(B\u001b[m(keys, host, port, logger):\u001b[27X\r\n    url = f\u001b[38;5;130m\"http://{host}:{port}/api/generate\"\u001b[39m\u001b[16X\u001b[22;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cpayload = {\u001b[23;62H\u001b[1K\u001b[8G\u001b[1K\u001b[38;5;130m\u001b[C\"model\"\u001b[39m: \u001b[38;5;130m\"llama3\"\u001b[39m,\u001b[24;8H\u001b[1K\u001b[38;5;130m\u001b[C\"system\"\u001b[39m: \u001b[38;5;130m\"You are bash-cache-priority, an AI program \r\nthat decides which commands the user is most likely to type. I\r\nnput is a list of binaries. Output is an ordered list by likel\r\nihood of being entered on the keyboard. Respond with just the \r\ncommand names in order of likelihood.\"\u001b[39m,\u001b[23X\u001b[29;44H\u001b[1K\u001b[C75,1\u001b[10X\u001b[10C34%\u001b[1X\u001b[?12l\u001b[?25h\u001b[24;1H"]
[30.231591, "o", "\u001b[?25l\u001b[1;12H\u001b[1K\u001b[Cbinary_dict[binary] = {\u001b[27X\u001b[2;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[3;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[4;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[5;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[6;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m binary_dict\u001b[8;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_file\u001b(B\u001b[m(file_name):\u001b[10;4H\u001b[1K\u001b[33m\u001b[Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m\"r\"\u001b[39m) \u001b[33mas\u001b[39m file:\u001b[24X\u001b[11;8H\u001b[1K\u001b[Clines = file.readlines()\u001b[30X\u001b[12;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m load_lines(lines)\u001b[13;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mchunker\u001b(B\u001b[m(keys, batch_size):\u001b[15;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Crandom.shuffle(keys)\u001b[16;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i \u001b[33min\u001b[39m \u001b[36m\u001b[1mrange\u001b(B\u001b[m(\u001b[38;5;130m0\u001b[39m, \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys), batch_size):\u001b[17X\u001b[17;8H\u001b[1K\u001b[33m\u001b[Cyield\u001b[39m keys[i : i + batch_size]\u001b[24X\u001b[18;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mrank\u001b(B\u001b[m(keys, host, port, logger):\u001b[27X\r\n    url = f\u001b[38;5;130m\"http://{host}:{port}/api/generate\"\u001b[39m\u001b[16X\u001b[21;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cpayload = {\u001b[22;62H\u001b[1K\u001b[8G\u001b[1K\u001b[38;5;130m\u001b[C\"model\"\u001b[39m: \u001b[38;5;130m\"llama3\"\u001b[39m,\u001b[23;8H\u001b[1K\u001b[38;5;130m\u001b[C\"system\"\u001b[39m: \u001b[38;5;130m\"You are bash-cache-priority, an AI program \r\nthat decides which commands the user is most likely to type. I\r\nnput is a list of binaries. Output is an ordered list by likel\r\nihood of being entered on the keyboard. Respond with just the \r\ncommand names in order of likelihood.\"\u001b[39m,\u001b[23X\u001b[28;8H\u001b[1K\u001b[38;5;130m\u001b[C\"prompt\"\u001b[39m: \u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m.join(keys),\u001b[28X\u001b[29;44H\u001b[1K\u001b[C76,1\u001b[10X\u001b[10C35%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[30.271118, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"path\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[2;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[3;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[4;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[5;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m binary_dict\u001b[7;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_file\u001b(B\u001b[m(file_name):\u001b[9;4H\u001b[1K\u001b[33m\u001b[Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m\"r\"\u001b[39m) \u001b[33mas\u001b[39m file:\u001b[24X\u001b[10;8H\u001b[1K\u001b[Clines = file.readlines()\u001b[30X\u001b[11;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m load_lines(lines)\u001b[12;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mchunker\u001b(B\u001b[m(keys, batch_size):\u001b[14;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Crandom.shuffle(keys)\u001b[15;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i \u001b[33min\u001b[39m \u001b[36m\u001b[1mrange\u001b(B\u001b[m(\u001b[38;5;130m0\u001b[39m, \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys), batch_size):\u001b[17X\u001b[16;8H\u001b[1K\u001b[33m\u001b[Cyield\u001b[39m keys[i : i + batch_size]\u001b[24X\u001b[17;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mrank\u001b(B\u001b[m(keys, host, port, logger):\u001b[27X\r\n    url = f\u001b[38;5;130m\"http://{host}:{port}/api/generate\"\u001b[39m\u001b[16X\u001b[20;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cpayload = {\u001b[21;62H\u001b[1K\u001b[8G\u001b[1K\u001b[38;5;130m\u001b[C\"model\"\u001b[39m: \u001b[38;5;130m\"llama3\"\u001b[39m,\u001b[22;8H\u001b[1K\u001b[38;5;130m\u001b[C\"system\"\u001b[39m: \u001b[38;5;130m\"You are bash-cache-priority, an AI program \r\nthat decides which commands the user is most likely to type. I\r\nnput is a list of binaries. Output is an ordered list by likel\r\nihood of being entered on the keyboard. Respond with just the \r\ncommand names in order of likelihood.\"\u001b[39m,\u001b[23X\u001b[27;8H\u001b[1K\u001b[38;5;130m\u001b[C\"prompt\"\u001b[39m: \u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m.join(keys),\u001b[28X\u001b[28;62H\u001b[1K\u001b[4G\u001b[1K\u001b[C}\u001b[29;44H\u001b[1K\u001b[C77,1\u001b[10X\u001b[10C36%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[30.290827, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[16G\u001b[1K\u001b[38;5;130m\u001b[C\"repo\"\u001b[39m: \u001b[36m\u001b[1mNone\u001b(B\u001b[m,\u001b[2;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[3;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[4;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m binary_dict\u001b[6;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_file\u001b(B\u001b[m(file_name):\u001b[8;4H\u001b[1K\u001b[33m\u001b[Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m\"r\"\u001b[39m) \u001b[33mas\u001b[39m file:\u001b[24X\u001b[9;8H\u001b[1K\u001b[Clines = file.readlines()\u001b[30X\u001b[10;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m load_lines(lines)\u001b[11;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mchunker\u001b(B\u001b[m(keys, batch_size):\u001b[13;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Crandom.shuffle(keys)\u001b[14;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i \u001b[33min\u001b[39m \u001b[36m\u001b[1mrange\u001b(B\u001b[m(\u001b[38;5;130m0\u001b[39m, \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys), batch_size):\u001b[17X\u001b[15;8H\u001b[1K\u001b[33m\u001b[Cyield\u001b[39m keys[i : i + batch_size]\u001b[24X\u001b[16;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mrank\u001b(B\u001b[m(keys, host, port, logger):\u001b[27X\r\n    url = f\u001b[38;5;130m\"http://{host}:{port}/api/generate\"\u001b[39m\u001b[16X\u001b[19;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cpayload = {\u001b[20;62H\u001b[1K\u001b[8G\u001b[1K\u001b[38;5;130m\u001b[C\"model\"\u001b[39m: \u001b[38;5;130m\"llama3\"\u001b[39m,\u001b[21;8H\u001b[1K\u001b[38;5;130m\u001b[C\"system\"\u001b[39m: \u001b[38;5;130m\"You are bash-cache-priority, an AI program \r\nthat decides which commands the user is most likely to type. I\r\nnput is a list of binaries. Output is an ordered list by likel\r\nihood of being entered on the keyboard. Respond with just the \r\ncommand names in order of likelihood.\"\u001b[39m,\u001b[23X\u001b[26;8H\u001b[1K\u001b[38;5;130m\u001b[C\"prompt\"\u001b[39m: \u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m.join(keys),\u001b[28X\u001b[27;62H\u001b[1K\u001b[4G\u001b[1K\u001b[C}\u001b[28;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[29;44H\u001b[1K\u001b[C78,1\u001b[10X\u001b[10C36%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[30.340069, "o", "\u001b[?25l\u001b[1;16H\u001b[1K\u001b[38;5;130m\u001b[C\"score\"\u001b[39m: \u001b[38;5;130m0\u001b[39m,  \u001b[36m# Default score\u001b[39m\u001b[18X\u001b[2;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[3;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m binary_dict\u001b[5;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_file\u001b(B\u001b[m(file_name):\u001b[7;4H\u001b[1K\u001b[33m\u001b[Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m\"r\"\u001b[39m) \u001b[33mas\u001b[39m file:\u001b[24X\u001b[8;8H\u001b[1K\u001b[Clines = file.readlines()\u001b[30X\u001b[9;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m load_lines(lines)\u001b[10;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mchunker\u001b(B\u001b[m(keys, batch_size):\u001b[12;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Crandom.shuffle(keys)\u001b[13;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i \u001b[33min\u001b[39m \u001b[36m\u001b[1mrange\u001b(B\u001b[m(\u001b[38;5;130m0\u001b[39m, \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys), batch_size):\u001b[17X\u001b[14;8H\u001b[1K\u001b[33m\u001b[Cyield\u001b[39m keys[i : i + batch_size]\u001b[24X\u001b[15;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mrank\u001b(B\u001b[m(keys, host, port, logger):\u001b[27X\r\n    url = f\u001b[38;5;130m\"http://{host}:{port}/api/generate\"\u001b[39m\u001b[16X\u001b[18;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cpayload = {\u001b[19;62H\u001b[1K\u001b[8G\u001b[1K\u001b[38;5;130m\u001b[C\"model\"\u001b[39m: \u001b[38;5;130m\"llama3\"\u001b[39m,\u001b[20;8H\u001b[1K\u001b[38;5;130m\u001b[C\"system\"\u001b[39m: \u001b[38;5;130m\"You are bash-cache-priority, an AI program \r\nthat decides which commands the user is most likely to type. I\r\nnput is a list of binaries. Output is an ordered list by likel\r\nihood of being entered on the keyboard. Respond with just the \r\ncommand names in order of likelihood.\"\u001b[39m,\u001b[23X\u001b[25;8H\u001b[1K\u001b[38;5;130m\u001b[C\"prompt\"\u001b[39m: \u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m.join(keys),\u001b[28X\u001b[26;62H\u001b[1K\u001b[4G\u001b[1K\u001b[C}\u001b[27;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[28;8H\u001b[1K\u001b[Cresponse = requests.post(url, json=payload)\u001b[11X\u001b[29;44H\u001b[1K\u001b[C79,1\u001b[10X\u001b[10C37%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[30.352443, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[12G\u001b[1K\u001b[C}\u001b[2;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m binary_dict\u001b[4;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_file\u001b(B\u001b[m(file_name):\u001b[6;4H\u001b[1K\u001b[33m\u001b[Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m\"r\"\u001b[39m) \u001b[33mas\u001b[39m file:\u001b[24X\u001b[7;8H\u001b[1K\u001b[Clines = file.readlines()\u001b[30X\u001b[8;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m load_lines(lines)\u001b[9;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mchunker\u001b(B\u001b[m(keys, batch_size):\u001b[11;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Crandom.shuffle(keys)\u001b[12;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i \u001b[33min\u001b[39m \u001b[36m\u001b[1mrange\u001b(B\u001b[m(\u001b[38;5;130m0\u001b[39m, \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys), batch_size):\u001b[17X\u001b[13;8H\u001b[1K\u001b[33m\u001b[Cyield\u001b[39m keys[i : i + batch_size]\u001b[24X\u001b[14;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mrank\u001b(B\u001b[m(keys, host, port, logger):\u001b[27X\r\n    url = f\u001b[38;5;130m\"http://{host}:{port}/api/generate\"\u001b[39m\u001b[16X\u001b[17;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cpayload = {\u001b[18;62H\u001b[1K\u001b[8G\u001b[1K\u001b[38;5;130m\u001b[C\"model\"\u001b[39m: \u001b[38;5;130m\"llama3\"\u001b[39m,\u001b[19;8H\u001b[1K\u001b[38;5;130m\u001b[C\"system\"\u001b[39m: \u001b[38;5;130m\"You are bash-cache-priority, an AI program \r\nthat decides which commands the user is most likely to type. I\r\nnput is a list of binaries. Output is an ordered list by likel\r\nihood of being entered on the keyboard. Respond with just the \r\ncommand names in order of likelihood.\"\u001b[39m,\u001b[23X\u001b[24;8H\u001b[1K\u001b[38;5;130m\u001b[C\"prompt\"\u001b[39m: \u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m.join(keys),\u001b[28X\u001b[25;62H\u001b[1K\u001b[4G\u001b[1K\u001b[C}\u001b[26;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[27;8H\u001b[1K\u001b[Cresponse = requests.post(url, json=payload)\u001b[11X\u001b[28;8H\u001b[1K\u001b[Cresponse.raise_for_status()\u001b[27X\u001b[29;44H\u001b[1K\u001b[C80,1\u001b[10X\u001b[10C38%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[30.392552, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\n\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m binary_dict\u001b[3;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_file\u001b(B\u001b[m(file_name):\u001b[5;4H\u001b[1K\u001b[33m\u001b[Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m\"r\"\u001b[39m) \u001b[33mas\u001b[39m file:\u001b[24X\u001b[6;8H\u001b[1K\u001b[Clines = file.readlines()\u001b[30X\u001b[7;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m load_lines(lines)\u001b[8;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mchunker\u001b(B\u001b[m(keys, batch_size):\u001b[10;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Crandom.shuffle(keys)\u001b[11;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i \u001b[33min\u001b[39m \u001b[36m\u001b[1mrange\u001b(B\u001b[m(\u001b[38;5;130m0\u001b[39m, \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys), batch_size):\u001b[17X\u001b[12;8H\u001b[1K\u001b[33m\u001b[Cyield\u001b[39m keys[i : i + batch_size]\u001b[24X\u001b[13;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mrank\u001b(B\u001b[m(keys, host, port, logger):\u001b[27X\r\n    url = f\u001b[38;5;130m\"http://{host}:{port}/api/generate\"\u001b[39m\u001b[16X\u001b[16;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cpayload = {\u001b[17;62H\u001b[1K\u001b[8G\u001b[1K\u001b[38;5;130m\u001b[C\"model\"\u001b[39m: \u001b[38;5;130m\"llama3\"\u001b[39m,\u001b[18;8H\u001b[1K\u001b[38;5;130m\u001b[C\"system\"\u001b[39m: \u001b[38;5;130m\"You are bash-cache-priority, an AI program \r\nthat decides which commands the user is most likely to type. I\r\nnput is a list of binaries. Output is an ordered list by likel\r\nihood of being entered on the keyboard. Respond with just the \r\ncommand names in order of likelihood.\"\u001b[39m,\u001b[23X\u001b[23;8H\u001b[1K\u001b[38;5;130m\u001b[C\"prompt\"\u001b[39m: \u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m.join(keys),\u001b[28X\u001b[24;62H\u001b[1K\u001b[4G\u001b[1K\u001b[C}\u001b[25;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[26;8H\u001b[1K\u001b[Cresponse = requests.post(url, json=payload)\u001b[11X\u001b[27;8H\u001b[1K\u001b[Cresponse.raise_for_status()\u001b[27X\u001b[28;62H\u001b[1K\u001b[29;44H\u001b[1K\u001b[C81,0-1\u001b[8X\u001b[8C38%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[30.412561, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m binary_dict\u001b[2;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_file\u001b(B\u001b[m(file_name):\u001b[4;4H\u001b[1K\u001b[33m\u001b[Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m\"r\"\u001b[39m) \u001b[33mas\u001b[39m file:\u001b[24X\u001b[5;8H\u001b[1K\u001b[Clines = file.readlines()\u001b[30X\u001b[6;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m load_lines(lines)\u001b[7;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mchunker\u001b(B\u001b[m(keys, batch_size):\u001b[9;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Crandom.shuffle(keys)\u001b[10;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i \u001b[33min\u001b[39m \u001b[36m\u001b[1mrange\u001b(B\u001b[m(\u001b[38;5;130m0\u001b[39m, \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys), batch_size):\u001b[17X\u001b[11;8H\u001b[1K\u001b[33m\u001b[Cyield\u001b[39m keys[i : i + batch_size]\u001b[24X\u001b[12;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mrank\u001b(B\u001b[m(keys, host, port, logger):\u001b[27X\r\n    url = f\u001b[38;5;130m\"http://{host}:{port}/api/generate\"\u001b[39m\u001b[16X\u001b[15;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cpayload = {\u001b[16;62H\u001b[1K\u001b[8G\u001b[1K\u001b[38;5;130m\u001b[C\"model\"\u001b[39m: \u001b[38;5;130m\"llama3\"\u001b[39m,\u001b[17;8H\u001b[1K\u001b[38;5;130m\u001b[C\"system\"\u001b[39m: \u001b[38;5;130m\"You are bash-cache-priority, an AI program \r\nthat decides which commands the user is most likely to type. I\r\nnput is a list of binaries. Output is an ordered list by likel\r\nihood of being entered on the keyboard. Respond with just the \r\ncommand names in order of likelihood.\"\u001b[39m,\u001b[23X\u001b[22;8H\u001b[1K\u001b[38;5;130m\u001b[C\"prompt\"\u001b[39m: \u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m.join(keys),\u001b[28X\u001b[23;62H\u001b[1K\u001b[4G\u001b[1K\u001b[C}\u001b[24;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[25;8H\u001b[1K\u001b[Cresponse = requests.post(url, json=payload)\u001b[11X\u001b[26;8H\u001b[1K\u001b[Cresponse.raise_for_status()\u001b[27X\u001b[27;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cresponses = []\u001b[29;44H\u001b[1K\u001b[C82,1\u001b[10X\u001b[10C39%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[30.454422, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mload_file\u001b(B\u001b[m(file_name):\u001b[3;4H\u001b[1K\u001b[33m\u001b[Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m\"r\"\u001b[39m) \u001b[33mas\u001b[39m file:\u001b[24X\u001b[4;8H\u001b[1K\u001b[Clines = file.readlines()\u001b[30X\u001b[5;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m load_lines(lines)\u001b[6;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mchunker\u001b(B\u001b[m(keys, batch_size):\u001b[8;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Crandom.shuffle(keys)\u001b[9;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i \u001b[33min\u001b[39m \u001b[36m\u001b[1mrange\u001b(B\u001b[m(\u001b[38;5;130m0\u001b[39m, \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys), batch_size):\u001b[17X\u001b[10;8H\u001b[1K\u001b[33m\u001b[Cyield\u001b[39m keys[i : i + batch_size]\u001b[24X\u001b[11;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mrank\u001b(B\u001b[m(keys, host, port, logger):\u001b[27X\r\n    url = f\u001b[38;5;130m\"http://{host}:{port}/api/generate\"\u001b[39m\u001b[16X\u001b[14;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cpayload = {\u001b[15;62H\u001b[1K\u001b[8G\u001b[1K\u001b[38;5;130m\u001b[C\"model\"\u001b[39m: \u001b[38;5;130m\"llama3\"\u001b[39m,\u001b[16;8H\u001b[1K\u001b[38;5;130m\u001b[C\"system\"\u001b[39m: \u001b[38;5;130m\"You are bash-cache-priority, an AI program \r\nthat decides which commands the user is most likely to type. I\r\nnput is a list of binaries. Output is an ordered list by likel\r\nihood of being entered on the keyboard. Respond with just the \r\ncommand names in order of likelihood.\"\u001b[39m,\u001b[23X\u001b[21;8H\u001b[1K\u001b[38;5;130m\u001b[C\"prompt\"\u001b[39m: \u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m.join(keys),\u001b[28X\u001b[22;62H\u001b[1K\u001b[4G\u001b[1K\u001b[C}\u001b[23;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[24;8H\u001b[1K\u001b[Cresponse = requests.post(url, json=payload)\u001b[11X\u001b[25;8H\u001b[1K\u001b[Cresponse.raise_for_status()\u001b[27X\u001b[26;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cresponses = []\u001b[28;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m response.text.strip().split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m):\u001b[8X\u001b[29;44H\u001b[1K\u001b[C83,1\u001b[10X\u001b[10C40%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[30.474645, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[33m\u001b[Hdef\u001b[39m \u001b[36m\u001b[1mload_file\u001b(B\u001b[m(file_name):\u001b[2;4H\u001b[1K\u001b[33m\u001b[Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m\"r\"\u001b[39m) \u001b[33mas\u001b[39m file:\u001b[24X\u001b[3;8H\u001b[1K\u001b[Clines = file.readlines()\u001b[30X\u001b[4;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m load_lines(lines)\u001b[5;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mchunker\u001b(B\u001b[m(keys, batch_size):\u001b[7;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Crandom.shuffle(keys)\u001b[8;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i \u001b[33min\u001b[39m \u001b[36m\u001b[1mrange\u001b(B\u001b[m(\u001b[38;5;130m0\u001b[39m, \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys), batch_size):\u001b[17X\u001b[9;8H\u001b[1K\u001b[33m\u001b[Cyield\u001b[39m keys[i : i + batch_size]\u001b[24X\u001b[10;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mrank\u001b(B\u001b[m(keys, host, port, logger):\u001b[27X\r\n    url = f\u001b[38;5;130m\"http://{host}:{port}/api/generate\"\u001b[39m\u001b[16X\u001b[13;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cpayload = {\u001b[14;62H\u001b[1K\u001b[8G\u001b[1K\u001b[38;5;130m\u001b[C\"model\"\u001b[39m: \u001b[38;5;130m\"llama3\"\u001b[39m,\u001b[15;8H\u001b[1K\u001b[38;5;130m\u001b[C\"system\"\u001b[39m: \u001b[38;5;130m\"You are bash-cache-priority, an AI program \r\nthat decides which commands the user is most likely to type. I\r\nnput is a list of binaries. Output is an ordered list by likel\r\nihood of being entered on the keyboard. Respond with just the \r\ncommand names in order of likelihood.\"\u001b[39m,\u001b[23X\u001b[20;8H\u001b[1K\u001b[38;5;130m\u001b[C\"prompt\"\u001b[39m: \u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m.join(keys),\u001b[28X\u001b[21;62H\u001b[1K\u001b[4G\u001b[1K\u001b[C}\u001b[22;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[23;8H\u001b[1K\u001b[Cresponse = requests.post(url, json=payload)\u001b[11X\u001b[24;8H\u001b[1K\u001b[Cresponse.raise_for_status()\u001b[27X\u001b[25;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cresponses = []\u001b[27;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m response.text.strip().split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m):\u001b[8X\u001b[28;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[29;44H\u001b[1K\u001b[C84,1\u001b[10X\u001b[10C40%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[30.514603, "o", "\u001b[?25l\u001b[1;4H\u001b[1K\u001b[33m\u001b[Cwith\u001b[39m \u001b[36m\u001b[1mopen\u001b(B\u001b[m(file_name, \u001b[38;5;130m\"r\"\u001b[39m) \u001b[33mas\u001b[39m file:\u001b[24X\u001b[2;8H\u001b[1K\u001b[Clines = file.readlines()\u001b[30X\u001b[3;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m load_lines(lines)\u001b[4;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mchunker\u001b(B\u001b[m(keys, batch_size):\u001b[6;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Crandom.shuffle(keys)\u001b[7;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i \u001b[33min\u001b[39m \u001b[36m\u001b[1mrange\u001b(B\u001b[m(\u001b[38;5;130m0\u001b[39m, \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys), batch_size):\u001b[17X\u001b[8;8H\u001b[1K\u001b[33m\u001b[Cyield\u001b[39m keys[i : i + batch_size]\u001b[24X\u001b[9;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mrank\u001b(B\u001b[m(keys, host, port, logger):\u001b[27X\r\n    url = f\u001b[38;5;130m\"http://{host}:{port}/api/generate\"\u001b[39m\u001b[16X\u001b[12;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cpayload = {\u001b[13;62H\u001b[1K\u001b[8G\u001b[1K\u001b[38;5;130m\u001b[C\"model\"\u001b[39m: \u001b[38;5;130m\"llama3\"\u001b[39m,\u001b[14;8H\u001b[1K\u001b[38;5;130m\u001b[C\"system\"\u001b[39m: \u001b[38;5;130m\"You are bash-cache-priority, an AI program \r\nthat decides which commands the user is most likely to type. I\r\nnput is a list of binaries. Output is an ordered list by likel\r\nihood of being entered on the keyboard. Respond with just the \r\ncommand names in order of likelihood.\"\u001b[39m,\u001b[23X\u001b[19;8H\u001b[1K\u001b[38;5;130m\u001b[C\"prompt\"\u001b[39m: \u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m.join(keys),\u001b[28X\u001b[20;62H\u001b[1K\u001b[4G\u001b[1K\u001b[C}\u001b[21;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[22;8H\u001b[1K\u001b[Cresponse = requests.post(url, json=payload)\u001b[11X\u001b[23;8H\u001b[1K\u001b[Cresponse.raise_for_status()\u001b[27X\u001b[24;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cresponses = []\u001b[26;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m response.text.strip().split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m):\u001b[8X\u001b[27;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[28;16H\u001b[1K\u001b[Cdata = json.loads(line)\u001b[23X\u001b[29;44H\u001b[1K\u001b[C85,1\u001b[10X\u001b[10C41%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[30.535597, "o", "\u001b[?25l\u001b[1;8H\u001b[1K\u001b[Clines = file.readlines()\u001b[30X\u001b[2;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m load_lines(lines)\u001b[3;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mchunker\u001b(B\u001b[m(keys, batch_size):\u001b[5;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Crandom.shuffle(keys)\u001b[6;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i \u001b[33min\u001b[39m \u001b[36m\u001b[1mrange\u001b(B\u001b[m(\u001b[38;5;130m0\u001b[39m, \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys), batch_size):\u001b[17X\u001b[7;8H\u001b[1K\u001b[33m\u001b[Cyield\u001b[39m keys[i : i + batch_size]\u001b[24X\u001b[8;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mrank\u001b(B\u001b[m(keys, host, port, logger):\u001b[27X\r\n    url = f\u001b[38;5;130m\"http://{host}:{port}/api/generate\"\u001b[39m\u001b[16X\u001b[11;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cpayload = {\u001b[12;62H\u001b[1K\u001b[8G\u001b[1K\u001b[38;5;130m\u001b[C\"model\"\u001b[39m: \u001b[38;5;130m\"llama3\"\u001b[39m,\u001b[13;8H\u001b[1K\u001b[38;5;130m\u001b[C\"system\"\u001b[39m: \u001b[38;5;130m\"You are bash-cache-priority, an AI program \r\nthat decides which commands the user is most likely to type. I\r\nnput is a list of binaries. Output is an ordered list by likel\r\nihood of being entered on the keyboard. Respond with just the \r\ncommand names in order of likelihood.\"\u001b[39m,\u001b[23X\u001b[18;8H\u001b[1K\u001b[38;5;130m\u001b[C\"prompt\"\u001b[39m: \u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m.join(keys),\u001b[28X\u001b[19;62H\u001b[1K\u001b[4G\u001b[1K\u001b[C}\u001b[20;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[21;8H\u001b[1K\u001b[Cresponse = requests.post(url, json=payload)\u001b[11X\u001b[22;8H\u001b[1K\u001b[Cresponse.raise_for_status()\u001b[27X\u001b[23;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cresponses = []\u001b[25;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m response.text.strip().split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m):\u001b[8X\u001b[26;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[27;16H\u001b[1K\u001b[Cdata = json.loads(line)\u001b[23X\u001b[28;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[38;5;130m\"response\"\u001b[39m \u001b[33min\u001b[39m data:\u001b[24X\u001b[29;44H\u001b[1K\u001b[C86,1\u001b[10X\u001b[10C42%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[30.575853, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m load_lines(lines)\u001b[2;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mchunker\u001b(B\u001b[m(keys, batch_size):\u001b[4;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Crandom.shuffle(keys)\u001b[5;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i \u001b[33min\u001b[39m \u001b[36m\u001b[1mrange\u001b(B\u001b[m(\u001b[38;5;130m0\u001b[39m, \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys), batch_size):\u001b[17X\u001b[6;8H\u001b[1K\u001b[33m\u001b[Cyield\u001b[39m keys[i : i + batch_size]\u001b[24X\u001b[7;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mrank\u001b(B\u001b[m(keys, host, port, logger):\u001b[27X\r\n    url = f\u001b[38;5;130m\"http://{host}:{port}/api/generate\"\u001b[39m\u001b[16X\u001b[10;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cpayload = {\u001b[11;62H\u001b[1K\u001b[8G\u001b[1K\u001b[38;5;130m\u001b[C\"model\"\u001b[39m: \u001b[38;5;130m\"llama3\"\u001b[39m,\u001b[12;8H\u001b[1K\u001b[38;5;130m\u001b[C\"system\"\u001b[39m: \u001b[38;5;130m\"You are bash-cache-priority, an AI program \r\nthat decides which commands the user is most likely to type. I\r\nnput is a list of binaries. Output is an ordered list by likel\r\nihood of being entered on the keyboard. Respond with just the \r\ncommand names in order of likelihood.\"\u001b[39m,\u001b[23X\u001b[17;8H\u001b[1K\u001b[38;5;130m\u001b[C\"prompt\"\u001b[39m: \u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m.join(keys),\u001b[28X\u001b[18;62H\u001b[1K\u001b[4G\u001b[1K\u001b[C}\u001b[19;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[20;8H\u001b[1K\u001b[Cresponse = requests.post(url, json=payload)\u001b[11X\u001b[21;8H\u001b[1K\u001b[Cresponse.raise_for_status()\u001b[27X\u001b[22;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cresponses = []\u001b[24;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m response.text.strip().split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m):\u001b[8X\u001b[25;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[26;16H\u001b[1K\u001b[Cdata = json.loads(line)\u001b[23X\u001b[27;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[38;5;130m\"response\"\u001b[39m \u001b[33min\u001b[39m data:\u001b[24X\u001b[28;20H\u001b[1K\u001b[Cresponses.append(data[\u001b[38;5;130m\"response\"\u001b[39m])\u001b[8X\u001b[29;44H\u001b[1K\u001b[C87,1\u001b[10X\u001b[10C42%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[30.595317, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mchunker\u001b(B\u001b[m(keys, batch_size):\u001b[3;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Crandom.shuffle(keys)\u001b[4;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i \u001b[33min\u001b[39m \u001b[36m\u001b[1mrange\u001b(B\u001b[m(\u001b[38;5;130m0\u001b[39m, \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys), batch_size):\u001b[17X\u001b[5;8H\u001b[1K\u001b[33m\u001b[Cyield\u001b[39m keys[i : i + batch_size]\u001b[24X\u001b[6;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mrank\u001b(B\u001b[m(keys, host, port, logger):\u001b[27X\r\n    url = f\u001b[38;5;130m\"http://{host}:{port}/api/generate\"\u001b[39m\u001b[16X\u001b[9;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cpayload = {\u001b[10;62H\u001b[1K\u001b[8G\u001b[1K\u001b[38;5;130m\u001b[C\"model\"\u001b[39m: \u001b[38;5;130m\"llama3\"\u001b[39m,\u001b[11;8H\u001b[1K\u001b[38;5;130m\u001b[C\"system\"\u001b[39m: \u001b[38;5;130m\"You are bash-cache-priority, an AI program \r\nthat decides which commands the user is most likely to type. I\r\nnput is a list of binaries. Output is an ordered list by likel\r\nihood of being entered on the keyboard. Respond with just the \r\ncommand names in order of likelihood.\"\u001b[39m,\u001b[23X\u001b[16;8H\u001b[1K\u001b[38;5;130m\u001b[C\"prompt\"\u001b[39m: \u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m.join(keys),\u001b[28X\u001b[17;62H\u001b[1K\u001b[4G\u001b[1K\u001b[C}\u001b[18;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[19;8H\u001b[1K\u001b[Cresponse = requests.post(url, json=payload)\u001b[11X\u001b[20;8H\u001b[1K\u001b[Cresponse.raise_for_status()\u001b[27X\u001b[21;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cresponses = []\u001b[23;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m response.text.strip().split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m):\u001b[8X\u001b[24;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[25;16H\u001b[1K\u001b[Cdata = json.loads(line)\u001b[23X\u001b[26;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[38;5;130m\"response\"\u001b[39m \u001b[33min\u001b[39m data:\u001b[24X\u001b[27;20H\u001b[1K\u001b[Cresponses.append(data[\u001b[38;5;130m\"response\"\u001b[39m])\u001b[8X\u001b[28;12H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m json.JSONDecodeError \u001b[33mas\u001b[39m e:\u001b[17X\u001b[29;44H\u001b[1K\u001b[C88,1\u001b[10X\u001b[10C43%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[30.791715, "o", "\u001b[29;46H7\u001b[27;1H"]
[31.296639, "o", "\u001b[29;46H6\u001b[26;1H"]
[31.300438, "o", "\u001b[29;46H5\u001b[25;1H"]
[31.341006, "o", "\u001b[29;46H4\u001b[24;1H"]
[31.360225, "o", "\u001b[29;46H3\u001b[23;1H"]
[31.399693, "o", "\u001b[29;46H2\u001b[22;1H"]
[31.419704, "o", "\u001b[29;46H1,0-1\u001b[21;1H"]
[31.459943, "o", "\u001b[29;46H0,1  \u001b[20;1H"]
[31.4804, "o", "\u001b[29;45H79\u001b[19;1H"]
[31.520394, "o", "\u001b[29;46H8\u001b[18;1H"]
[31.53946, "o", "\u001b[29;46H7\u001b[17;1H"]
[31.580553, "o", "\u001b[29;46H6\u001b[16;1H"]
[31.600312, "o", "\u001b[29;46H5\u001b[11;1H"]
[31.639811, "o", "\u001b[29;46H4\u001b[10;1H"]
[32.056461, "o", "\u001b[29;46H5\u001b[11;1H"]
[32.778846, "o", "\u001b[29;46H6\u001b[16;1H"]
[33.002757, "o", "\u001b[29;46H7\u001b[17;1H"]
[33.502165, "o", "\u001b[29;46H8\u001b[18;1H"]
[33.527671, "o", "\u001b[29;46H9\u001b[19;1H"]
[33.547046, "o", "\u001b[29;45H80\u001b[20;1H"]
[33.586857, "o", "\u001b[29;46H1,0-1\u001b[21;1H"]
[33.606343, "o", "\u001b[29;46H2,1  \u001b[22;1H"]
[33.64522, "o", "\u001b[29;46H3\u001b[23;1H"]
[33.666208, "o", "\u001b[29;46H4\u001b[24;1H"]
[33.704969, "o", "\u001b[29;46H5\u001b[25;1H"]
[33.723938, "o", "\u001b[29;46H6\u001b[26;1H"]
[33.764432, "o", "\u001b[29;46H7\u001b[27;1H"]
[33.784436, "o", "\u001b[29;46H8\u001b[28;1H"]
[33.827076, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Crandom.shuffle(keys)\u001b[2;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i \u001b[33min\u001b[39m \u001b[36m\u001b[1mrange\u001b(B\u001b[m(\u001b[38;5;130m0\u001b[39m, \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys), batch_size):\u001b[17X\u001b[3;8H\u001b[1K\u001b[33m\u001b[Cyield\u001b[39m keys[i : i + batch_size]\u001b[24X\u001b[4;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mrank\u001b(B\u001b[m(keys, host, port, logger):\u001b[27X\r\n    url = f\u001b[38;5;130m\"http://{host}:{port}/api/generate\"\u001b[39m\u001b[16X\u001b[7;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cpayload = {\u001b[8;62H\u001b[1K\u001b[8G\u001b[1K\u001b[38;5;130m\u001b[C\"model\"\u001b[39m: \u001b[38;5;130m\"llama3\"\u001b[39m,\u001b[9;8H\u001b[1K\u001b[38;5;130m\u001b[C\"system\"\u001b[39m: \u001b[38;5;130m\"You are bash-cache-priority, an AI program \r\nthat decides which commands the user is most likely to type. I\r\nnput is a list of binaries. Output is an ordered list by likel\r\nihood of being entered on the keyboard. Respond with just the \r\ncommand names in order of likelihood.\"\u001b[39m,\u001b[23X\u001b[14;8H\u001b[1K\u001b[38;5;130m\u001b[C\"prompt\"\u001b[39m: \u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m.join(keys),\u001b[28X\u001b[15;62H\u001b[1K\u001b[4G\u001b[1K\u001b[C}\u001b[16;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[17;8H\u001b[1K\u001b[Cresponse = requests.post(url, json=payload)\u001b[11X\u001b[18;8H\u001b[1K\u001b[Cresponse.raise_for_status()\u001b[27X\u001b[19;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cresponses = []\u001b[21;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m response.text.strip().split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m):\u001b[8X\u001b[22;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[23;16H\u001b[1K\u001b[Cdata = json.loads(line)\u001b[23X\u001b[24;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[38;5;130m\"response\"\u001b[39m \u001b[33min\u001b[39m data:\u001b[24X\u001b[25;20H\u001b[1K\u001b[Cresponses.append(data[\u001b[38;5;130m\"response\"\u001b[39m])\u001b[8X\u001b[26;12H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m json.JSONDecodeError \u001b[33mas\u001b[39m e:\u001b[17X\u001b[27;16H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"JSON decode error: {e} with lin\u001b[39m\u001b[28;62H\u001b[1K\u001b[38;5;130m\re: {line}\"\u001b[39m)\u001b[29;44H\u001b[1K\u001b[C89,1\u001b[10X\u001b[10C44%\u001b[1X\u001b[?12l\u001b[?25h\u001b[27;1H"]
[34.018207, "o", "\u001b[?25l\u001b[1;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i \u001b[33min\u001b[39m \u001b[36m\u001b[1mrange\u001b(B\u001b[m(\u001b[38;5;130m0\u001b[39m, \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys), batch_size):\u001b[17X\u001b[2;8H\u001b[1K\u001b[33m\u001b[Cyield\u001b[39m keys[i : i + batch_size]\u001b[24X\u001b[3;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mrank\u001b(B\u001b[m(keys, host, port, logger):\u001b[27X\r\n    url = f\u001b[38;5;130m\"http://{host}:{port}/api/generate\"\u001b[39m\u001b[16X\u001b[6;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cpayload = {\u001b[7;62H\u001b[1K\u001b[8G\u001b[1K\u001b[38;5;130m\u001b[C\"model\"\u001b[39m: \u001b[38;5;130m\"llama3\"\u001b[39m,\u001b[8;8H\u001b[1K\u001b[38;5;130m\u001b[C\"system\"\u001b[39m: \u001b[38;5;130m\"You are bash-cache-priority, an AI program \r\nthat decides which commands the user is most likely to type. I\r\nnput is a list of binaries. Output is an ordered list by likel\r\nihood of being entered on the keyboard. Respond with just the \r\ncommand names in order of likelihood.\"\u001b[39m,\u001b[23X\u001b[13;8H\u001b[1K\u001b[38;5;130m\u001b[C\"prompt\"\u001b[39m: \u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m.join(keys),\u001b[28X\u001b[14;62H\u001b[1K\u001b[4G\u001b[1K\u001b[C}\u001b[15;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[16;8H\u001b[1K\u001b[Cresponse = requests.post(url, json=payload)\u001b[11X\u001b[17;8H\u001b[1K\u001b[Cresponse.raise_for_status()\u001b[27X\u001b[18;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cresponses = []\u001b[20;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m response.text.strip().split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m):\u001b[8X\u001b[21;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[22;16H\u001b[1K\u001b[Cdata = json.loads(line)\u001b[23X\u001b[23;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[38;5;130m\"response\"\u001b[39m \u001b[33min\u001b[39m data:\u001b[24X\u001b[24;20H\u001b[1K\u001b[Cresponses.append(data[\u001b[38;5;130m\"response\"\u001b[39m])\u001b[8X\u001b[25;12H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m json.JSONDecodeError \u001b[33mas\u001b[39m e:\u001b[17X\u001b[26;16H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"JSON decode error: {e} with lin\u001b[39m\u001b[27;62H\u001b[1K\u001b[38;5;130m\re: {line}\"\u001b[39m)\u001b[28;62H\u001b[1K\u001b[16G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[29;44H\u001b[1K\u001b[C90,1\u001b[10X\u001b[10C45%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[34.182403, "o", "\u001b[?25l\u001b[1;8H\u001b[1K\u001b[33m\u001b[Cyield\u001b[39m keys[i : i + batch_size]\u001b[24X\u001b[2;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mrank\u001b(B\u001b[m(keys, host, port, logger):\u001b[27X\r\n    url = f\u001b[38;5;130m\"http://{host}:{port}/api/generate\"\u001b[39m\u001b[16X\u001b[5;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cpayload = {\u001b[6;62H\u001b[1K\u001b[8G\u001b[1K\u001b[38;5;130m\u001b[C\"model\"\u001b[39m: \u001b[38;5;130m\"llama3\"\u001b[39m,\u001b[7;8H\u001b[1K\u001b[38;5;130m\u001b[C\"system\"\u001b[39m: \u001b[38;5;130m\"You are bash-cache-priority, an AI program \r\nthat decides which commands the user is most likely to type. I\r\nnput is a list of binaries. Output is an ordered list by likel\r\nihood of being entered on the keyboard. Respond with just the \r\ncommand names in order of likelihood.\"\u001b[39m,\u001b[23X\u001b[12;8H\u001b[1K\u001b[38;5;130m\u001b[C\"prompt\"\u001b[39m: \u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m.join(keys),\u001b[28X\u001b[13;62H\u001b[1K\u001b[4G\u001b[1K\u001b[C}\u001b[14;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[15;8H\u001b[1K\u001b[Cresponse = requests.post(url, json=payload)\u001b[11X\u001b[16;8H\u001b[1K\u001b[Cresponse.raise_for_status()\u001b[27X\u001b[17;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cresponses = []\u001b[19;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m response.text.strip().split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m):\u001b[8X\u001b[20;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[21;16H\u001b[1K\u001b[Cdata = json.loads(line)\u001b[23X\u001b[22;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[38;5;130m\"response\"\u001b[39m \u001b[33min\u001b[39m data:\u001b[24X\u001b[23;20H\u001b[1K\u001b[Cresponses.append(data[\u001b[38;5;130m\"response\"\u001b[39m])\u001b[8X\u001b[24;12H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m json.JSONDecodeError \u001b[33mas\u001b[39m e:\u001b[17X\u001b[25;16H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"JSON decode error: {e} with lin\u001b[39m\u001b[26;62H\u001b[1K\u001b[38;5;130m\re: {line}\"\u001b[39m)\u001b[27;62H\u001b[1K\u001b[16G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[28;62H\u001b[1K\u001b[29;44H\u001b[1K\u001b[C91,0-1\u001b[8X\u001b[8C45%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[34.342874, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mrank\u001b(B\u001b[m(keys, host, port, logger):\u001b[27X\r\n    url = f\u001b[38;5;130m\"http://{host}:{port}/api/generate\"\u001b[39m\u001b[16X\u001b[4;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cpayload = {\u001b[5;62H\u001b[1K\u001b[8G\u001b[1K\u001b[38;5;130m\u001b[C\"model\"\u001b[39m: \u001b[38;5;130m\"llama3\"\u001b[39m,\u001b[6;8H\u001b[1K\u001b[38;5;130m\u001b[C\"system\"\u001b[39m: \u001b[38;5;130m\"You are bash-cache-priority, an AI program \r\nthat decides which commands the user is most likely to type. I\r\nnput is a list of binaries. Output is an ordered list by likel\r\nihood of being entered on the keyboard. Respond with just the \r\ncommand names in order of likelihood.\"\u001b[39m,\u001b[23X\u001b[11;8H\u001b[1K\u001b[38;5;130m\u001b[C\"prompt\"\u001b[39m: \u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m.join(keys),\u001b[28X\u001b[12;62H\u001b[1K\u001b[4G\u001b[1K\u001b[C}\u001b[13;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[14;8H\u001b[1K\u001b[Cresponse = requests.post(url, json=payload)\u001b[11X\u001b[15;8H\u001b[1K\u001b[Cresponse.raise_for_status()\u001b[27X\u001b[16;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cresponses = []\u001b[18;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m response.text.strip().split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m):\u001b[8X\u001b[19;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[20;16H\u001b[1K\u001b[Cdata = json.loads(line)\u001b[23X\u001b[21;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[38;5;130m\"response\"\u001b[39m \u001b[33min\u001b[39m data:\u001b[24X\u001b[22;20H\u001b[1K\u001b[Cresponses.append(data[\u001b[38;5;130m\"response\"\u001b[39m])\u001b[8X\u001b[23;12H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m json.JSONDecodeError \u001b[33mas\u001b[39m e:\u001b[17X\u001b[24;16H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"JSON decode error: {e} with lin\u001b[39m\u001b[25;62H\u001b[1K\u001b[38;5;130m\re: {line}\"\u001b[39m)\u001b[26;62H\u001b[1K\u001b[16G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[27;62H\u001b[1K\u001b[28;8H\u001b[1K\u001b[Coutput = \u001b[38;5;130m\"\"\u001b[39m.join(responses).split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m)\u001b[15X\u001b[29;44H\u001b[1K\u001b[C92,1\u001b[10X\u001b[10C46%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[34.501137, "o", "\u001b[?25l\u001b[33m\u001b[Hdef\u001b[39m \u001b[36m\u001b[1mrank\u001b(B\u001b[m(keys, host, port, logger):\u001b[27X\r\n    url = f\u001b[38;5;130m\"http://{host}:{port}/api/generate\"\u001b[39m\u001b[16X\u001b[3;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cpayload = {\u001b[4;62H\u001b[1K\u001b[8G\u001b[1K\u001b[38;5;130m\u001b[C\"model\"\u001b[39m: \u001b[38;5;130m\"llama3\"\u001b[39m,\u001b[5;8H\u001b[1K\u001b[38;5;130m\u001b[C\"system\"\u001b[39m: \u001b[38;5;130m\"You are bash-cache-priority, an AI program \r\nthat decides which commands the user is most likely to type. I\r\nnput is a list of binaries. Output is an ordered list by likel\r\nihood of being entered on the keyboard. Respond with just the \r\ncommand names in order of likelihood.\"\u001b[39m,\u001b[23X\u001b[10;8H\u001b[1K\u001b[38;5;130m\u001b[C\"prompt\"\u001b[39m: \u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m.join(keys),\u001b[28X\u001b[11;62H\u001b[1K\u001b[4G\u001b[1K\u001b[C}\u001b[12;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[13;8H\u001b[1K\u001b[Cresponse = requests.post(url, json=payload)\u001b[11X\u001b[14;8H\u001b[1K\u001b[Cresponse.raise_for_status()\u001b[27X\u001b[15;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cresponses = []\u001b[17;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m response.text.strip().split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m):\u001b[8X\u001b[18;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[19;16H\u001b[1K\u001b[Cdata = json.loads(line)\u001b[23X\u001b[20;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[38;5;130m\"response\"\u001b[39m \u001b[33min\u001b[39m data:\u001b[24X\u001b[21;20H\u001b[1K\u001b[Cresponses.append(data[\u001b[38;5;130m\"response\"\u001b[39m])\u001b[8X\u001b[22;12H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m json.JSONDecodeError \u001b[33mas\u001b[39m e:\u001b[17X\u001b[23;16H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"JSON decode error: {e} with lin\u001b[39m\u001b[24;62H\u001b[1K\u001b[38;5;130m\re: {line}\"\u001b[39m)\u001b[25;62H\u001b[1K\u001b[16G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[26;62H\u001b[1K\u001b[27;8H\u001b[1K\u001b[Coutput = \u001b[38;5;130m\"\"\u001b[39m.join(responses).split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m)\u001b[15X\u001b[28;62H\u001b[1K\u001b[29;44H\u001b[1K\u001b[C93,0-1\u001b[8X\u001b[8C47%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[34.66199, "o", "\u001b[?25l\u001b[H    url = f\u001b[38;5;130m\"http://{host}:{port}/api/generate\"\u001b[39m\u001b[16X\u001b[2;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cpayload = {\u001b[3;62H\u001b[1K\u001b[8G\u001b[1K\u001b[38;5;130m\u001b[C\"model\"\u001b[39m: \u001b[38;5;130m\"llama3\"\u001b[39m,\u001b[4;8H\u001b[1K\u001b[38;5;130m\u001b[C\"system\"\u001b[39m: \u001b[38;5;130m\"You are bash-cache-priority, an AI program \r\nthat decides which commands the user is most likely to type. I\r\nnput is a list of binaries. Output is an ordered list by likel\r\nihood of being entered on the keyboard. Respond with just the \r\ncommand names in order of likelihood.\"\u001b[39m,\u001b[23X\u001b[9;8H\u001b[1K\u001b[38;5;130m\u001b[C\"prompt\"\u001b[39m: \u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m.join(keys),\u001b[28X\u001b[10;62H\u001b[1K\u001b[4G\u001b[1K\u001b[C}\u001b[11;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[12;8H\u001b[1K\u001b[Cresponse = requests.post(url, json=payload)\u001b[11X\u001b[13;8H\u001b[1K\u001b[Cresponse.raise_for_status()\u001b[27X\u001b[14;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cresponses = []\u001b[16;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m response.text.strip().split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m):\u001b[8X\u001b[17;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[18;16H\u001b[1K\u001b[Cdata = json.loads(line)\u001b[23X\u001b[19;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[38;5;130m\"response\"\u001b[39m \u001b[33min\u001b[39m data:\u001b[24X\u001b[20;20H\u001b[1K\u001b[Cresponses.append(data[\u001b[38;5;130m\"response\"\u001b[39m])\u001b[8X\u001b[21;12H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m json.JSONDecodeError \u001b[33mas\u001b[39m e:\u001b[17X\u001b[22;16H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"JSON decode error: {e} with lin\u001b[39m\u001b[23;62H\u001b[1K\u001b[38;5;130m\re: {line}\"\u001b[39m)\u001b[24;62H\u001b[1K\u001b[16G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[25;62H\u001b[1K\u001b[26;8H\u001b[1K\u001b[Coutput = \u001b[38;5;130m\"\"\u001b[39m.join(responses).split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m)\u001b[15X\u001b[27;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cfiltered_output = []\u001b[29;44H\u001b[1K\u001b[C94,1\u001b[10X\u001b[10C47%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[34.804731, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Cpayload = {\u001b[2;62H\u001b[1K\u001b[8G\u001b[1K\u001b[38;5;130m\u001b[C\"model\"\u001b[39m: \u001b[38;5;130m\"llama3\"\u001b[39m,\u001b[3;8H\u001b[1K\u001b[38;5;130m\u001b[C\"system\"\u001b[39m: \u001b[38;5;130m\"You are bash-cache-priority, an AI program \r\nthat decides which commands the user is most likely to type. I\r\nnput is a list of binaries. Output is an ordered list by likel\r\nihood of being entered on the keyboard. Respond with just the \r\ncommand names in order of likelihood.\"\u001b[39m,\u001b[23X\u001b[8;8H\u001b[1K\u001b[38;5;130m\u001b[C\"prompt\"\u001b[39m: \u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m.join(keys),\u001b[28X\u001b[9;62H\u001b[1K\u001b[4G\u001b[1K\u001b[C}\u001b[10;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[11;8H\u001b[1K\u001b[Cresponse = requests.post(url, json=payload)\u001b[11X\u001b[12;8H\u001b[1K\u001b[Cresponse.raise_for_status()\u001b[27X\u001b[13;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cresponses = []\u001b[15;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m response.text.strip().split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m):\u001b[8X\u001b[16;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[17;16H\u001b[1K\u001b[Cdata = json.loads(line)\u001b[23X\u001b[18;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[38;5;130m\"response\"\u001b[39m \u001b[33min\u001b[39m data:\u001b[24X\u001b[19;20H\u001b[1K\u001b[Cresponses.append(data[\u001b[38;5;130m\"response\"\u001b[39m])\u001b[8X\u001b[20;12H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m json.JSONDecodeError \u001b[33mas\u001b[39m e:\u001b[17X\u001b[21;16H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"JSON decode error: {e} with lin\u001b[39m\u001b[22;62H\u001b[1K\u001b[38;5;130m\re: {line}\"\u001b[39m)\u001b[23;62H\u001b[1K\u001b[16G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[24;62H\u001b[1K\u001b[25;8H\u001b[1K\u001b[Coutput = \u001b[38;5;130m\"\"\u001b[39m.join(responses).split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m)\u001b[15X\u001b[26;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cfiltered_output = []\u001b[28;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m output:\u001b[29;44H\u001b[1K\u001b[C95,1\u001b[10X\u001b[10C48%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[35.031439, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[8G\u001b[1K\u001b[38;5;130m\u001b[C\"model\"\u001b[39m: \u001b[38;5;130m\"llama3\"\u001b[39m,\u001b[2;8H\u001b[1K\u001b[38;5;130m\u001b[C\"system\"\u001b[39m: \u001b[38;5;130m\"You are bash-cache-priority, an AI program \r\nthat decides which commands the user is most likely to type. I\r\nnput is a list of binaries. Output is an ordered list by likel\r\nihood of being entered on the keyboard. Respond with just the \r\ncommand names in order of likelihood.\"\u001b[39m,\u001b[23X\u001b[7;8H\u001b[1K\u001b[38;5;130m\u001b[C\"prompt\"\u001b[39m: \u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m.join(keys),\u001b[28X\u001b[8;62H\u001b[1K\u001b[4G\u001b[1K\u001b[C}\u001b[9;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[10;8H\u001b[1K\u001b[Cresponse = requests.post(url, json=payload)\u001b[11X\u001b[11;8H\u001b[1K\u001b[Cresponse.raise_for_status()\u001b[27X\u001b[12;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cresponses = []\u001b[14;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m response.text.strip().split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m):\u001b[8X\u001b[15;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[16;16H\u001b[1K\u001b[Cdata = json.loads(line)\u001b[23X\u001b[17;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[38;5;130m\"response\"\u001b[39m \u001b[33min\u001b[39m data:\u001b[24X\u001b[18;20H\u001b[1K\u001b[Cresponses.append(data[\u001b[38;5;130m\"response\"\u001b[39m])\u001b[8X\u001b[19;12H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m json.JSONDecodeError \u001b[33mas\u001b[39m e:\u001b[17X\u001b[20;16H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"JSON decode error: {e} with lin\u001b[39m\u001b[21;62H\u001b[1K\u001b[38;5;130m\re: {line}\"\u001b[39m)\u001b[22;62H\u001b[1K\u001b[16G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[23;62H\u001b[1K\u001b[24;8H\u001b[1K\u001b[Coutput = \u001b[38;5;130m\"\"\u001b[39m.join(responses).split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m)\u001b[15X\u001b[25;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cfiltered_output = []\u001b[27;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m output:\u001b[28;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line.strip():\u001b[30X\u001b[29;44H\u001b[1K\u001b[C96,1\u001b[10X\u001b[10C49%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[35.723813, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:vim*                                                                             \"gaz@orin: ~\" 19:03 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;84H"]
[36.072464, "o", "\u001b[?25l\u001b[21Dâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                            \"gaz@orin: ~\" 19:03 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;84H"]
[36.733719, "o", "l"]
[36.779664, "o", "i"]
[36.932161, "o", "e"]
[37.042097, "o", " "]
[37.359698, "o", "t"]
[37.36358, "o", "o"]
[37.521153, "o", " "]
[37.657721, "o", "t"]
[37.820643, "o", "h"]
[37.88967, "o", "e"]
[37.969461, "o", " "]
[38.169404, "o", "l"]
[38.306517, "o", "l"]
[38.447635, "o", "m"]
[38.49494, "o", " "]
[38.688333, "o", "h"]
[38.824258, "o", "e"]
[38.992971, "o", "r"]
[39.038058, "o", "e"]
[40.104137, "o", "\b\u001b[K"]
[40.607575, "o", "\b\u001b[K"]
[40.613698, "o", "\b\u001b[K"]
[40.654716, "o", "\b\u001b[K"]
[40.674923, "o", "\b\u001b[K"]
[40.715122, "o", "\b\u001b[K"]
[40.73497, "o", "\b\u001b[K"]
[40.774419, "o", "\b\u001b[K"]
[40.792562, "o", "\b\u001b[K"]
[40.833948, "o", "\b\u001b[K"]
[40.85369, "o", "\b\u001b[K"]
[40.89354, "o", "\b\u001b[K"]
[40.913784, "o", "\b\u001b[K"]
[40.955833, "o", "\b\u001b[K"]
[40.975566, "o", "\b\u001b[K"]
[41.015352, "o", "\b\u001b[K"]
[41.036182, "o", "\b\u001b[K"]
[41.076399, "o", "\b\u001b[K"]
[41.095782, "o", "\b\u001b[K"]
[41.135449, "o", "\u0007"]
[41.156237, "o", "\u0007"]
[41.197018, "o", "\u0007"]
[41.216137, "o", "\u0007"]
[41.256762, "o", "\u0007"]
[41.275608, "o", "\u0007"]
[41.317711, "o", "\u0007"]
[41.339881, "o", "\u0007"]
[41.379573, "o", "\u0007"]
[42.016539, "o", "\u001b[?25l\u001b[21D\u001b[34mâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[39mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:03 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[28;1H"]
[42.156343, "o", "\u001b[?25l\u001b[1;63H\u001b[34mâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[39mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:vim*                                                                   \"gaz@orin: ~/src/uh-ha\" 19:03 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[28;1H"]
[42.848302, "o", "\u001b[?25l\u001b[1;8H\u001b[1K\u001b[38;5;130m\u001b[C\"system\"\u001b[39m: \u001b[38;5;130m\"You are bash-cache-priority, an AI program \r\nthat decides which commands the user is most likely to type. I\r\nnput is a list of binaries. Output is an ordered list by likel\r\nihood of being entered on the keyboard. Respond with just the \r\ncommand names in order of likelihood.\"\u001b[39m,\u001b[23X\u001b[6;8H\u001b[1K\u001b[38;5;130m\u001b[C\"prompt\"\u001b[39m: \u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m.join(keys),\u001b[28X\u001b[7;62H\u001b[1K\u001b[4G\u001b[1K\u001b[C}\u001b[8;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[9;8H\u001b[1K\u001b[Cresponse = requests.post(url, json=payload)\u001b[11X\u001b[10;8H\u001b[1K\u001b[Cresponse.raise_for_status()\u001b[27X\u001b[11;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cresponses = []\u001b[13;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m response.text.strip().split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m):\u001b[8X\u001b[14;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[15;16H\u001b[1K\u001b[Cdata = json.loads(line)\u001b[23X\u001b[16;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[38;5;130m\"response\"\u001b[39m \u001b[33min\u001b[39m data:\u001b[24X\u001b[17;20H\u001b[1K\u001b[Cresponses.append(data[\u001b[38;5;130m\"response\"\u001b[39m])\u001b[8X\u001b[18;12H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m json.JSONDecodeError \u001b[33mas\u001b[39m e:\u001b[17X\u001b[19;16H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"JSON decode error: {e} with lin\u001b[39m\u001b[20;62H\u001b[1K\u001b[38;5;130m\re: {line}\"\u001b[39m)\u001b[21;62H\u001b[1K\u001b[16G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[22;62H\u001b[1K\u001b[23;8H\u001b[1K\u001b[Coutput = \u001b[38;5;130m\"\"\u001b[39m.join(responses).split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m)\u001b[15X\u001b[24;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cfiltered_output = []\u001b[26;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m output:\u001b[27;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line.strip():\u001b[30X\u001b[28;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip blanks\u001b[39m\u001b[23X\u001b[29;44H\u001b[1K\u001b[C97,1\u001b[10X\u001b[10C50%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[43.353926, "o", "\u001b[?25l\u001b[1;8H\u001b[1K\u001b[38;5;130m\u001b[C\"prompt\"\u001b[39m: \u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m.join(keys),\u001b[28X\u001b[2;62H\u001b[1K\u001b[4G\u001b[1K\u001b[C}\u001b[3;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[4;8H\u001b[1K\u001b[Cresponse = requests.post(url, json=payload)\u001b[11X\u001b[5;8H\u001b[1K\u001b[Cresponse.raise_for_status()\u001b[27X\u001b[6;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cresponses = []\u001b[8;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m response.text.strip().split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m):\u001b[8X\u001b[9;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[10;16H\u001b[1K\u001b[Cdata = json.loads(line)\u001b[23X\u001b[11;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[38;5;130m\"response\"\u001b[39m \u001b[33min\u001b[39m data:\u001b[24X\u001b[12;20H\u001b[1K\u001b[Cresponses.append(data[\u001b[38;5;130m\"response\"\u001b[39m])\u001b[8X\u001b[13;12H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m json.JSONDecodeError \u001b[33mas\u001b[39m e:\u001b[17X\u001b[14;16H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"JSON decode error: {e} with lin\u001b[39m\u001b[15;62H\u001b[1K\u001b[38;5;130m\re: {line}\"\u001b[39m)\u001b[16;62H\u001b[1K\u001b[16G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[17;62H\u001b[1K\u001b[18;8H\u001b[1K\u001b[Coutput = \u001b[38;5;130m\"\"\u001b[39m.join(responses).split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m)\u001b[15X\u001b[19;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cfiltered_output = []\u001b[21;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m output:\u001b[22;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line.strip():\u001b[30X\u001b[23;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip blanks\u001b[39m\u001b[23X\u001b[24;62H\u001b[1K\u001b[25;12H\u001b[1K\u001b[Cparts = line.split()\u001b[30X\u001b[26;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) > \u001b[38;5;130m2\u001b[39m:\u001b[27;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip yapping\u001b[39m\u001b[22X\u001b[28;62H\u001b[1K\u001b[29;44H\u001b[1K\u001b[C98,0-1\u001b[8X\u001b[8C52%\u001b[1X\u001b[?12l\u001b[?25h\u001b[24;1H"]
[43.378303, "o", "\u001b[29;46H9,1  \u001b[25;1H"]
[43.399095, "o", "\u001b[29;45H100,1\u001b[26;1H"]
[43.439547, "o", "\u001b[29;47H1\u001b[27;1H"]
[43.460018, "o", "\u001b[29;47H2,0-1\u001b[28;1H"]
[43.504797, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[4G\u001b[1K\u001b[C}\u001b[2;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[3;8H\u001b[1K\u001b[Cresponse = requests.post(url, json=payload)\u001b[11X\u001b[4;8H\u001b[1K\u001b[Cresponse.raise_for_status()\u001b[27X\u001b[5;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cresponses = []\u001b[7;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m response.text.strip().split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m):\u001b[8X\u001b[8;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[9;16H\u001b[1K\u001b[Cdata = json.loads(line)\u001b[23X\u001b[10;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[38;5;130m\"response\"\u001b[39m \u001b[33min\u001b[39m data:\u001b[24X\u001b[11;20H\u001b[1K\u001b[Cresponses.append(data[\u001b[38;5;130m\"response\"\u001b[39m])\u001b[8X\u001b[12;12H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m json.JSONDecodeError \u001b[33mas\u001b[39m e:\u001b[17X\u001b[13;16H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"JSON decode error: {e} with lin\u001b[39m\u001b[14;62H\u001b[1K\u001b[38;5;130m\re: {line}\"\u001b[39m)\u001b[15;62H\u001b[1K\u001b[16G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[16;62H\u001b[1K\u001b[17;8H\u001b[1K\u001b[Coutput = \u001b[38;5;130m\"\"\u001b[39m.join(responses).split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m)\u001b[15X\u001b[18;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cfiltered_output = []\u001b[20;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m output:\u001b[21;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line.strip():\u001b[30X\u001b[22;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip blanks\u001b[39m\u001b[23X\u001b[23;62H\u001b[1K\u001b[24;12H\u001b[1K\u001b[Cparts = line.split()\u001b[30X\u001b[25;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) > \u001b[38;5;130m2\u001b[39m:\u001b[26;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip yapping\u001b[39m\u001b[22X\u001b[27;62H\u001b[1K\n\u001b[1K\u001b[12G\u001b[1K\u001b[Ccommand = parts[-\u001b[38;5;130m1\u001b[39m]\u001b[29;44H\u001b[1K\u001b[C103,1\u001b[9X\u001b[9C52%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[43.522004, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[4G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[2;8H\u001b[1K\u001b[Cresponse = requests.post(url, json=payload)\u001b[11X\u001b[3;8H\u001b[1K\u001b[Cresponse.raise_for_status()\u001b[27X\u001b[4;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cresponses = []\u001b[6;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m response.text.strip().split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m):\u001b[8X\u001b[7;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[8;16H\u001b[1K\u001b[Cdata = json.loads(line)\u001b[23X\u001b[9;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[38;5;130m\"response\"\u001b[39m \u001b[33min\u001b[39m data:\u001b[24X\u001b[10;20H\u001b[1K\u001b[Cresponses.append(data[\u001b[38;5;130m\"response\"\u001b[39m])\u001b[8X\u001b[11;12H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m json.JSONDecodeError \u001b[33mas\u001b[39m e:\u001b[17X\u001b[12;16H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"JSON decode error: {e} with lin\u001b[39m\u001b[13;62H\u001b[1K\u001b[38;5;130m\re: {line}\"\u001b[39m)\u001b[14;62H\u001b[1K\u001b[16G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[15;62H\u001b[1K\u001b[16;8H\u001b[1K\u001b[Coutput = \u001b[38;5;130m\"\"\u001b[39m.join(responses).split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m)\u001b[15X\u001b[17;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cfiltered_output = []\u001b[19;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m output:\u001b[20;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line.strip():\u001b[30X\u001b[21;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip blanks\u001b[39m\u001b[23X\u001b[22;62H\u001b[1K\u001b[23;12H\u001b[1K\u001b[Cparts = line.split()\u001b[30X\u001b[24;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) > \u001b[38;5;130m2\u001b[39m:\u001b[25;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip yapping\u001b[39m\u001b[22X\u001b[26;62H\u001b[1K\n\u001b[1K\u001b[12G\u001b[1K\u001b[Ccommand = parts[-\u001b[38;5;130m1\u001b[39m]\u001b[28;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m command \u001b[33min\u001b[39m keys:\u001b[29;44H\u001b[1K\u001b[C104,1\u001b[9X\u001b[9C53%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[43.561574, "o", "\u001b[?25l\u001b[1;8H\u001b[1K\u001b[Cresponse = requests.post(url, json=payload)\u001b[11X\u001b[2;8H\u001b[1K\u001b[Cresponse.raise_for_status()\u001b[27X\u001b[3;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cresponses = []\u001b[5;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m response.text.strip().split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m):\u001b[8X\u001b[6;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[7;16H\u001b[1K\u001b[Cdata = json.loads(line)\u001b[23X\u001b[8;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[38;5;130m\"response\"\u001b[39m \u001b[33min\u001b[39m data:\u001b[24X\u001b[9;20H\u001b[1K\u001b[Cresponses.append(data[\u001b[38;5;130m\"response\"\u001b[39m])\u001b[8X\u001b[10;12H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m json.JSONDecodeError \u001b[33mas\u001b[39m e:\u001b[17X\u001b[11;16H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"JSON decode error: {e} with lin\u001b[39m\u001b[12;62H\u001b[1K\u001b[38;5;130m\re: {line}\"\u001b[39m)\u001b[13;62H\u001b[1K\u001b[16G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[14;62H\u001b[1K\u001b[15;8H\u001b[1K\u001b[Coutput = \u001b[38;5;130m\"\"\u001b[39m.join(responses).split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m)\u001b[15X\u001b[16;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cfiltered_output = []\u001b[18;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m output:\u001b[19;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line.strip():\u001b[30X\u001b[20;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip blanks\u001b[39m\u001b[23X\u001b[21;62H\u001b[1K\u001b[22;12H\u001b[1K\u001b[Cparts = line.split()\u001b[30X\u001b[23;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) > \u001b[38;5;130m2\u001b[39m:\u001b[24;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip yapping\u001b[39m\u001b[22X\u001b[25;62H\u001b[1K\n\u001b[1K\u001b[12G\u001b[1K\u001b[Ccommand = parts[-\u001b[38;5;130m1\u001b[39m]\u001b[27;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m command \u001b[33min\u001b[39m keys:\u001b[28;16H\u001b[1K\u001b[Cfiltered_output.append(command)\u001b[15X\u001b[29;44H\u001b[1K\u001b[C105,1\u001b[9X\u001b[9C54%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[43.581795, "o", "\u001b[?25l\u001b[1;8H\u001b[1K\u001b[Cresponse.raise_for_status()\u001b[27X\u001b[2;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cresponses = []\u001b[4;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m response.text.strip().split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m):\u001b[8X\u001b[5;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[6;16H\u001b[1K\u001b[Cdata = json.loads(line)\u001b[23X\u001b[7;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[38;5;130m\"response\"\u001b[39m \u001b[33min\u001b[39m data:\u001b[24X\u001b[8;20H\u001b[1K\u001b[Cresponses.append(data[\u001b[38;5;130m\"response\"\u001b[39m])\u001b[8X\u001b[9;12H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m json.JSONDecodeError \u001b[33mas\u001b[39m e:\u001b[17X\u001b[10;16H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"JSON decode error: {e} with lin\u001b[39m\u001b[11;62H\u001b[1K\u001b[38;5;130m\re: {line}\"\u001b[39m)\u001b[12;62H\u001b[1K\u001b[16G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[13;62H\u001b[1K\u001b[14;8H\u001b[1K\u001b[Coutput = \u001b[38;5;130m\"\"\u001b[39m.join(responses).split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m)\u001b[15X\u001b[15;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cfiltered_output = []\u001b[17;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m output:\u001b[18;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line.strip():\u001b[30X\u001b[19;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip blanks\u001b[39m\u001b[23X\u001b[20;62H\u001b[1K\u001b[21;12H\u001b[1K\u001b[Cparts = line.split()\u001b[30X\u001b[22;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) > \u001b[38;5;130m2\u001b[39m:\u001b[23;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip yapping\u001b[39m\u001b[22X\u001b[24;62H\u001b[1K\n\u001b[1K\u001b[12G\u001b[1K\u001b[Ccommand = parts[-\u001b[38;5;130m1\u001b[39m]\u001b[26;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m command \u001b[33min\u001b[39m keys:\u001b[27;16H\u001b[1K\u001b[Cfiltered_output.append(command)\u001b[15X\u001b[28;62H\u001b[1K\u001b[29;44H\u001b[1K\u001b[C106,0-1\u001b[7X\u001b[7C54%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[43.603453, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cresponses = []\u001b[3;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m response.text.strip().split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m):\u001b[8X\u001b[4;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[5;16H\u001b[1K\u001b[Cdata = json.loads(line)\u001b[23X\u001b[6;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[38;5;130m\"response\"\u001b[39m \u001b[33min\u001b[39m data:\u001b[24X\u001b[7;20H\u001b[1K\u001b[Cresponses.append(data[\u001b[38;5;130m\"response\"\u001b[39m])\u001b[8X\u001b[8;12H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m json.JSONDecodeError \u001b[33mas\u001b[39m e:\u001b[17X\u001b[9;16H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"JSON decode error: {e} with lin\u001b[39m\u001b[10;62H\u001b[1K\u001b[38;5;130m\re: {line}\"\u001b[39m)\u001b[11;62H\u001b[1K\u001b[16G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[12;62H\u001b[1K\u001b[13;8H\u001b[1K\u001b[Coutput = \u001b[38;5;130m\"\"\u001b[39m.join(responses).split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m)\u001b[15X\u001b[14;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cfiltered_output = []\u001b[16;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m output:\u001b[17;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line.strip():\u001b[30X\u001b[18;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip blanks\u001b[39m\u001b[23X\u001b[19;62H\u001b[1K\u001b[20;12H\u001b[1K\u001b[Cparts = line.split()\u001b[30X\u001b[21;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) > \u001b[38;5;130m2\u001b[39m:\u001b[22;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip yapping\u001b[39m\u001b[22X\u001b[23;62H\u001b[1K\n\u001b[1K\u001b[12G\u001b[1K\u001b[Ccommand = parts[-\u001b[38;5;130m1\u001b[39m]\u001b[25;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m command \u001b[33min\u001b[39m keys:\u001b[26;16H\u001b[1K\u001b[Cfiltered_output.append(command)\u001b[15X\u001b[27;62H\u001b[1K\u001b[28;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m \u001b[33mand\u001b[39m \u001b[38;5;130m\".\"\u001b[39m \u001b[33min\u001b[39m parts[\u001b[38;5;130m0\u001b[39m]:\u001b[11X\u001b[29;44H\u001b[1K\u001b[C107,1\u001b[9X\u001b[9C55%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[43.64107, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Cresponses = []\u001b[2;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m response.text.strip().split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m):\u001b[8X\u001b[3;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[4;16H\u001b[1K\u001b[Cdata = json.loads(line)\u001b[23X\u001b[5;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[38;5;130m\"response\"\u001b[39m \u001b[33min\u001b[39m data:\u001b[24X\u001b[6;20H\u001b[1K\u001b[Cresponses.append(data[\u001b[38;5;130m\"response\"\u001b[39m])\u001b[8X\u001b[7;12H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m json.JSONDecodeError \u001b[33mas\u001b[39m e:\u001b[17X\u001b[8;16H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"JSON decode error: {e} with lin\u001b[39m\u001b[9;62H\u001b[1K\u001b[38;5;130m\re: {line}\"\u001b[39m)\u001b[10;62H\u001b[1K\u001b[16G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[11;62H\u001b[1K\u001b[12;8H\u001b[1K\u001b[Coutput = \u001b[38;5;130m\"\"\u001b[39m.join(responses).split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m)\u001b[15X\u001b[13;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cfiltered_output = []\u001b[15;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m output:\u001b[16;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line.strip():\u001b[30X\u001b[17;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip blanks\u001b[39m\u001b[23X\u001b[18;62H\u001b[1K\u001b[19;12H\u001b[1K\u001b[Cparts = line.split()\u001b[30X\u001b[20;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) > \u001b[38;5;130m2\u001b[39m:\u001b[21;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip yapping\u001b[39m\u001b[22X\u001b[22;62H\u001b[1K\n\u001b[1K\u001b[12G\u001b[1K\u001b[Ccommand = parts[-\u001b[38;5;130m1\u001b[39m]\u001b[24;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m command \u001b[33min\u001b[39m keys:\u001b[25;16H\u001b[1K\u001b[Cfiltered_output.append(command)\u001b[15X\u001b[26;62H\u001b[1K\u001b[27;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m \u001b[33mand\u001b[39m \u001b[38;5;130m\".\"\u001b[39m \u001b[33min\u001b[39m parts[\u001b[38;5;130m0\u001b[39m]:\u001b[11X\u001b[28;16H\u001b[1K\u001b[Cnumber, *rest = parts[\u001b[38;5;130m0\u001b[39m].split(\u001b[38;5;130m\".\"\u001b[39m, \u001b[38;5;130m1\u001b[39m)\u001b[8X\u001b[29;44H\u001b[1K\u001b[C108,1\u001b[9X\u001b[9C56%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[43.680555, "o", "\u001b[?25l\u001b[1;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m response.text.strip().split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m):\u001b[8X\u001b[2;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[3;16H\u001b[1K\u001b[Cdata = json.loads(line)\u001b[23X\u001b[4;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[38;5;130m\"response\"\u001b[39m \u001b[33min\u001b[39m data:\u001b[24X\u001b[5;20H\u001b[1K\u001b[Cresponses.append(data[\u001b[38;5;130m\"response\"\u001b[39m])\u001b[8X\u001b[6;12H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m json.JSONDecodeError \u001b[33mas\u001b[39m e:\u001b[17X\u001b[7;16H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"JSON decode error: {e} with lin\u001b[39m\u001b[8;62H\u001b[1K\u001b[38;5;130m\re: {line}\"\u001b[39m)\u001b[9;62H\u001b[1K\u001b[16G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[10;62H\u001b[1K\u001b[11;8H\u001b[1K\u001b[Coutput = \u001b[38;5;130m\"\"\u001b[39m.join(responses).split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m)\u001b[15X\u001b[12;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cfiltered_output = []\u001b[14;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m output:\u001b[15;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line.strip():\u001b[30X\u001b[16;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip blanks\u001b[39m\u001b[23X\u001b[17;62H\u001b[1K\u001b[18;12H\u001b[1K\u001b[Cparts = line.split()\u001b[30X\u001b[19;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) > \u001b[38;5;130m2\u001b[39m:\u001b[20;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip yapping\u001b[39m\u001b[22X\u001b[21;62H\u001b[1K\n\u001b[1K\u001b[12G\u001b[1K\u001b[Ccommand = parts[-\u001b[38;5;130m1\u001b[39m]\u001b[23;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m command \u001b[33min\u001b[39m keys:\u001b[24;16H\u001b[1K\u001b[Cfiltered_output.append(command)\u001b[15X\u001b[25;62H\u001b[1K\u001b[26;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m \u001b[33mand\u001b[39m \u001b[38;5;130m\".\"\u001b[39m \u001b[33min\u001b[39m parts[\u001b[38;5;130m0\u001b[39m]:\u001b[11X\u001b[27;16H\u001b[1K\u001b[Cnumber, *rest = parts[\u001b[38;5;130m0\u001b[39m].split(\u001b[38;5;130m\".\"\u001b[39m, \u001b[38;5;130m1\u001b[39m)\u001b[8X\u001b[28;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m number.isdigit() \u001b[33mand\u001b[39m rest[\u001b[38;5;130m0\u001b[39m] \u001b[33min\u001b[39m keys:\u001b[6X\u001b[29;44H\u001b[1K\u001b[C109,1\u001b[9X\u001b[9C56%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[43.700062, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Ctry\u001b[39m:\u001b[2;16H\u001b[1K\u001b[Cdata = json.loads(line)\u001b[23X\u001b[3;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[38;5;130m\"response\"\u001b[39m \u001b[33min\u001b[39m data:\u001b[24X\u001b[4;20H\u001b[1K\u001b[Cresponses.append(data[\u001b[38;5;130m\"response\"\u001b[39m])\u001b[8X\u001b[5;12H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m json.JSONDecodeError \u001b[33mas\u001b[39m e:\u001b[17X\u001b[6;16H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"JSON decode error: {e} with lin\u001b[39m\u001b[7;62H\u001b[1K\u001b[38;5;130m\re: {line}\"\u001b[39m)\u001b[8;62H\u001b[1K\u001b[16G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[9;62H\u001b[1K\u001b[10;8H\u001b[1K\u001b[Coutput = \u001b[38;5;130m\"\"\u001b[39m.join(responses).split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m)\u001b[15X\u001b[11;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cfiltered_output = []\u001b[13;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m output:\u001b[14;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line.strip():\u001b[30X\u001b[15;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip blanks\u001b[39m\u001b[23X\u001b[16;62H\u001b[1K\u001b[17;12H\u001b[1K\u001b[Cparts = line.split()\u001b[30X\u001b[18;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) > \u001b[38;5;130m2\u001b[39m:\u001b[19;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip yapping\u001b[39m\u001b[22X\u001b[20;62H\u001b[1K\n\u001b[1K\u001b[12G\u001b[1K\u001b[Ccommand = parts[-\u001b[38;5;130m1\u001b[39m]\u001b[22;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m command \u001b[33min\u001b[39m keys:\u001b[23;16H\u001b[1K\u001b[Cfiltered_output.append(command)\u001b[15X\u001b[24;62H\u001b[1K\u001b[25;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m \u001b[33mand\u001b[39m \u001b[38;5;130m\".\"\u001b[39m \u001b[33min\u001b[39m parts[\u001b[38;5;130m0\u001b[39m]:\u001b[11X\u001b[26;16H\u001b[1K\u001b[Cnumber, *rest = parts[\u001b[38;5;130m0\u001b[39m].split(\u001b[38;5;130m\".\"\u001b[39m, \u001b[38;5;130m1\u001b[39m)\u001b[8X\u001b[27;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m number.isdigit() \u001b[33mand\u001b[39m rest[\u001b[38;5;130m0\u001b[39m] \u001b[33min\u001b[39m keys:\u001b[6X\u001b[28;20H\u001b[1K\u001b[Cfiltered_output.append(rest[\u001b[38;5;130m0\u001b[39m])\u001b[11X\u001b[29;44H\u001b[1K\u001b[C110,1\u001b[9X\u001b[9C57%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[43.914212, "o", "\u001b[?25l\u001b[1;16H\u001b[1K\u001b[Cdata = json.loads(line)\u001b[23X\u001b[2;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[38;5;130m\"response\"\u001b[39m \u001b[33min\u001b[39m data:\u001b[24X\u001b[3;20H\u001b[1K\u001b[Cresponses.append(data[\u001b[38;5;130m\"response\"\u001b[39m])\u001b[8X\u001b[4;12H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m json.JSONDecodeError \u001b[33mas\u001b[39m e:\u001b[17X\u001b[5;16H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"JSON decode error: {e} with lin\u001b[39m\u001b[6;62H\u001b[1K\u001b[38;5;130m\re: {line}\"\u001b[39m)\u001b[7;62H\u001b[1K\u001b[16G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[8;62H\u001b[1K\u001b[9;8H\u001b[1K\u001b[Coutput = \u001b[38;5;130m\"\"\u001b[39m.join(responses).split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m)\u001b[15X\u001b[10;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cfiltered_output = []\u001b[12;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m output:\u001b[13;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line.strip():\u001b[30X\u001b[14;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip blanks\u001b[39m\u001b[23X\u001b[15;62H\u001b[1K\u001b[16;12H\u001b[1K\u001b[Cparts = line.split()\u001b[30X\u001b[17;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) > \u001b[38;5;130m2\u001b[39m:\u001b[18;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip yapping\u001b[39m\u001b[22X\u001b[19;62H\u001b[1K\n\u001b[1K\u001b[12G\u001b[1K\u001b[Ccommand = parts[-\u001b[38;5;130m1\u001b[39m]\u001b[21;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m command \u001b[33min\u001b[39m keys:\u001b[22;16H\u001b[1K\u001b[Cfiltered_output.append(command)\u001b[15X\u001b[23;62H\u001b[1K\u001b[24;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m \u001b[33mand\u001b[39m \u001b[38;5;130m\".\"\u001b[39m \u001b[33min\u001b[39m parts[\u001b[38;5;130m0\u001b[39m]:\u001b[11X\u001b[25;16H\u001b[1K\u001b[Cnumber, *rest = parts[\u001b[38;5;130m0\u001b[39m].split(\u001b[38;5;130m\".\"\u001b[39m, \u001b[38;5;130m1\u001b[39m)\u001b[8X\u001b[26;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m number.isdigit() \u001b[33mand\u001b[39m rest[\u001b[38;5;130m0\u001b[39m] \u001b[33min\u001b[39m keys:\u001b[6X\u001b[27;20H\u001b[1K\u001b[Cfiltered_output.append(rest[\u001b[38;5;130m0\u001b[39m])\u001b[11X\u001b[28;62H\u001b[1K\u001b[29;44H\u001b[1K\u001b[C111,0-1\u001b[7X\u001b[7C58%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[44.420116, "o", "\u001b[?25l\u001b[1;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[38;5;130m\"response\"\u001b[39m \u001b[33min\u001b[39m data:\u001b[24X\u001b[2;20H\u001b[1K\u001b[Cresponses.append(data[\u001b[38;5;130m\"response\"\u001b[39m])\u001b[8X\u001b[3;12H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m json.JSONDecodeError \u001b[33mas\u001b[39m e:\u001b[17X\u001b[4;16H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"JSON decode error: {e} with lin\u001b[39m\u001b[5;62H\u001b[1K\u001b[38;5;130m\re: {line}\"\u001b[39m)\u001b[6;62H\u001b[1K\u001b[16G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[7;62H\u001b[1K\u001b[8;8H\u001b[1K\u001b[Coutput = \u001b[38;5;130m\"\"\u001b[39m.join(responses).split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m)\u001b[15X\u001b[9;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cfiltered_output = []\u001b[11;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m output:\u001b[12;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line.strip():\u001b[30X\u001b[13;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip blanks\u001b[39m\u001b[23X\u001b[14;62H\u001b[1K\u001b[15;12H\u001b[1K\u001b[Cparts = line.split()\u001b[30X\u001b[16;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) > \u001b[38;5;130m2\u001b[39m:\u001b[17;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip yapping\u001b[39m\u001b[22X\u001b[18;62H\u001b[1K\n\u001b[1K\u001b[12G\u001b[1K\u001b[Ccommand = parts[-\u001b[38;5;130m1\u001b[39m]\u001b[20;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m command \u001b[33min\u001b[39m keys:\u001b[21;16H\u001b[1K\u001b[Cfiltered_output.append(command)\u001b[15X\u001b[22;62H\u001b[1K\u001b[23;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m \u001b[33mand\u001b[39m \u001b[38;5;130m\".\"\u001b[39m \u001b[33min\u001b[39m parts[\u001b[38;5;130m0\u001b[39m]:\u001b[11X\u001b[24;16H\u001b[1K\u001b[Cnumber, *rest = parts[\u001b[38;5;130m0\u001b[39m].split(\u001b[38;5;130m\".\"\u001b[39m, \u001b[38;5;130m1\u001b[39m)\u001b[8X\u001b[25;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m number.isdigit() \u001b[33mand\u001b[39m rest[\u001b[38;5;130m0\u001b[39m] \u001b[33min\u001b[39m keys:\u001b[6X\u001b[26;20H\u001b[1K\u001b[Cfiltered_output.append(rest[\u001b[38;5;130m0\u001b[39m])\u001b[11X\u001b[27;62H\u001b[1K\u001b[28;8H\u001b[1K\u001b[Clogger.debug(f\u001b[38;5;130m\"Full response: {response.text}\"\u001b[39m)\u001b[7X\u001b[29;44H\u001b[1K\u001b[C112,1\u001b[9X\u001b[9C59%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[44.42554, "o", "\u001b[?25l\u001b[1;20H\u001b[1K\u001b[Cresponses.append(data[\u001b[38;5;130m\"response\"\u001b[39m])\u001b[8X\u001b[2;12H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m json.JSONDecodeError \u001b[33mas\u001b[39m e:\u001b[17X\u001b[3;16H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"JSON decode error: {e} with lin\u001b[39m\u001b[4;62H\u001b[1K\u001b[38;5;130m\re: {line}\"\u001b[39m)\u001b[5;62H\u001b[1K\u001b[16G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[6;62H\u001b[1K\u001b[7;8H\u001b[1K\u001b[Coutput = \u001b[38;5;130m\"\"\u001b[39m.join(responses).split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m)\u001b[15X\u001b[8;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cfiltered_output = []\u001b[10;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m output:\u001b[11;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line.strip():\u001b[30X\u001b[12;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip blanks\u001b[39m\u001b[23X\u001b[13;62H\u001b[1K\u001b[14;12H\u001b[1K\u001b[Cparts = line.split()\u001b[30X\u001b[15;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) > \u001b[38;5;130m2\u001b[39m:\u001b[16;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip yapping\u001b[39m\u001b[22X\u001b[17;62H\u001b[1K\n\u001b[1K\u001b[12G\u001b[1K\u001b[Ccommand = parts[-\u001b[38;5;130m1\u001b[39m]\u001b[19;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m command \u001b[33min\u001b[39m keys:\u001b[20;16H\u001b[1K\u001b[Cfiltered_output.append(command)\u001b[15X\u001b[21;62H\u001b[1K\u001b[22;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m \u001b[33mand\u001b[39m \u001b[38;5;130m\".\"\u001b[39m \u001b[33min\u001b[39m parts[\u001b[38;5;130m0\u001b[39m]:\u001b[11X\u001b[23;16H\u001b[1K\u001b[Cnumber, *rest = parts[\u001b[38;5;130m0\u001b[39m].split(\u001b[38;5;130m\".\"\u001b[39m, \u001b[38;5;130m1\u001b[39m)\u001b[8X\u001b[24;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m number.isdigit() \u001b[33mand\u001b[39m rest[\u001b[38;5;130m0\u001b[39m] \u001b[33min\u001b[39m keys:\u001b[6X\u001b[25;20H\u001b[1K\u001b[Cfiltered_output.append(rest[\u001b[38;5;130m0\u001b[39m])\u001b[11X\u001b[26;62H\u001b[1K\u001b[27;8H\u001b[1K\u001b[Clogger.debug(f\u001b[38;5;130m\"Full response: {response.text}\"\u001b[39m)\u001b[7X\u001b[28;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m filtered_output\u001b[29;44H\u001b[1K\u001b[C113,1\u001b[9X\u001b[9C59%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[44.467925, "o", "\u001b[?25l\u001b[1;12H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m json.JSONDecodeError \u001b[33mas\u001b[39m e:\u001b[17X\u001b[2;16H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"JSON decode error: {e} with lin\u001b[39m\u001b[3;62H\u001b[1K\u001b[38;5;130m\re: {line}\"\u001b[39m)\u001b[4;62H\u001b[1K\u001b[16G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[5;62H\u001b[1K\u001b[6;8H\u001b[1K\u001b[Coutput = \u001b[38;5;130m\"\"\u001b[39m.join(responses).split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m)\u001b[15X\u001b[7;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cfiltered_output = []\u001b[9;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m output:\u001b[10;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line.strip():\u001b[30X\u001b[11;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip blanks\u001b[39m\u001b[23X\u001b[12;62H\u001b[1K\u001b[13;12H\u001b[1K\u001b[Cparts = line.split()\u001b[30X\u001b[14;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) > \u001b[38;5;130m2\u001b[39m:\u001b[15;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip yapping\u001b[39m\u001b[22X\u001b[16;62H\u001b[1K\n\u001b[1K\u001b[12G\u001b[1K\u001b[Ccommand = parts[-\u001b[38;5;130m1\u001b[39m]\u001b[18;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m command \u001b[33min\u001b[39m keys:\u001b[19;16H\u001b[1K\u001b[Cfiltered_output.append(command)\u001b[15X\u001b[20;62H\u001b[1K\u001b[21;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m \u001b[33mand\u001b[39m \u001b[38;5;130m\".\"\u001b[39m \u001b[33min\u001b[39m parts[\u001b[38;5;130m0\u001b[39m]:\u001b[11X\u001b[22;16H\u001b[1K\u001b[Cnumber, *rest = parts[\u001b[38;5;130m0\u001b[39m].split(\u001b[38;5;130m\".\"\u001b[39m, \u001b[38;5;130m1\u001b[39m)\u001b[8X\u001b[23;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m number.isdigit() \u001b[33mand\u001b[39m rest[\u001b[38;5;130m0\u001b[39m] \u001b[33min\u001b[39m keys:\u001b[6X\u001b[24;20H\u001b[1K\u001b[Cfiltered_output.append(rest[\u001b[38;5;130m0\u001b[39m])\u001b[11X\u001b[25;62H\u001b[1K\u001b[26;8H\u001b[1K\u001b[Clogger.debug(f\u001b[38;5;130m\"Full response: {response.text}\"\u001b[39m)\u001b[7X\u001b[27;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m filtered_output\u001b[28;62H\u001b[1K\u001b[29;44H\u001b[1K\u001b[C114,0-1\u001b[7X\u001b[7C60%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[44.487323, "o", "\u001b[?25l\u001b[1;16H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"JSON decode error: {e} with lin\u001b[39m\u001b[2;62H\u001b[1K\u001b[38;5;130m\re: {line}\"\u001b[39m)\u001b[3;62H\u001b[1K\u001b[16G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[4;62H\u001b[1K\u001b[5;8H\u001b[1K\u001b[Coutput = \u001b[38;5;130m\"\"\u001b[39m.join(responses).split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m)\u001b[15X\u001b[6;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cfiltered_output = []\u001b[8;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m output:\u001b[9;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line.strip():\u001b[30X\u001b[10;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip blanks\u001b[39m\u001b[23X\u001b[11;62H\u001b[1K\u001b[12;12H\u001b[1K\u001b[Cparts = line.split()\u001b[30X\u001b[13;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) > \u001b[38;5;130m2\u001b[39m:\u001b[14;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip yapping\u001b[39m\u001b[22X\u001b[15;62H\u001b[1K\n\u001b[1K\u001b[12G\u001b[1K\u001b[Ccommand = parts[-\u001b[38;5;130m1\u001b[39m]\u001b[17;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m command \u001b[33min\u001b[39m keys:\u001b[18;16H\u001b[1K\u001b[Cfiltered_output.append(command)\u001b[15X\u001b[19;62H\u001b[1K\u001b[20;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m \u001b[33mand\u001b[39m \u001b[38;5;130m\".\"\u001b[39m \u001b[33min\u001b[39m parts[\u001b[38;5;130m0\u001b[39m]:\u001b[11X\u001b[21;16H\u001b[1K\u001b[Cnumber, *rest = parts[\u001b[38;5;130m0\u001b[39m].split(\u001b[38;5;130m\".\"\u001b[39m, \u001b[38;5;130m1\u001b[39m)\u001b[8X\u001b[22;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m number.isdigit() \u001b[33mand\u001b[39m rest[\u001b[38;5;130m0\u001b[39m] \u001b[33min\u001b[39m keys:\u001b[6X\u001b[23;20H\u001b[1K\u001b[Cfiltered_output.append(rest[\u001b[38;5;130m0\u001b[39m])\u001b[11X\u001b[24;62H\u001b[1K\u001b[25;8H\u001b[1K\u001b[Clogger.debug(f\u001b[38;5;130m\"Full response: {response.text}\"\u001b[39m)\u001b[7X\u001b[26;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m filtered_output\u001b[27;62H\u001b[1K\u001b[28;4H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m requests.RequestException \u001b[33mas\u001b[39m e:\u001b[20X\u001b[29;44H\u001b[1K\u001b[C115,1\u001b[9X\u001b[9C61%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[44.528123, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[16G\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m\u001b[2;62H\u001b[1K\u001b[3;8H\u001b[1K\u001b[Coutput = \u001b[38;5;130m\"\"\u001b[39m.join(responses).split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m)\u001b[15X\u001b[4;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cfiltered_output = []\u001b[6;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m output:\u001b[7;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line.strip():\u001b[30X\u001b[8;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip blanks\u001b[39m\u001b[23X\u001b[9;62H\u001b[1K\u001b[10;12H\u001b[1K\u001b[Cparts = line.split()\u001b[30X\u001b[11;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) > \u001b[38;5;130m2\u001b[39m:\u001b[12;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip yapping\u001b[39m\u001b[22X\u001b[13;62H\u001b[1K\n\u001b[1K\u001b[12G\u001b[1K\u001b[Ccommand = parts[-\u001b[38;5;130m1\u001b[39m]\u001b[15;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m command \u001b[33min\u001b[39m keys:\u001b[16;16H\u001b[1K\u001b[Cfiltered_output.append(command)\u001b[15X\u001b[17;62H\u001b[1K\u001b[18;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m \u001b[33mand\u001b[39m \u001b[38;5;130m\".\"\u001b[39m \u001b[33min\u001b[39m parts[\u001b[38;5;130m0\u001b[39m]:\u001b[11X\u001b[19;16H\u001b[1K\u001b[Cnumber, *rest = parts[\u001b[38;5;130m0\u001b[39m].split(\u001b[38;5;130m\".\"\u001b[39m, \u001b[38;5;130m1\u001b[39m)\u001b[8X\u001b[20;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m number.isdigit() \u001b[33mand\u001b[39m rest[\u001b[38;5;130m0\u001b[39m] \u001b[33min\u001b[39m keys:\u001b[6X\u001b[21;20H\u001b[1K\u001b[Cfiltered_output.append(rest[\u001b[38;5;130m0\u001b[39m])\u001b[11X\u001b[22;62H\u001b[1K\u001b[23;8H\u001b[1K\u001b[Clogger.debug(f\u001b[38;5;130m\"Full response: {response.text}\"\u001b[39m)\u001b[7X\u001b[24;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m filtered_output\u001b[25;62H\u001b[1K\u001b[26;4H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m requests.RequestException \u001b[33mas\u001b[39m e:\u001b[20X\u001b[27;8H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"Error making request to {url}: {e}\"\u001b[39m)\u001b[3X\u001b[28;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m []\u001b[29;44H\u001b[1K\u001b[C116,1\u001b[9X\u001b[9C62%\u001b[1X\u001b[?12l\u001b[?25h\u001b[27;1H"]
[44.547992, "o", "\u001b[29;47H7\u001b[28;1H"]
[44.589425, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[2;8H\u001b[1K\u001b[Coutput = \u001b[38;5;130m\"\"\u001b[39m.join(responses).split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m)\u001b[15X\u001b[3;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cfiltered_output = []\u001b[5;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m output:\u001b[6;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line.strip():\u001b[30X\u001b[7;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip blanks\u001b[39m\u001b[23X\u001b[8;62H\u001b[1K\u001b[9;12H\u001b[1K\u001b[Cparts = line.split()\u001b[30X\u001b[10;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) > \u001b[38;5;130m2\u001b[39m:\u001b[11;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip yapping\u001b[39m\u001b[22X\u001b[12;62H\u001b[1K\n\u001b[1K\u001b[12G\u001b[1K\u001b[Ccommand = parts[-\u001b[38;5;130m1\u001b[39m]\u001b[14;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m command \u001b[33min\u001b[39m keys:\u001b[15;16H\u001b[1K\u001b[Cfiltered_output.append(command)\u001b[15X\u001b[16;62H\u001b[1K\u001b[17;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m \u001b[33mand\u001b[39m \u001b[38;5;130m\".\"\u001b[39m \u001b[33min\u001b[39m parts[\u001b[38;5;130m0\u001b[39m]:\u001b[11X\u001b[18;16H\u001b[1K\u001b[Cnumber, *rest = parts[\u001b[38;5;130m0\u001b[39m].split(\u001b[38;5;130m\".\"\u001b[39m, \u001b[38;5;130m1\u001b[39m)\u001b[8X\u001b[19;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m number.isdigit() \u001b[33mand\u001b[39m rest[\u001b[38;5;130m0\u001b[39m] \u001b[33min\u001b[39m keys:\u001b[6X\u001b[20;20H\u001b[1K\u001b[Cfiltered_output.append(rest[\u001b[38;5;130m0\u001b[39m])\u001b[11X\u001b[21;62H\u001b[1K\u001b[22;8H\u001b[1K\u001b[Clogger.debug(f\u001b[38;5;130m\"Full response: {response.text}\"\u001b[39m)\u001b[7X\u001b[23;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m filtered_output\u001b[24;62H\u001b[1K\u001b[25;4H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m requests.RequestException \u001b[33mas\u001b[39m e:\u001b[20X\u001b[26;8H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"Error making request to {url}: {e}\"\u001b[39m)\u001b[3X\u001b[27;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m []\u001b[28;62H\u001b[1K\u001b[29;44H\u001b[1K\u001b[C118,0-1\u001b[7X\u001b[7C62%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[44.60879, "o", "\u001b[?25l\u001b[1;8H\u001b[1K\u001b[Coutput = \u001b[38;5;130m\"\"\u001b[39m.join(responses).split(\u001b[38;5;130m\"\u001b[35m\\n\u001b[38;5;130m\"\u001b[39m)\u001b[15X\u001b[2;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cfiltered_output = []\u001b[4;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m output:\u001b[5;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line.strip():\u001b[30X\u001b[6;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip blanks\u001b[39m\u001b[23X\u001b[7;62H\u001b[1K\u001b[8;12H\u001b[1K\u001b[Cparts = line.split()\u001b[30X\u001b[9;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) > \u001b[38;5;130m2\u001b[39m:\u001b[10;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip yapping\u001b[39m\u001b[22X\u001b[11;62H\u001b[1K\n\u001b[1K\u001b[12G\u001b[1K\u001b[Ccommand = parts[-\u001b[38;5;130m1\u001b[39m]\u001b[13;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m command \u001b[33min\u001b[39m keys:\u001b[14;16H\u001b[1K\u001b[Cfiltered_output.append(command)\u001b[15X\u001b[15;62H\u001b[1K\u001b[16;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m \u001b[33mand\u001b[39m \u001b[38;5;130m\".\"\u001b[39m \u001b[33min\u001b[39m parts[\u001b[38;5;130m0\u001b[39m]:\u001b[11X\u001b[17;16H\u001b[1K\u001b[Cnumber, *rest = parts[\u001b[38;5;130m0\u001b[39m].split(\u001b[38;5;130m\".\"\u001b[39m, \u001b[38;5;130m1\u001b[39m)\u001b[8X\u001b[18;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m number.isdigit() \u001b[33mand\u001b[39m rest[\u001b[38;5;130m0\u001b[39m] \u001b[33min\u001b[39m keys:\u001b[6X\u001b[19;20H\u001b[1K\u001b[Cfiltered_output.append(rest[\u001b[38;5;130m0\u001b[39m])\u001b[11X\u001b[20;62H\u001b[1K\u001b[21;8H\u001b[1K\u001b[Clogger.debug(f\u001b[38;5;130m\"Full response: {response.text}\"\u001b[39m)\u001b[7X\u001b[22;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m filtered_output\u001b[23;62H\u001b[1K\u001b[24;4H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m requests.RequestException \u001b[33mas\u001b[39m e:\u001b[20X\u001b[25;8H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"Error making request to {url}: {e}\"\u001b[39m)\u001b[3X\u001b[26;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m []\u001b[27;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore\u001b(B\u001b[m(dictionary, batch_size, host, port, keys, logger):\u001b[2X\u001b[29;44H\u001b[1K\u001b[C119,1\u001b[9X\u001b[9C63%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[44.648528, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\n\u001b[1K\u001b[8G\u001b[1K\u001b[Cfiltered_output = []\u001b[3;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m output:\u001b[4;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line.strip():\u001b[30X\u001b[5;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip blanks\u001b[39m\u001b[23X\u001b[6;62H\u001b[1K\u001b[7;12H\u001b[1K\u001b[Cparts = line.split()\u001b[30X\u001b[8;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) > \u001b[38;5;130m2\u001b[39m:\u001b[9;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip yapping\u001b[39m\u001b[22X\u001b[10;62H\u001b[1K\n\u001b[1K\u001b[12G\u001b[1K\u001b[Ccommand = parts[-\u001b[38;5;130m1\u001b[39m]\u001b[12;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m command \u001b[33min\u001b[39m keys:\u001b[13;16H\u001b[1K\u001b[Cfiltered_output.append(command)\u001b[15X\u001b[14;62H\u001b[1K\u001b[15;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m \u001b[33mand\u001b[39m \u001b[38;5;130m\".\"\u001b[39m \u001b[33min\u001b[39m parts[\u001b[38;5;130m0\u001b[39m]:\u001b[11X\u001b[16;16H\u001b[1K\u001b[Cnumber, *rest = parts[\u001b[38;5;130m0\u001b[39m].split(\u001b[38;5;130m\".\"\u001b[39m, \u001b[38;5;130m1\u001b[39m)\u001b[8X\u001b[17;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m number.isdigit() \u001b[33mand\u001b[39m rest[\u001b[38;5;130m0\u001b[39m] \u001b[33min\u001b[39m keys:\u001b[6X\u001b[18;20H\u001b[1K\u001b[Cfiltered_output.append(rest[\u001b[38;5;130m0\u001b[39m])\u001b[11X\u001b[19;62H\u001b[1K\u001b[20;8H\u001b[1K\u001b[Clogger.debug(f\u001b[38;5;130m\"Full response: {response.text}\"\u001b[39m)\u001b[7X\u001b[21;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m filtered_output\u001b[22;62H\u001b[1K\u001b[23;4H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m requests.RequestException \u001b[33mas\u001b[39m e:\u001b[20X\u001b[24;8H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"Error making request to {url}: {e}\"\u001b[39m)\u001b[3X\u001b[25;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m []\u001b[26;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore\u001b(B\u001b[m(dictionary, batch_size, host, port, keys, logger):\u001b[2X\u001b[28;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ctotal = \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[29;44H\u001b[1K\u001b[C120,1\u001b[9X\u001b[9C64%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[44.864254, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Cfiltered_output = []\u001b[2;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m output:\u001b[3;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line.strip():\u001b[30X\u001b[4;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip blanks\u001b[39m\u001b[23X\u001b[5;62H\u001b[1K\u001b[6;12H\u001b[1K\u001b[Cparts = line.split()\u001b[30X\u001b[7;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) > \u001b[38;5;130m2\u001b[39m:\u001b[8;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip yapping\u001b[39m\u001b[22X\u001b[9;62H\u001b[1K\n\u001b[1K\u001b[12G\u001b[1K\u001b[Ccommand = parts[-\u001b[38;5;130m1\u001b[39m]\u001b[11;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m command \u001b[33min\u001b[39m keys:\u001b[12;16H\u001b[1K\u001b[Cfiltered_output.append(command)\u001b[15X\u001b[13;62H\u001b[1K\u001b[14;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m \u001b[33mand\u001b[39m \u001b[38;5;130m\".\"\u001b[39m \u001b[33min\u001b[39m parts[\u001b[38;5;130m0\u001b[39m]:\u001b[11X\u001b[15;16H\u001b[1K\u001b[Cnumber, *rest = parts[\u001b[38;5;130m0\u001b[39m].split(\u001b[38;5;130m\".\"\u001b[39m, \u001b[38;5;130m1\u001b[39m)\u001b[8X\u001b[16;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m number.isdigit() \u001b[33mand\u001b[39m rest[\u001b[38;5;130m0\u001b[39m] \u001b[33min\u001b[39m keys:\u001b[6X\u001b[17;20H\u001b[1K\u001b[Cfiltered_output.append(rest[\u001b[38;5;130m0\u001b[39m])\u001b[11X\u001b[18;62H\u001b[1K\u001b[19;8H\u001b[1K\u001b[Clogger.debug(f\u001b[38;5;130m\"Full response: {response.text}\"\u001b[39m)\u001b[7X\u001b[20;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m filtered_output\u001b[21;62H\u001b[1K\u001b[22;4H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m requests.RequestException \u001b[33mas\u001b[39m e:\u001b[20X\u001b[23;8H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"Error making request to {url}: {e}\"\u001b[39m)\u001b[3X\u001b[24;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m []\u001b[25;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore\u001b(B\u001b[m(dictionary, batch_size, host, port, keys, logger):\u001b[2X\u001b[27;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ctotal = \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[28;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ccount = \u001b[38;5;130m0\u001b[39m\u001b[29;44H\u001b[1K\u001b[C121,1\u001b[9X\u001b[9C65%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[45.11024, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m line \u001b[33min\u001b[39m output:\u001b[2;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line.strip():\u001b[30X\u001b[3;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip blanks\u001b[39m\u001b[23X\u001b[4;62H\u001b[1K\u001b[5;12H\u001b[1K\u001b[Cparts = line.split()\u001b[30X\u001b[6;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) > \u001b[38;5;130m2\u001b[39m:\u001b[7;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip yapping\u001b[39m\u001b[22X\u001b[8;62H\u001b[1K\n\u001b[1K\u001b[12G\u001b[1K\u001b[Ccommand = parts[-\u001b[38;5;130m1\u001b[39m]\u001b[10;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m command \u001b[33min\u001b[39m keys:\u001b[11;16H\u001b[1K\u001b[Cfiltered_output.append(command)\u001b[15X\u001b[12;62H\u001b[1K\u001b[13;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m \u001b[33mand\u001b[39m \u001b[38;5;130m\".\"\u001b[39m \u001b[33min\u001b[39m parts[\u001b[38;5;130m0\u001b[39m]:\u001b[11X\u001b[14;16H\u001b[1K\u001b[Cnumber, *rest = parts[\u001b[38;5;130m0\u001b[39m].split(\u001b[38;5;130m\".\"\u001b[39m, \u001b[38;5;130m1\u001b[39m)\u001b[8X\u001b[15;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m number.isdigit() \u001b[33mand\u001b[39m rest[\u001b[38;5;130m0\u001b[39m] \u001b[33min\u001b[39m keys:\u001b[6X\u001b[16;20H\u001b[1K\u001b[Cfiltered_output.append(rest[\u001b[38;5;130m0\u001b[39m])\u001b[11X\u001b[17;62H\u001b[1K\u001b[18;8H\u001b[1K\u001b[Clogger.debug(f\u001b[38;5;130m\"Full response: {response.text}\"\u001b[39m)\u001b[7X\u001b[19;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m filtered_output\u001b[20;62H\u001b[1K\u001b[21;4H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m requests.RequestException \u001b[33mas\u001b[39m e:\u001b[20X\u001b[22;8H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"Error making request to {url}: {e}\"\u001b[39m)\u001b[3X\u001b[23;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m []\u001b[24;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore\u001b(B\u001b[m(dictionary, batch_size, host, port, keys, logger):\u001b[2X\u001b[26;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ctotal = \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[27;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ccount = \u001b[38;5;130m0\u001b[39m\u001b[28;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m batch \u001b[33min\u001b[39m chunker(keys, batch_size):\u001b[19X\n\u001b[1K\u001b[C122,1\u001b[9X\u001b[9C65%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[45.309108, "o", "\u001b[?25l\u001b[1;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[33mnot\u001b[39m line.strip():\u001b[30X\u001b[2;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip blanks\u001b[39m\u001b[23X\u001b[3;62H\u001b[1K\u001b[4;12H\u001b[1K\u001b[Cparts = line.split()\u001b[30X\u001b[5;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) > \u001b[38;5;130m2\u001b[39m:\u001b[6;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip yapping\u001b[39m\u001b[22X\u001b[7;62H\u001b[1K\n\u001b[1K\u001b[12G\u001b[1K\u001b[Ccommand = parts[-\u001b[38;5;130m1\u001b[39m]\u001b[9;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m command \u001b[33min\u001b[39m keys:\u001b[10;16H\u001b[1K\u001b[Cfiltered_output.append(command)\u001b[15X\u001b[11;62H\u001b[1K\u001b[12;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m \u001b[33mand\u001b[39m \u001b[38;5;130m\".\"\u001b[39m \u001b[33min\u001b[39m parts[\u001b[38;5;130m0\u001b[39m]:\u001b[11X\u001b[13;16H\u001b[1K\u001b[Cnumber, *rest = parts[\u001b[38;5;130m0\u001b[39m].split(\u001b[38;5;130m\".\"\u001b[39m, \u001b[38;5;130m1\u001b[39m)\u001b[8X\u001b[14;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m number.isdigit() \u001b[33mand\u001b[39m rest[\u001b[38;5;130m0\u001b[39m] \u001b[33min\u001b[39m keys:\u001b[6X\u001b[15;20H\u001b[1K\u001b[Cfiltered_output.append(rest[\u001b[38;5;130m0\u001b[39m])\u001b[11X\u001b[16;62H\u001b[1K\u001b[17;8H\u001b[1K\u001b[Clogger.debug(f\u001b[38;5;130m\"Full response: {response.text}\"\u001b[39m)\u001b[7X\u001b[18;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m filtered_output\u001b[19;62H\u001b[1K\u001b[20;4H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m requests.RequestException \u001b[33mas\u001b[39m e:\u001b[20X\u001b[21;8H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"Error making request to {url}: {e}\"\u001b[39m)\u001b[3X\u001b[22;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m []\u001b[23;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore\u001b(B\u001b[m(dictionary, batch_size, host, port, keys, logger):\u001b[2X\u001b[25;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ctotal = \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[26;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ccount = \u001b[38;5;130m0\u001b[39m\u001b[27;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m batch \u001b[33min\u001b[39m chunker(keys, batch_size):\u001b[19X\u001b[28;8H\u001b[1K\u001b[Cranked = rank(batch, host, port, logger)\u001b[14X\u001b[29;44H\u001b[1K\u001b[C123,1\u001b[9X\u001b[9C66%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[45.469813, "o", "\u001b[?25l\u001b[1;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip blanks\u001b[39m\u001b[23X\u001b[2;62H\u001b[1K\u001b[3;12H\u001b[1K\u001b[Cparts = line.split()\u001b[30X\u001b[4;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) > \u001b[38;5;130m2\u001b[39m:\u001b[5;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip yapping\u001b[39m\u001b[22X\u001b[6;62H\u001b[1K\n\u001b[1K\u001b[12G\u001b[1K\u001b[Ccommand = parts[-\u001b[38;5;130m1\u001b[39m]\u001b[8;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m command \u001b[33min\u001b[39m keys:\u001b[9;16H\u001b[1K\u001b[Cfiltered_output.append(command)\u001b[15X\u001b[10;62H\u001b[1K\u001b[11;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m \u001b[33mand\u001b[39m \u001b[38;5;130m\".\"\u001b[39m \u001b[33min\u001b[39m parts[\u001b[38;5;130m0\u001b[39m]:\u001b[11X\u001b[12;16H\u001b[1K\u001b[Cnumber, *rest = parts[\u001b[38;5;130m0\u001b[39m].split(\u001b[38;5;130m\".\"\u001b[39m, \u001b[38;5;130m1\u001b[39m)\u001b[8X\u001b[13;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m number.isdigit() \u001b[33mand\u001b[39m rest[\u001b[38;5;130m0\u001b[39m] \u001b[33min\u001b[39m keys:\u001b[6X\u001b[14;20H\u001b[1K\u001b[Cfiltered_output.append(rest[\u001b[38;5;130m0\u001b[39m])\u001b[11X\u001b[15;62H\u001b[1K\u001b[16;8H\u001b[1K\u001b[Clogger.debug(f\u001b[38;5;130m\"Full response: {response.text}\"\u001b[39m)\u001b[7X\u001b[17;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m filtered_output\u001b[18;62H\u001b[1K\u001b[19;4H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m requests.RequestException \u001b[33mas\u001b[39m e:\u001b[20X\u001b[20;8H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"Error making request to {url}: {e}\"\u001b[39m)\u001b[3X\u001b[21;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m []\u001b[22;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore\u001b(B\u001b[m(dictionary, batch_size, host, port, keys, logger):\u001b[2X\u001b[24;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ctotal = \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[25;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ccount = \u001b[38;5;130m0\u001b[39m\u001b[26;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m batch \u001b[33min\u001b[39m chunker(keys, batch_size):\u001b[19X\u001b[27;8H\u001b[1K\u001b[Cranked = rank(batch, host, port, logger)\u001b[14X\u001b[28;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i, name \u001b[33min\u001b[39m \u001b[36m\u001b[1menumerate\u001b(B\u001b[m(\u001b[36m\u001b[1mreversed\u001b(B\u001b[m(ranked), start=\u001b[38;5;130m1\u001b[39m):\u001b[2X\u001b[29;44H\u001b[1K\u001b[C124,1\u001b[9X\u001b[9C67%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[45.954672, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[2;12H\u001b[1K\u001b[Cparts = line.split()\u001b[30X\u001b[3;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) > \u001b[38;5;130m2\u001b[39m:\u001b[4;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip yapping\u001b[39m\u001b[22X\u001b[5;62H\u001b[1K\n\u001b[1K\u001b[12G\u001b[1K\u001b[Ccommand = parts[-\u001b[38;5;130m1\u001b[39m]\u001b[7;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m command \u001b[33min\u001b[39m keys:\u001b[8;16H\u001b[1K\u001b[Cfiltered_output.append(command)\u001b[15X\u001b[9;62H\u001b[1K\u001b[10;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m \u001b[33mand\u001b[39m \u001b[38;5;130m\".\"\u001b[39m \u001b[33min\u001b[39m parts[\u001b[38;5;130m0\u001b[39m]:\u001b[11X\u001b[11;16H\u001b[1K\u001b[Cnumber, *rest = parts[\u001b[38;5;130m0\u001b[39m].split(\u001b[38;5;130m\".\"\u001b[39m, \u001b[38;5;130m1\u001b[39m)\u001b[8X\u001b[12;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m number.isdigit() \u001b[33mand\u001b[39m rest[\u001b[38;5;130m0\u001b[39m] \u001b[33min\u001b[39m keys:\u001b[6X\u001b[13;20H\u001b[1K\u001b[Cfiltered_output.append(rest[\u001b[38;5;130m0\u001b[39m])\u001b[11X\u001b[14;62H\u001b[1K\u001b[15;8H\u001b[1K\u001b[Clogger.debug(f\u001b[38;5;130m\"Full response: {response.text}\"\u001b[39m)\u001b[7X\u001b[16;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m filtered_output\u001b[17;62H\u001b[1K\u001b[18;4H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m requests.RequestException \u001b[33mas\u001b[39m e:\u001b[20X\u001b[19;8H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"Error making request to {url}: {e}\"\u001b[39m)\u001b[3X\u001b[20;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m []\u001b[21;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore\u001b(B\u001b[m(dictionary, batch_size, host, port, keys, logger):\u001b[2X\u001b[23;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ctotal = \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[24;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ccount = \u001b[38;5;130m0\u001b[39m\u001b[25;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m batch \u001b[33min\u001b[39m chunker(keys, batch_size):\u001b[19X\u001b[26;8H\u001b[1K\u001b[Cranked = rank(batch, host, port, logger)\u001b[14X\u001b[27;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i, name \u001b[33min\u001b[39m \u001b[36m\u001b[1menumerate\u001b(B\u001b[m(\u001b[36m\u001b[1mreversed\u001b(B\u001b[m(ranked), start=\u001b[38;5;130m1\u001b[39m):\u001b[2X\u001b[28;12H\u001b[1K\u001b[Cdictionary[name][\u001b[38;5;130m\"score\"\u001b[39m] += i\u001b[20X\u001b[29;44H\u001b[1K\u001b[C125,1\u001b[9X\u001b[9C67%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[45.995718, "o", "\u001b[?25l\u001b[1;12H\u001b[1K\u001b[Cparts = line.split()\u001b[30X\u001b[2;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) > \u001b[38;5;130m2\u001b[39m:\u001b[3;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip yapping\u001b[39m\u001b[22X\u001b[4;62H\u001b[1K\n\u001b[1K\u001b[12G\u001b[1K\u001b[Ccommand = parts[-\u001b[38;5;130m1\u001b[39m]\u001b[6;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m command \u001b[33min\u001b[39m keys:\u001b[7;16H\u001b[1K\u001b[Cfiltered_output.append(command)\u001b[15X\u001b[8;62H\u001b[1K\u001b[9;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m \u001b[33mand\u001b[39m \u001b[38;5;130m\".\"\u001b[39m \u001b[33min\u001b[39m parts[\u001b[38;5;130m0\u001b[39m]:\u001b[11X\u001b[10;16H\u001b[1K\u001b[Cnumber, *rest = parts[\u001b[38;5;130m0\u001b[39m].split(\u001b[38;5;130m\".\"\u001b[39m, \u001b[38;5;130m1\u001b[39m)\u001b[8X\u001b[11;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m number.isdigit() \u001b[33mand\u001b[39m rest[\u001b[38;5;130m0\u001b[39m] \u001b[33min\u001b[39m keys:\u001b[6X\u001b[12;20H\u001b[1K\u001b[Cfiltered_output.append(rest[\u001b[38;5;130m0\u001b[39m])\u001b[11X\u001b[13;62H\u001b[1K\u001b[14;8H\u001b[1K\u001b[Clogger.debug(f\u001b[38;5;130m\"Full response: {response.text}\"\u001b[39m)\u001b[7X\u001b[15;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m filtered_output\u001b[16;62H\u001b[1K\u001b[17;4H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m requests.RequestException \u001b[33mas\u001b[39m e:\u001b[20X\u001b[18;8H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"Error making request to {url}: {e}\"\u001b[39m)\u001b[3X\u001b[19;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m []\u001b[20;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore\u001b(B\u001b[m(dictionary, batch_size, host, port, keys, logger):\u001b[2X\u001b[22;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ctotal = \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[23;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ccount = \u001b[38;5;130m0\u001b[39m\u001b[24;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m batch \u001b[33min\u001b[39m chunker(keys, batch_size):\u001b[19X\u001b[25;8H\u001b[1K\u001b[Cranked = rank(batch, host, port, logger)\u001b[14X\u001b[26;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i, name \u001b[33min\u001b[39m \u001b[36m\u001b[1menumerate\u001b(B\u001b[m(\u001b[36m\u001b[1mreversed\u001b(B\u001b[m(ranked), start=\u001b[38;5;130m1\u001b[39m):\u001b[2X\u001b[27;12H\u001b[1K\u001b[Cdictionary[name][\u001b[38;5;130m\"score\"\u001b[39m] += i\u001b[20X\u001b[28;12H\u001b[1K\u001b[36m\u001b[1m\u001b[Cprint\u001b(B\u001b[m(f\u001b[38;5;130m\"{dictionary[name]['score']} {name}\"\u001b[39m)\u001b[6X\u001b[29;44H\u001b[1K\u001b[C126,1\u001b[9X\u001b[9C68%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[46.014484, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) > \u001b[38;5;130m2\u001b[39m:\u001b[2;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip yapping\u001b[39m\u001b[22X\u001b[3;62H\u001b[1K\n\u001b[1K\u001b[12G\u001b[1K\u001b[Ccommand = parts[-\u001b[38;5;130m1\u001b[39m]\u001b[5;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m command \u001b[33min\u001b[39m keys:\u001b[6;16H\u001b[1K\u001b[Cfiltered_output.append(command)\u001b[15X\u001b[7;62H\u001b[1K\u001b[8;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m \u001b[33mand\u001b[39m \u001b[38;5;130m\".\"\u001b[39m \u001b[33min\u001b[39m parts[\u001b[38;5;130m0\u001b[39m]:\u001b[11X\u001b[9;16H\u001b[1K\u001b[Cnumber, *rest = parts[\u001b[38;5;130m0\u001b[39m].split(\u001b[38;5;130m\".\"\u001b[39m, \u001b[38;5;130m1\u001b[39m)\u001b[8X\u001b[10;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m number.isdigit() \u001b[33mand\u001b[39m rest[\u001b[38;5;130m0\u001b[39m] \u001b[33min\u001b[39m keys:\u001b[6X\u001b[11;20H\u001b[1K\u001b[Cfiltered_output.append(rest[\u001b[38;5;130m0\u001b[39m])\u001b[11X\u001b[12;62H\u001b[1K\u001b[13;8H\u001b[1K\u001b[Clogger.debug(f\u001b[38;5;130m\"Full response: {response.text}\"\u001b[39m)\u001b[7X\u001b[14;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m filtered_output\u001b[15;62H\u001b[1K\u001b[16;4H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m requests.RequestException \u001b[33mas\u001b[39m e:\u001b[20X\u001b[17;8H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"Error making request to {url}: {e}\"\u001b[39m)\u001b[3X\u001b[18;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m []\u001b[19;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore\u001b(B\u001b[m(dictionary, batch_size, host, port, keys, logger):\u001b[2X\u001b[21;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ctotal = \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[22;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ccount = \u001b[38;5;130m0\u001b[39m\u001b[23;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m batch \u001b[33min\u001b[39m chunker(keys, batch_size):\u001b[19X\u001b[24;8H\u001b[1K\u001b[Cranked = rank(batch, host, port, logger)\u001b[14X\u001b[25;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i, name \u001b[33min\u001b[39m \u001b[36m\u001b[1menumerate\u001b(B\u001b[m(\u001b[36m\u001b[1mreversed\u001b(B\u001b[m(ranked), start=\u001b[38;5;130m1\u001b[39m):\u001b[2X\u001b[26;12H\u001b[1K\u001b[Cdictionary[name][\u001b[38;5;130m\"score\"\u001b[39m] += i\u001b[20X\u001b[27;12H\u001b[1K\u001b[36m\u001b[1m\u001b[Cprint\u001b(B\u001b[m(f\u001b[38;5;130m\"{dictionary[name]['score']} {name}\"\u001b[39m)\u001b[6X\u001b[28;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Csys.stdout.flush()\u001b[29;44H\u001b[1K\u001b[C127,1\u001b[9X\u001b[9C69%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[46.053269, "o", "\u001b[?25l\u001b[1;16H\u001b[1K\u001b[33m\u001b[Ccontinue\u001b[39m  \u001b[36m# Skip yapping\u001b[39m\u001b[22X\u001b[2;62H\u001b[1K\n\u001b[1K\u001b[12G\u001b[1K\u001b[Ccommand = parts[-\u001b[38;5;130m1\u001b[39m]\u001b[4;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m command \u001b[33min\u001b[39m keys:\u001b[5;16H\u001b[1K\u001b[Cfiltered_output.append(command)\u001b[15X\u001b[6;62H\u001b[1K\u001b[7;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m \u001b[33mand\u001b[39m \u001b[38;5;130m\".\"\u001b[39m \u001b[33min\u001b[39m parts[\u001b[38;5;130m0\u001b[39m]:\u001b[11X\u001b[8;16H\u001b[1K\u001b[Cnumber, *rest = parts[\u001b[38;5;130m0\u001b[39m].split(\u001b[38;5;130m\".\"\u001b[39m, \u001b[38;5;130m1\u001b[39m)\u001b[8X\u001b[9;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m number.isdigit() \u001b[33mand\u001b[39m rest[\u001b[38;5;130m0\u001b[39m] \u001b[33min\u001b[39m keys:\u001b[6X\u001b[10;20H\u001b[1K\u001b[Cfiltered_output.append(rest[\u001b[38;5;130m0\u001b[39m])\u001b[11X\u001b[11;62H\u001b[1K\u001b[12;8H\u001b[1K\u001b[Clogger.debug(f\u001b[38;5;130m\"Full response: {response.text}\"\u001b[39m)\u001b[7X\u001b[13;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m filtered_output\u001b[14;62H\u001b[1K\u001b[15;4H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m requests.RequestException \u001b[33mas\u001b[39m e:\u001b[20X\u001b[16;8H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"Error making request to {url}: {e}\"\u001b[39m)\u001b[3X\u001b[17;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m []\u001b[18;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore\u001b(B\u001b[m(dictionary, batch_size, host, port, keys, logger):\u001b[2X\u001b[20;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ctotal = \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[21;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ccount = \u001b[38;5;130m0\u001b[39m\u001b[22;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m batch \u001b[33min\u001b[39m chunker(keys, batch_size):\u001b[19X\u001b[23;8H\u001b[1K\u001b[Cranked = rank(batch, host, port, logger)\u001b[14X\u001b[24;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i, name \u001b[33min\u001b[39m \u001b[36m\u001b[1menumerate\u001b(B\u001b[m(\u001b[36m\u001b[1mreversed\u001b(B\u001b[m(ranked), start=\u001b[38;5;130m1\u001b[39m):\u001b[2X\u001b[25;12H\u001b[1K\u001b[Cdictionary[name][\u001b[38;5;130m\"score\"\u001b[39m] += i\u001b[20X\u001b[26;12H\u001b[1K\u001b[36m\u001b[1m\u001b[Cprint\u001b(B\u001b[m(f\u001b[38;5;130m\"{dictionary[name]['score']} {name}\"\u001b[39m)\u001b[6X\u001b[27;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Csys.stdout.flush()\u001b[28;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Ccount += batch_size\u001b[29;44H\u001b[1K\u001b[C128,1\u001b[9X\u001b[9C69%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[46.094844, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\n\u001b[1K\u001b[12G\u001b[1K\u001b[Ccommand = parts[-\u001b[38;5;130m1\u001b[39m]\u001b[3;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m command \u001b[33min\u001b[39m keys:\u001b[4;16H\u001b[1K\u001b[Cfiltered_output.append(command)\u001b[15X\u001b[5;62H\u001b[1K\u001b[6;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m \u001b[33mand\u001b[39m \u001b[38;5;130m\".\"\u001b[39m \u001b[33min\u001b[39m parts[\u001b[38;5;130m0\u001b[39m]:\u001b[11X\u001b[7;16H\u001b[1K\u001b[Cnumber, *rest = parts[\u001b[38;5;130m0\u001b[39m].split(\u001b[38;5;130m\".\"\u001b[39m, \u001b[38;5;130m1\u001b[39m)\u001b[8X\u001b[8;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m number.isdigit() \u001b[33mand\u001b[39m rest[\u001b[38;5;130m0\u001b[39m] \u001b[33min\u001b[39m keys:\u001b[6X\u001b[9;20H\u001b[1K\u001b[Cfiltered_output.append(rest[\u001b[38;5;130m0\u001b[39m])\u001b[11X\u001b[10;62H\u001b[1K\u001b[11;8H\u001b[1K\u001b[Clogger.debug(f\u001b[38;5;130m\"Full response: {response.text}\"\u001b[39m)\u001b[7X\u001b[12;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m filtered_output\u001b[13;62H\u001b[1K\u001b[14;4H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m requests.RequestException \u001b[33mas\u001b[39m e:\u001b[20X\u001b[15;8H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"Error making request to {url}: {e}\"\u001b[39m)\u001b[3X\u001b[16;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m []\u001b[17;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore\u001b(B\u001b[m(dictionary, batch_size, host, port, keys, logger):\u001b[2X\u001b[19;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ctotal = \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[20;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ccount = \u001b[38;5;130m0\u001b[39m\u001b[21;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m batch \u001b[33min\u001b[39m chunker(keys, batch_size):\u001b[19X\u001b[22;8H\u001b[1K\u001b[Cranked = rank(batch, host, port, logger)\u001b[14X\u001b[23;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i, name \u001b[33min\u001b[39m \u001b[36m\u001b[1menumerate\u001b(B\u001b[m(\u001b[36m\u001b[1mreversed\u001b(B\u001b[m(ranked), start=\u001b[38;5;130m1\u001b[39m):\u001b[2X\u001b[24;12H\u001b[1K\u001b[Cdictionary[name][\u001b[38;5;130m\"score\"\u001b[39m] += i\u001b[20X\u001b[25;12H\u001b[1K\u001b[36m\u001b[1m\u001b[Cprint\u001b(B\u001b[m(f\u001b[38;5;130m\"{dictionary[name]['score']} {name}\"\u001b[39m)\u001b[6X\u001b[26;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Csys.stdout.flush()\u001b[27;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Ccount += batch_size\u001b[28;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m ranked:\u001b[29;44H\u001b[1K\u001b[C129,1\u001b[9X\u001b[9C70%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[46.113825, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[12G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m command \u001b[33min\u001b[39m keys:\u001b[2;16H\u001b[1K\u001b[Cfiltered_output.append(command)\u001b[15X\u001b[3;62H\u001b[1K\u001b[4;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m \u001b[33mand\u001b[39m \u001b[38;5;130m\".\"\u001b[39m \u001b[33min\u001b[39m parts[\u001b[38;5;130m0\u001b[39m]:\u001b[11X\u001b[5;16H\u001b[1K\u001b[Cnumber, *rest = parts[\u001b[38;5;130m0\u001b[39m].split(\u001b[38;5;130m\".\"\u001b[39m, \u001b[38;5;130m1\u001b[39m)\u001b[8X\u001b[6;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m number.isdigit() \u001b[33mand\u001b[39m rest[\u001b[38;5;130m0\u001b[39m] \u001b[33min\u001b[39m keys:\u001b[6X\u001b[7;20H\u001b[1K\u001b[Cfiltered_output.append(rest[\u001b[38;5;130m0\u001b[39m])\u001b[11X\u001b[8;62H\u001b[1K\u001b[9;8H\u001b[1K\u001b[Clogger.debug(f\u001b[38;5;130m\"Full response: {response.text}\"\u001b[39m)\u001b[7X\u001b[10;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m filtered_output\u001b[11;62H\u001b[1K\u001b[12;4H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m requests.RequestException \u001b[33mas\u001b[39m e:\u001b[20X\u001b[13;8H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"Error making request to {url}: {e}\"\u001b[39m)\u001b[3X\u001b[14;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m []\u001b[15;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore\u001b(B\u001b[m(dictionary, batch_size, host, port, keys, logger):\u001b[2X\u001b[17;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ctotal = \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[18;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ccount = \u001b[38;5;130m0\u001b[39m\u001b[19;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m batch \u001b[33min\u001b[39m chunker(keys, batch_size):\u001b[19X\u001b[20;8H\u001b[1K\u001b[Cranked = rank(batch, host, port, logger)\u001b[14X\u001b[21;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i, name \u001b[33min\u001b[39m \u001b[36m\u001b[1menumerate\u001b(B\u001b[m(\u001b[36m\u001b[1mreversed\u001b(B\u001b[m(ranked), start=\u001b[38;5;130m1\u001b[39m):\u001b[2X\u001b[22;12H\u001b[1K\u001b[Cdictionary[name][\u001b[38;5;130m\"score\"\u001b[39m] += i\u001b[20X\u001b[23;12H\u001b[1K\u001b[36m\u001b[1m\u001b[Cprint\u001b(B\u001b[m(f\u001b[38;5;130m\"{dictionary[name]['score']} {name}\"\u001b[39m)\u001b[6X\u001b[24;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Csys.stdout.flush()\u001b[25;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Ccount += batch_size\u001b[26;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m ranked:\u001b[27;12H\u001b[1K\u001b[Clogger.info(f\u001b[38;5;130m\"{count}/{total} - winner: {ranked[0]\u001b[39m\u001b[28;62H\u001b[1K\u001b[38;5;130m\r}\"\u001b[39m)\u001b[29;44H\u001b[1K\u001b[C130,1\u001b[9X\u001b[9C71%\u001b[1X\u001b[?12l\u001b[?25h\u001b[27;1H"]
[46.154319, "o", "\u001b[?25l\u001b[1;16H\u001b[1K\u001b[Cfiltered_output.append(command)\u001b[15X\u001b[2;62H\u001b[1K\u001b[3;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m \u001b[33mand\u001b[39m \u001b[38;5;130m\".\"\u001b[39m \u001b[33min\u001b[39m parts[\u001b[38;5;130m0\u001b[39m]:\u001b[11X\u001b[4;16H\u001b[1K\u001b[Cnumber, *rest = parts[\u001b[38;5;130m0\u001b[39m].split(\u001b[38;5;130m\".\"\u001b[39m, \u001b[38;5;130m1\u001b[39m)\u001b[8X\u001b[5;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m number.isdigit() \u001b[33mand\u001b[39m rest[\u001b[38;5;130m0\u001b[39m] \u001b[33min\u001b[39m keys:\u001b[6X\u001b[6;20H\u001b[1K\u001b[Cfiltered_output.append(rest[\u001b[38;5;130m0\u001b[39m])\u001b[11X\u001b[7;62H\u001b[1K\u001b[8;8H\u001b[1K\u001b[Clogger.debug(f\u001b[38;5;130m\"Full response: {response.text}\"\u001b[39m)\u001b[7X\u001b[9;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m filtered_output\u001b[10;62H\u001b[1K\u001b[11;4H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m requests.RequestException \u001b[33mas\u001b[39m e:\u001b[20X\u001b[12;8H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"Error making request to {url}: {e}\"\u001b[39m)\u001b[3X\u001b[13;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m []\u001b[14;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore\u001b(B\u001b[m(dictionary, batch_size, host, port, keys, logger):\u001b[2X\u001b[16;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ctotal = \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[17;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ccount = \u001b[38;5;130m0\u001b[39m\u001b[18;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m batch \u001b[33min\u001b[39m chunker(keys, batch_size):\u001b[19X\u001b[19;8H\u001b[1K\u001b[Cranked = rank(batch, host, port, logger)\u001b[14X\u001b[20;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i, name \u001b[33min\u001b[39m \u001b[36m\u001b[1menumerate\u001b(B\u001b[m(\u001b[36m\u001b[1mreversed\u001b(B\u001b[m(ranked), start=\u001b[38;5;130m1\u001b[39m):\u001b[2X\u001b[21;12H\u001b[1K\u001b[Cdictionary[name][\u001b[38;5;130m\"score\"\u001b[39m] += i\u001b[20X\u001b[22;12H\u001b[1K\u001b[36m\u001b[1m\u001b[Cprint\u001b(B\u001b[m(f\u001b[38;5;130m\"{dictionary[name]['score']} {name}\"\u001b[39m)\u001b[6X\u001b[23;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Csys.stdout.flush()\u001b[24;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Ccount += batch_size\u001b[25;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m ranked:\u001b[26;12H\u001b[1K\u001b[Clogger.info(f\u001b[38;5;130m\"{count}/{total} - winner: {ranked[0]\u001b[39m\u001b[27;62H\u001b[1K\u001b[38;5;130m\r}\"\u001b[39m)\u001b[28;62H\u001b[1K\u001b[29;44H\u001b[1K\u001b[C131,0-1\u001b[7X\u001b[7C72%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[46.17476, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[2;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m \u001b[33mand\u001b[39m \u001b[38;5;130m\".\"\u001b[39m \u001b[33min\u001b[39m parts[\u001b[38;5;130m0\u001b[39m]:\u001b[11X\u001b[3;16H\u001b[1K\u001b[Cnumber, *rest = parts[\u001b[38;5;130m0\u001b[39m].split(\u001b[38;5;130m\".\"\u001b[39m, \u001b[38;5;130m1\u001b[39m)\u001b[8X\u001b[4;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m number.isdigit() \u001b[33mand\u001b[39m rest[\u001b[38;5;130m0\u001b[39m] \u001b[33min\u001b[39m keys:\u001b[6X\u001b[5;20H\u001b[1K\u001b[Cfiltered_output.append(rest[\u001b[38;5;130m0\u001b[39m])\u001b[11X\u001b[6;62H\u001b[1K\u001b[7;8H\u001b[1K\u001b[Clogger.debug(f\u001b[38;5;130m\"Full response: {response.text}\"\u001b[39m)\u001b[7X\u001b[8;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m filtered_output\u001b[9;62H\u001b[1K\u001b[10;4H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m requests.RequestException \u001b[33mas\u001b[39m e:\u001b[20X\u001b[11;8H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"Error making request to {url}: {e}\"\u001b[39m)\u001b[3X\u001b[12;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m []\u001b[13;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore\u001b(B\u001b[m(dictionary, batch_size, host, port, keys, logger):\u001b[2X\u001b[15;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ctotal = \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[16;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ccount = \u001b[38;5;130m0\u001b[39m\u001b[17;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m batch \u001b[33min\u001b[39m chunker(keys, batch_size):\u001b[19X\u001b[18;8H\u001b[1K\u001b[Cranked = rank(batch, host, port, logger)\u001b[14X\u001b[19;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i, name \u001b[33min\u001b[39m \u001b[36m\u001b[1menumerate\u001b(B\u001b[m(\u001b[36m\u001b[1mreversed\u001b(B\u001b[m(ranked), start=\u001b[38;5;130m1\u001b[39m):\u001b[2X\u001b[20;12H\u001b[1K\u001b[Cdictionary[name][\u001b[38;5;130m\"score\"\u001b[39m] += i\u001b[20X\u001b[21;12H\u001b[1K\u001b[36m\u001b[1m\u001b[Cprint\u001b(B\u001b[m(f\u001b[38;5;130m\"{dictionary[name]['score']} {name}\"\u001b[39m)\u001b[6X\u001b[22;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Csys.stdout.flush()\u001b[23;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Ccount += batch_size\u001b[24;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m ranked:\u001b[25;12H\u001b[1K\u001b[Clogger.info(f\u001b[38;5;130m\"{count}/{total} - winner: {ranked[0]\u001b[39m\u001b[26;62H\u001b[1K\u001b[38;5;130m\r}\"\u001b[39m)\u001b[27;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore_all\u001b(B\u001b[m(dictionary, batch_size, host, port, log_dir):\u001b[3X\u001b[29;44H\u001b[1K\u001b[C132,1\u001b[9X\u001b[9C72%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[46.213929, "o", "\u001b[?25l\u001b[1;12H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(parts) == \u001b[38;5;130m1\u001b[39m \u001b[33mand\u001b[39m \u001b[38;5;130m\".\"\u001b[39m \u001b[33min\u001b[39m parts[\u001b[38;5;130m0\u001b[39m]:\u001b[11X\u001b[2;16H\u001b[1K\u001b[Cnumber, *rest = parts[\u001b[38;5;130m0\u001b[39m].split(\u001b[38;5;130m\".\"\u001b[39m, \u001b[38;5;130m1\u001b[39m)\u001b[8X\u001b[3;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m number.isdigit() \u001b[33mand\u001b[39m rest[\u001b[38;5;130m0\u001b[39m] \u001b[33min\u001b[39m keys:\u001b[6X\u001b[4;20H\u001b[1K\u001b[Cfiltered_output.append(rest[\u001b[38;5;130m0\u001b[39m])\u001b[11X\u001b[5;62H\u001b[1K\u001b[6;8H\u001b[1K\u001b[Clogger.debug(f\u001b[38;5;130m\"Full response: {response.text}\"\u001b[39m)\u001b[7X\u001b[7;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m filtered_output\u001b[8;62H\u001b[1K\u001b[9;4H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m requests.RequestException \u001b[33mas\u001b[39m e:\u001b[20X\u001b[10;8H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"Error making request to {url}: {e}\"\u001b[39m)\u001b[3X\u001b[11;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m []\u001b[12;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore\u001b(B\u001b[m(dictionary, batch_size, host, port, keys, logger):\u001b[2X\u001b[14;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ctotal = \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[15;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ccount = \u001b[38;5;130m0\u001b[39m\u001b[16;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m batch \u001b[33min\u001b[39m chunker(keys, batch_size):\u001b[19X\u001b[17;8H\u001b[1K\u001b[Cranked = rank(batch, host, port, logger)\u001b[14X\u001b[18;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i, name \u001b[33min\u001b[39m \u001b[36m\u001b[1menumerate\u001b(B\u001b[m(\u001b[36m\u001b[1mreversed\u001b(B\u001b[m(ranked), start=\u001b[38;5;130m1\u001b[39m):\u001b[2X\u001b[19;12H\u001b[1K\u001b[Cdictionary[name][\u001b[38;5;130m\"score\"\u001b[39m] += i\u001b[20X\u001b[20;12H\u001b[1K\u001b[36m\u001b[1m\u001b[Cprint\u001b(B\u001b[m(f\u001b[38;5;130m\"{dictionary[name]['score']} {name}\"\u001b[39m)\u001b[6X\u001b[21;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Csys.stdout.flush()\u001b[22;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Ccount += batch_size\u001b[23;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m ranked:\u001b[24;12H\u001b[1K\u001b[Clogger.info(f\u001b[38;5;130m\"{count}/{total} - winner: {ranked[0]\u001b[39m\u001b[25;62H\u001b[1K\u001b[38;5;130m\r}\"\u001b[39m)\u001b[26;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore_all\u001b(B\u001b[m(dictionary, batch_size, host, port, log_dir):\u001b[3X\u001b[28;4H\u001b[1K\u001b[Clogger = setup_logger(log_dir)\u001b[28X\u001b[29;44H\u001b[1K\u001b[C133,1\u001b[9X\u001b[9C73%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[46.234543, "o", "\u001b[?25l\u001b[1;16H\u001b[1K\u001b[Cnumber, *rest = parts[\u001b[38;5;130m0\u001b[39m].split(\u001b[38;5;130m\".\"\u001b[39m, \u001b[38;5;130m1\u001b[39m)\u001b[8X\u001b[2;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m number.isdigit() \u001b[33mand\u001b[39m rest[\u001b[38;5;130m0\u001b[39m] \u001b[33min\u001b[39m keys:\u001b[6X\u001b[3;20H\u001b[1K\u001b[Cfiltered_output.append(rest[\u001b[38;5;130m0\u001b[39m])\u001b[11X\u001b[4;62H\u001b[1K\u001b[5;8H\u001b[1K\u001b[Clogger.debug(f\u001b[38;5;130m\"Full response: {response.text}\"\u001b[39m)\u001b[7X\u001b[6;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m filtered_output\u001b[7;62H\u001b[1K\u001b[8;4H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m requests.RequestException \u001b[33mas\u001b[39m e:\u001b[20X\u001b[9;8H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"Error making request to {url}: {e}\"\u001b[39m)\u001b[3X\u001b[10;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m []\u001b[11;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore\u001b(B\u001b[m(dictionary, batch_size, host, port, keys, logger):\u001b[2X\u001b[13;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ctotal = \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[14;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ccount = \u001b[38;5;130m0\u001b[39m\u001b[15;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m batch \u001b[33min\u001b[39m chunker(keys, batch_size):\u001b[19X\u001b[16;8H\u001b[1K\u001b[Cranked = rank(batch, host, port, logger)\u001b[14X\u001b[17;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i, name \u001b[33min\u001b[39m \u001b[36m\u001b[1menumerate\u001b(B\u001b[m(\u001b[36m\u001b[1mreversed\u001b(B\u001b[m(ranked), start=\u001b[38;5;130m1\u001b[39m):\u001b[2X\u001b[18;12H\u001b[1K\u001b[Cdictionary[name][\u001b[38;5;130m\"score\"\u001b[39m] += i\u001b[20X\u001b[19;12H\u001b[1K\u001b[36m\u001b[1m\u001b[Cprint\u001b(B\u001b[m(f\u001b[38;5;130m\"{dictionary[name]['score']} {name}\"\u001b[39m)\u001b[6X\u001b[20;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Csys.stdout.flush()\u001b[21;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Ccount += batch_size\u001b[22;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m ranked:\u001b[23;12H\u001b[1K\u001b[Clogger.info(f\u001b[38;5;130m\"{count}/{total} - winner: {ranked[0]\u001b[39m\u001b[24;62H\u001b[1K\u001b[38;5;130m\r}\"\u001b[39m)\u001b[25;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore_all\u001b(B\u001b[m(dictionary, batch_size, host, port, log_dir):\u001b[3X\u001b[27;4H\u001b[1K\u001b[Clogger = setup_logger(log_dir)\u001b[28X\u001b[28;4H\u001b[1K\u001b[Ckeys = \u001b[36m\u001b[1mlist\u001b(B\u001b[m(dictionary.keys())\u001b[28X\u001b[29;44H\u001b[1K\u001b[C134,1\u001b[9X\u001b[9C74%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[46.254965, "o", "\u001b[?25l\u001b[1;16H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m number.isdigit() \u001b[33mand\u001b[39m rest[\u001b[38;5;130m0\u001b[39m] \u001b[33min\u001b[39m keys:\u001b[6X\u001b[2;20H\u001b[1K\u001b[Cfiltered_output.append(rest[\u001b[38;5;130m0\u001b[39m])\u001b[11X\u001b[3;62H\u001b[1K\u001b[4;8H\u001b[1K\u001b[Clogger.debug(f\u001b[38;5;130m\"Full response: {response.text}\"\u001b[39m)\u001b[7X\u001b[5;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m filtered_output\u001b[6;62H\u001b[1K\u001b[7;4H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m requests.RequestException \u001b[33mas\u001b[39m e:\u001b[20X\u001b[8;8H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"Error making request to {url}: {e}\"\u001b[39m)\u001b[3X\u001b[9;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m []\u001b[10;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore\u001b(B\u001b[m(dictionary, batch_size, host, port, keys, logger):\u001b[2X\u001b[12;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ctotal = \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[13;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ccount = \u001b[38;5;130m0\u001b[39m\u001b[14;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m batch \u001b[33min\u001b[39m chunker(keys, batch_size):\u001b[19X\u001b[15;8H\u001b[1K\u001b[Cranked = rank(batch, host, port, logger)\u001b[14X\u001b[16;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i, name \u001b[33min\u001b[39m \u001b[36m\u001b[1menumerate\u001b(B\u001b[m(\u001b[36m\u001b[1mreversed\u001b(B\u001b[m(ranked), start=\u001b[38;5;130m1\u001b[39m):\u001b[2X\u001b[17;12H\u001b[1K\u001b[Cdictionary[name][\u001b[38;5;130m\"score\"\u001b[39m] += i\u001b[20X\u001b[18;12H\u001b[1K\u001b[36m\u001b[1m\u001b[Cprint\u001b(B\u001b[m(f\u001b[38;5;130m\"{dictionary[name]['score']} {name}\"\u001b[39m)\u001b[6X\u001b[19;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Csys.stdout.flush()\u001b[20;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Ccount += batch_size\u001b[21;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m ranked:\u001b[22;12H\u001b[1K\u001b[Clogger.info(f\u001b[38;5;130m\"{count}/{total} - winner: {ranked[0]\u001b[39m\u001b[23;62H\u001b[1K\u001b[38;5;130m\r}\"\u001b[39m)\u001b[24;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore_all\u001b(B\u001b[m(dictionary, batch_size, host, port, log_dir):\u001b[3X\u001b[26;4H\u001b[1K\u001b[Clogger = setup_logger(log_dir)\u001b[28X\u001b[27;4H\u001b[1K\u001b[Ckeys = \u001b[36m\u001b[1mlist\u001b(B\u001b[m(dictionary.keys())\u001b[28X\u001b[28;4H\u001b[1K\u001b[33m\u001b[Cwhile\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys) > batch_size:\u001b[29X\u001b[29;44H\u001b[1K\u001b[C135,1\u001b[9X\u001b[9C75%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[46.294894, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[2;8H\u001b[1K\u001b[Clogger.debug(f\u001b[38;5;130m\"Full response: {response.text}\"\u001b[39m)\u001b[7X\u001b[3;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m filtered_output\u001b[4;62H\u001b[1K\u001b[5;4H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m requests.RequestException \u001b[33mas\u001b[39m e:\u001b[20X\u001b[6;8H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"Error making request to {url}: {e}\"\u001b[39m)\u001b[3X\u001b[7;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m []\u001b[8;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore\u001b(B\u001b[m(dictionary, batch_size, host, port, keys, logger):\u001b[2X\u001b[10;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ctotal = \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[11;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ccount = \u001b[38;5;130m0\u001b[39m\u001b[12;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m batch \u001b[33min\u001b[39m chunker(keys, batch_size):\u001b[19X\u001b[13;8H\u001b[1K\u001b[Cranked = rank(batch, host, port, logger)\u001b[14X\u001b[14;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i, name \u001b[33min\u001b[39m \u001b[36m\u001b[1menumerate\u001b(B\u001b[m(\u001b[36m\u001b[1mreversed\u001b(B\u001b[m(ranked), start=\u001b[38;5;130m1\u001b[39m):\u001b[2X\u001b[15;12H\u001b[1K\u001b[Cdictionary[name][\u001b[38;5;130m\"score\"\u001b[39m] += i\u001b[20X\u001b[16;12H\u001b[1K\u001b[36m\u001b[1m\u001b[Cprint\u001b(B\u001b[m(f\u001b[38;5;130m\"{dictionary[name]['score']} {name}\"\u001b[39m)\u001b[6X\u001b[17;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Csys.stdout.flush()\u001b[18;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Ccount += batch_size\u001b[19;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m ranked:\u001b[20;12H\u001b[1K\u001b[Clogger.info(f\u001b[38;5;130m\"{count}/{total} - winner: {ranked[0]\u001b[39m\u001b[21;62H\u001b[1K\u001b[38;5;130m\r}\"\u001b[39m)\u001b[22;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore_all\u001b(B\u001b[m(dictionary, batch_size, host, port, log_dir):\u001b[3X\u001b[24;4H\u001b[1K\u001b[Clogger = setup_logger(log_dir)\u001b[28X\u001b[25;4H\u001b[1K\u001b[Ckeys = \u001b[36m\u001b[1mlist\u001b(B\u001b[m(dictionary.keys())\u001b[28X\u001b[26;4H\u001b[1K\u001b[33m\u001b[Cwhile\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys) > batch_size:\u001b[29X\u001b[27;8H\u001b[1K\u001b[Cmean_score = \u001b[36m\u001b[1msum\u001b(B\u001b[m(dictionary[key][\u001b[38;5;130m\"score\"\u001b[39m] \u001b[33mfor\u001b[39m key \u001b[33min\u001b[39m k\u001b[28;62H\u001b[1K\reys) / \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[29;44H\u001b[1K\u001b[C136,1\u001b[9X\u001b[9C75%\u001b[1X\u001b[?12l\u001b[?25h\u001b[27;1H"]
[46.316023, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m filtered_output\u001b[2;62H\u001b[1K\u001b[3;4H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m requests.RequestException \u001b[33mas\u001b[39m e:\u001b[20X\u001b[4;8H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"Error making request to {url}: {e}\"\u001b[39m)\u001b[3X\u001b[5;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m []\u001b[6;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore\u001b(B\u001b[m(dictionary, batch_size, host, port, keys, logger):\u001b[2X\u001b[8;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ctotal = \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[9;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ccount = \u001b[38;5;130m0\u001b[39m\u001b[10;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m batch \u001b[33min\u001b[39m chunker(keys, batch_size):\u001b[19X\u001b[11;8H\u001b[1K\u001b[Cranked = rank(batch, host, port, logger)\u001b[14X\u001b[12;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i, name \u001b[33min\u001b[39m \u001b[36m\u001b[1menumerate\u001b(B\u001b[m(\u001b[36m\u001b[1mreversed\u001b(B\u001b[m(ranked), start=\u001b[38;5;130m1\u001b[39m):\u001b[2X\u001b[13;12H\u001b[1K\u001b[Cdictionary[name][\u001b[38;5;130m\"score\"\u001b[39m] += i\u001b[20X\u001b[14;12H\u001b[1K\u001b[36m\u001b[1m\u001b[Cprint\u001b(B\u001b[m(f\u001b[38;5;130m\"{dictionary[name]['score']} {name}\"\u001b[39m)\u001b[6X\u001b[15;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Csys.stdout.flush()\u001b[16;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Ccount += batch_size\u001b[17;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m ranked:\u001b[18;12H\u001b[1K\u001b[Clogger.info(f\u001b[38;5;130m\"{count}/{total} - winner: {ranked[0]\u001b[39m\u001b[19;62H\u001b[1K\u001b[38;5;130m\r}\"\u001b[39m)\u001b[20;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore_all\u001b(B\u001b[m(dictionary, batch_size, host, port, log_dir):\u001b[3X\u001b[22;4H\u001b[1K\u001b[Clogger = setup_logger(log_dir)\u001b[28X\u001b[23;4H\u001b[1K\u001b[Ckeys = \u001b[36m\u001b[1mlist\u001b(B\u001b[m(dictionary.keys())\u001b[28X\u001b[24;4H\u001b[1K\u001b[33m\u001b[Cwhile\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys) > batch_size:\u001b[29X\u001b[25;8H\u001b[1K\u001b[Cmean_score = \u001b[36m\u001b[1msum\u001b(B\u001b[m(dictionary[key][\u001b[38;5;130m\"score\"\u001b[39m] \u001b[33mfor\u001b[39m key \u001b[33min\u001b[39m k\u001b[26;62H\u001b[1K\reys) / \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[27;8H\u001b[1K\u001b[Ckeys = [key \u001b[33mfor\u001b[39m key \u001b[33min\u001b[39m keys \u001b[33mif\u001b[39m dictionary[key][\u001b[38;5;130m\"score\"\u001b[39m\u001b[28;62H\u001b[1K\r] >= mean_score]\u001b[29;44H\u001b[1K\u001b[C137,1\u001b[9X\u001b[9C76%\u001b[1X\u001b[?12l\u001b[?25h\u001b[27;1H"]
[46.356741, "o", "\u001b[?25l\u001b[1;4H\u001b[1K\u001b[33m\u001b[Cexcept\u001b[39m requests.RequestException \u001b[33mas\u001b[39m e:\u001b[20X\u001b[2;8H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"Error making request to {url}: {e}\"\u001b[39m)\u001b[3X\u001b[3;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m []\u001b[4;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore\u001b(B\u001b[m(dictionary, batch_size, host, port, keys, logger):\u001b[2X\u001b[6;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ctotal = \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[7;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ccount = \u001b[38;5;130m0\u001b[39m\u001b[8;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m batch \u001b[33min\u001b[39m chunker(keys, batch_size):\u001b[19X\u001b[9;8H\u001b[1K\u001b[Cranked = rank(batch, host, port, logger)\u001b[14X\u001b[10;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i, name \u001b[33min\u001b[39m \u001b[36m\u001b[1menumerate\u001b(B\u001b[m(\u001b[36m\u001b[1mreversed\u001b(B\u001b[m(ranked), start=\u001b[38;5;130m1\u001b[39m):\u001b[2X\u001b[11;12H\u001b[1K\u001b[Cdictionary[name][\u001b[38;5;130m\"score\"\u001b[39m] += i\u001b[20X\u001b[12;12H\u001b[1K\u001b[36m\u001b[1m\u001b[Cprint\u001b(B\u001b[m(f\u001b[38;5;130m\"{dictionary[name]['score']} {name}\"\u001b[39m)\u001b[6X\u001b[13;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Csys.stdout.flush()\u001b[14;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Ccount += batch_size\u001b[15;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m ranked:\u001b[16;12H\u001b[1K\u001b[Clogger.info(f\u001b[38;5;130m\"{count}/{total} - winner: {ranked[0]\u001b[39m\u001b[17;62H\u001b[1K\u001b[38;5;130m\r}\"\u001b[39m)\u001b[18;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore_all\u001b(B\u001b[m(dictionary, batch_size, host, port, log_dir):\u001b[3X\u001b[20;4H\u001b[1K\u001b[Clogger = setup_logger(log_dir)\u001b[28X\u001b[21;4H\u001b[1K\u001b[Ckeys = \u001b[36m\u001b[1mlist\u001b(B\u001b[m(dictionary.keys())\u001b[28X\u001b[22;4H\u001b[1K\u001b[33m\u001b[Cwhile\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys) > batch_size:\u001b[29X\u001b[23;8H\u001b[1K\u001b[Cmean_score = \u001b[36m\u001b[1msum\u001b(B\u001b[m(dictionary[key][\u001b[38;5;130m\"score\"\u001b[39m] \u001b[33mfor\u001b[39m key \u001b[33min\u001b[39m k\u001b[24;62H\u001b[1K\reys) / \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[25;8H\u001b[1K\u001b[Ckeys = [key \u001b[33mfor\u001b[39m key \u001b[33min\u001b[39m keys \u001b[33mif\u001b[39m dictionary[key][\u001b[38;5;130m\"score\"\u001b[39m\u001b[26;62H\u001b[1K\r] >= mean_score]\u001b[27;8H\u001b[1K\u001b[Cscore(dictionary, batch_size, host, port, keys, logger\u001b[28;62H\u001b[1K\r)\u001b[29;44H\u001b[1K\u001b[C138,1\u001b[9X\u001b[9C77%\u001b[1X\u001b[?12l\u001b[?25h\u001b[27;1H"]
[46.376491, "o", "\u001b[?25l\u001b[1;8H\u001b[1K\u001b[Clogger.error(f\u001b[38;5;130m\"Error making request to {url}: {e}\"\u001b[39m)\u001b[3X\u001b[2;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m []\u001b[3;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore\u001b(B\u001b[m(dictionary, batch_size, host, port, keys, logger):\u001b[2X\u001b[5;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ctotal = \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[6;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ccount = \u001b[38;5;130m0\u001b[39m\u001b[7;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m batch \u001b[33min\u001b[39m chunker(keys, batch_size):\u001b[19X\u001b[8;8H\u001b[1K\u001b[Cranked = rank(batch, host, port, logger)\u001b[14X\u001b[9;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i, name \u001b[33min\u001b[39m \u001b[36m\u001b[1menumerate\u001b(B\u001b[m(\u001b[36m\u001b[1mreversed\u001b(B\u001b[m(ranked), start=\u001b[38;5;130m1\u001b[39m):\u001b[2X\u001b[10;12H\u001b[1K\u001b[Cdictionary[name][\u001b[38;5;130m\"score\"\u001b[39m] += i\u001b[20X\u001b[11;12H\u001b[1K\u001b[36m\u001b[1m\u001b[Cprint\u001b(B\u001b[m(f\u001b[38;5;130m\"{dictionary[name]['score']} {name}\"\u001b[39m)\u001b[6X\u001b[12;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Csys.stdout.flush()\u001b[13;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Ccount += batch_size\u001b[14;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m ranked:\u001b[15;12H\u001b[1K\u001b[Clogger.info(f\u001b[38;5;130m\"{count}/{total} - winner: {ranked[0]\u001b[39m\u001b[16;62H\u001b[1K\u001b[38;5;130m\r}\"\u001b[39m)\u001b[17;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore_all\u001b(B\u001b[m(dictionary, batch_size, host, port, log_dir):\u001b[3X\u001b[19;4H\u001b[1K\u001b[Clogger = setup_logger(log_dir)\u001b[28X\u001b[20;4H\u001b[1K\u001b[Ckeys = \u001b[36m\u001b[1mlist\u001b(B\u001b[m(dictionary.keys())\u001b[28X\u001b[21;4H\u001b[1K\u001b[33m\u001b[Cwhile\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys) > batch_size:\u001b[29X\u001b[22;8H\u001b[1K\u001b[Cmean_score = \u001b[36m\u001b[1msum\u001b(B\u001b[m(dictionary[key][\u001b[38;5;130m\"score\"\u001b[39m] \u001b[33mfor\u001b[39m key \u001b[33min\u001b[39m k\u001b[23;62H\u001b[1K\reys) / \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[24;8H\u001b[1K\u001b[Ckeys = [key \u001b[33mfor\u001b[39m key \u001b[33min\u001b[39m keys \u001b[33mif\u001b[39m dictionary[key][\u001b[38;5;130m\"score\"\u001b[39m\u001b[25;62H\u001b[1K\r] >= mean_score]\u001b[26;8H\u001b[1K\u001b[Cscore(dictionary, batch_size, host, port, keys, logger\u001b[27;62H\u001b[1K\r)\u001b[28;62H\u001b[1K\u001b[29;44H\u001b[1K\u001b[C139,0-1\u001b[7X\u001b[7C78%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[46.417652, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m []\u001b[2;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore\u001b(B\u001b[m(dictionary, batch_size, host, port, keys, logger):\u001b[2X\u001b[4;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ctotal = \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[5;62H\u001b[1K\u001b[4G\u001b[1K\u001b[Ccount = \u001b[38;5;130m0\u001b[39m\u001b[6;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m batch \u001b[33min\u001b[39m chunker(keys, batch_size):\u001b[19X\u001b[7;8H\u001b[1K\u001b[Cranked = rank(batch, host, port, logger)\u001b[14X\u001b[8;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i, name \u001b[33min\u001b[39m \u001b[36m\u001b[1menumerate\u001b(B\u001b[m(\u001b[36m\u001b[1mreversed\u001b(B\u001b[m(ranked), start=\u001b[38;5;130m1\u001b[39m):\u001b[2X\u001b[9;12H\u001b[1K\u001b[Cdictionary[name][\u001b[38;5;130m\"score\"\u001b[39m] += i\u001b[20X\u001b[10;12H\u001b[1K\u001b[36m\u001b[1m\u001b[Cprint\u001b(B\u001b[m(f\u001b[38;5;130m\"{dictionary[name]['score']} {name}\"\u001b[39m)\u001b[6X\u001b[11;62H\u001b[1K\u001b[12G\u001b[1K\u001b[Csys.stdout.flush()\u001b[12;62H\u001b[1K\u001b[8G\u001b[1K\u001b[Ccount += batch_size\u001b[13;62H\u001b[1K\u001b[8G\u001b[1K\u001b[33m\u001b[Cif\u001b[39m ranked:\u001b[14;12H\u001b[1K\u001b[Clogger.info(f\u001b[38;5;130m\"{count}/{total} - winner: {ranked[0]\u001b[39m\u001b[15;62H\u001b[1K\u001b[38;5;130m\r}\"\u001b[39m)\u001b[16;62H\u001b[1K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore_all\u001b(B\u001b[m(dictionary, batch_size, host, port, log_dir):\u001b[3X\u001b[18;4H\u001b[1K\u001b[Clogger = setup_logger(log_dir)\u001b[28X\u001b[19;4H\u001b[1K\u001b[Ckeys = \u001b[36m\u001b[1mlist\u001b(B\u001b[m(dictionary.keys())\u001b[28X\u001b[20;4H\u001b[1K\u001b[33m\u001b[Cwhile\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys) > batch_size:\u001b[29X\u001b[21;8H\u001b[1K\u001b[Cmean_score = \u001b[36m\u001b[1msum\u001b(B\u001b[m(dictionary[key][\u001b[38;5;130m\"score\"\u001b[39m] \u001b[33mfor\u001b[39m key \u001b[33min\u001b[39m k\u001b[22;62H\u001b[1K\reys) / \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[23;8H\u001b[1K\u001b[Ckeys = [key \u001b[33mfor\u001b[39m key \u001b[33min\u001b[39m keys \u001b[33mif\u001b[39m dictionary[key][\u001b[38;5;130m\"score\"\u001b[39m\u001b[24;62H\u001b[1K\r] >= mean_score]\u001b[25;8H\u001b[1K\u001b[Cscore(dictionary, batch_size, host, port, keys, logger\u001b[26;62H\u001b[1K\r)\u001b[27;62H\u001b[1K\n\u001b[1K\u001b[33m\rdef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[29;44H\u001b[1K\u001b[C140,1\u001b[9X\u001b[9C78%\u001b[1X\u001b[?12l\u001b[?25h\u001b[28;1H"]
[48.156434, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:vim*                                                                             \"gaz@orin: ~\" 19:03 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;84H"]
[48.15689, "o", "\u001b[?25l\u001b[21Dâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                            \"gaz@orin: ~\" 19:03 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;84H"]
[48.433756, "o", "e"]
[48.621596, "o", "x"]
[48.796997, "o", "i"]
[48.900997, "o", "t"]
[49.119528, "o", "\u001b[2;64H\u001b[?2004l"]
[49.120098, "o", "logout\u001b[3;64H"]
[49.126187, "o", "\u001b[?25l\u001b[1;8H\u001b[1K\u001b[33m\u001b[Creturn\u001b[39m []\u001b[K\r\n\u001b[K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore\u001b(B\u001b[m(dictionary, batch_size, host, port, keys, logger):\u001b[K\u001b[4;4H\u001b[1K\u001b[Ctotal = \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[K\u001b[5;4H\u001b[1K\u001b[Ccount = \u001b[38;5;130m0\u001b[39m\u001b[K\u001b[6;4H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m batch \u001b[33min\u001b[39m chunker(keys, batch_size):\u001b[K\u001b[7;8H\u001b[1K\u001b[Cranked = rank(batch, host, port, logger)\u001b[K\u001b[8;8H\u001b[1K\u001b[33m\u001b[Cfor\u001b[39m i, name \u001b[33min\u001b[39m \u001b[36m\u001b[1menumerate\u001b(B\u001b[m(\u001b[36m\u001b[1mreversed\u001b(B\u001b[m(ranked), start=\u001b[38;5;130m1\u001b[39m):\u001b[K\u001b[9;12H\u001b[1K\u001b[Cdictionary[name][\u001b[38;5;130m\"score\"\u001b[39m] += i\u001b[K\u001b[10;12H\u001b[1K\u001b[36m\u001b[1m\u001b[Cprint\u001b(B\u001b[m(f\u001b[38;5;130m\"{dictionary[name]['score']} {name}\"\u001b[39m)\u001b[K\u001b[11;12H\u001b[1K\u001b[Csys.stdout.flush()\u001b[K\u001b[12;8H\u001b[1K\u001b[Ccount += batch_size\u001b[K\u001b[13;8H\u001b[1K\u001b[33m\u001b[Cif\u001b[39m ranked:\u001b[K\u001b[14;12H\u001b[1K\u001b[Clogger.info(f\u001b[38;5;130m\"{count}/{total} - winner: {ranked[0]\u001b[39m\u001b[K\u001b[38;5;130m\r\n}\"\u001b[39m)\u001b[K\r\n\u001b[K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mscore_all\u001b(B\u001b[m(dictionary, batch_size, host, port, log_dir):\u001b[K\u001b[18;4H\u001b[1K\u001b[Clogger = setup_logger(log_dir)\u001b[K\u001b[19;4H\u001b[1K\u001b[Ckeys = \u001b[36m\u001b[1mlist\u001b(B\u001b[m(dictionary.keys())\u001b[K\u001b[20;4H\u001b[1K\u001b[33m\u001b[Cwhile\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys) > batch_size:\u001b[K\u001b[21;8H\u001b[1K\u001b[Cmean_score = \u001b[36m\u001b[1msum\u001b(B\u001b[m(dictionary[key][\u001b[38;5;130m\"score\"\u001b[39m] \u001b[33mfor\u001b[39m key \u001b[33min\u001b[39m k\u001b[K\r\neys) / \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[K\u001b[23;8H\u001b[1K\u001b[Ckeys = [key \u001b[33mfor\u001b[39m key \u001b[33min\u001b[39m keys \u001b[33mif\u001b[39m dictionary[key][\u001b[38;5;130m\"score\"\u001b[39m\u001b[K\r\n] >= mean_score]\u001b[K\u001b[25;8H\u001b[1K\u001b[Cscore(dictionary, batch_size, host, port, keys, logger\u001b[K\r\n)\u001b[K\r\n\u001b[K\u001b[33m\r\ndef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\u001b[K\u001b[29;44H\u001b[1K\u001b[C140,1\u001b[9X\u001b[9C78%\u001b[K\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:03 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[28;1H\u001b[?2004h"]
[49.132284, "o", "\u001b[1;29r\u001b[29S\u001b[1;9H\u001b[33mreturn\u001b[39m []\u001b[3;1H\u001b[33mdef\u001b[39m \u001b[36m\u001b[1mscore\u001b(B\u001b[m(dictionary, batch_size, host, port, keys, logger):\r\n    total = \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\r\n    count = \u001b[38;5;130m0\r\n\u001b[39m    \u001b[33mfor\u001b[39m batch \u001b[33min\u001b[39m chunker(keys, batch_size):\u001b[7;9Hranked = rank(batch, host, port, logger)\u001b[8;9H\u001b[33mfor\u001b[39m i, name \u001b[33min\u001b[39m \u001b[36m\u001b[1menumerate\u001b(B\u001b[m(\u001b[36m\u001b[1mreversed\u001b(B\u001b[m(ranked), start=\u001b[38;5;130m1\u001b[39m):\u001b[9;13Hdictionary[name][\u001b[38;5;130m\"score\"\u001b[39m] += i\u001b[10;13H\u001b[36m\u001b[1mprint\u001b(B\u001b[m(f\u001b[38;5;130m\"{dictionary[name]['score']} {name}\"\u001b[39m)\u001b[11;13Hsys.stdout.flush()\u001b[12;9Hcount += batch_size\u001b[13;9H\u001b[33mif\u001b[39m ranked:\u001b[14;13Hlogger.info(f\u001b[38;5;130m\"{count}/{total} - winner: {ranked[0]}\"\u001b[39m)\u001b[16;1H\u001b[33mdef\u001b[39m \u001b[36m\u001b[1mscore_all\u001b(B\u001b[m(dictionary, batch_size, host, port, log_dir):\r\n    logger = setup_logger(log_dir)\r\n    keys = \u001b[36m\u001b[1mlist\u001b(B\u001b[m(dictionary.keys())\r\n    \u001b[33mwhile\u001b[39m \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys) > batch_size:\u001b[20;9Hmean_score = \u001b[36m\u001b[1msum\u001b(B\u001b[m(dictionary[key][\u001b[38;5;130m\"score\"\u001b[39m] \u001b[33mfor\u001b[39m key \u001b[33min\u001b[39m keys) / \u001b[36m\u001b[1mlen\u001b(B\u001b[m(keys)\u001b[21;9Hkeys = [key \u001b[33mfor\u001b[39m key \u001b[33min\u001b[39m keys \u001b[33mif\u001b[39m dictionary[key][\u001b[38;5;130m\"score\"\u001b[39m] >= mean_score]\u001b[22;9Hscore(dictionary, batch_size, host, port, keys, logger)\u001b[24;1H\u001b[33mdef\u001b[39m \u001b[36m\u001b[1mmain\u001b(B\u001b[m():\r\n    parser = argparse.ArgumentParser(\u001b[26;9Hdescription=\u001b[38;5;130m\"Process a file containing binary paths and repos.\"\r\n\u001b[39m    )\r\n    parser.add_argument(\u001b[38;5;130m\"file_name\"\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"The name of the file to process\"\u001b[39m)\u001b[29;107H140,1\u001b[9C81%\u001b[1;30r\u001b[24;1H"]
[49.193145, "o", "\u001b[?25l\u001b[30m\u001b[44m\u001b[30d[0] 0:sudo- 1:vim*                                                                   \"gaz@orin: ~/src/uh-ha\" 19:03 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[24;1H"]
[50.770637, "o", "\u001b[29;109H1\u001b[25;1H"]
[51.277737, "o", "\u001b[29;109H2\u001b[26;1H"]
[51.301797, "o", "\u001b[29;109H3\u001b[27;1H"]
[51.322642, "o", "\u001b[29;109H4\u001b[28;1H"]
[51.36235, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4Cparser.add_argument(\u001b[29;107H145,1\u001b[9X\u001b[9C81%\u001b[K\u001b[1;30r\u001b[28;1H"]
[51.382412, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[8C\u001b[38;5;130m\"log_dir\"\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"The directory where logs will be stored.\"\u001b[29;107H\u001b[39m146,1\u001b[9X\u001b[9C82%\u001b[K\u001b[1;30r\u001b[28;1H"]
[51.419635, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4C)\u001b[29;107H147,1\u001b[9X\u001b[9C83%\u001b[K\u001b[1;30r\u001b[28;1H"]
[51.438426, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4Cparser.add_argument(\u001b[29;107H148,1\u001b[9X\u001b[9C83%\u001b[K\u001b[1;30r\u001b[28;1H"]
[51.477172, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[8C\u001b[38;5;130m\"--batch-size\"\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mint\u001b(B\u001b[m, default=\u001b[38;5;130m10\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Batch size for processing\"\u001b[29;107H\u001b[39m149,1\u001b[9X\u001b[9C84%\u001b[K\u001b[1;30r\u001b[28;1H"]
[51.514957, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4C)\u001b[29;107H150,1\u001b[9X\u001b[9C85%\u001b[K\u001b[1;30r\u001b[28;1H"]
[51.534095, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4Cparser.add_argument(\u001b[38;5;130m\"--seed\"\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mint\u001b(B\u001b[m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Random seed for reproducibility\"\u001b[39m)\u001b[29;107H151,1\u001b[9X\u001b[9C86%\u001b[K\u001b[1;30r\u001b[28;1H"]
[51.572156, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4Cparser.add_argument(\u001b[29;107H152,1\u001b[9X\u001b[9C86%\u001b[K\u001b[1;30r\u001b[28;1H"]
[51.591466, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[8C\u001b[38;5;130m\"--host\"\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mstr\u001b(B\u001b[m, default=\u001b[38;5;130m\"localhost\"\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Host for ranking service\"\u001b[29;107H\u001b[39m153,1\u001b[9X\u001b[9C87%\u001b[K\u001b[1;30r\u001b[28;1H"]
[51.629959, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4C)\u001b[29;107H154,1\u001b[9X\u001b[9C88%\u001b[K\u001b[1;30r\u001b[28;1H"]
[51.668466, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4Cparser.add_argument(\u001b[29;107H155,1\u001b[9X\u001b[9C88%\u001b[K\u001b[1;30r\u001b[28;1H"]
[51.688434, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[8C\u001b[38;5;130m\"--port\"\u001b[39m, \u001b[36m\u001b[1mtype\u001b(B\u001b[m=\u001b[36m\u001b[1mint\u001b(B\u001b[m, default=\u001b[38;5;130m11434\u001b[39m, \u001b[36m\u001b[1mhelp\u001b(B\u001b[m=\u001b[38;5;130m\"Port for ranking service\"\u001b[29;107H\u001b[39m156,1\u001b[9X\u001b[9C89%\u001b[K\u001b[1;30r\u001b[28;1H"]
[51.725962, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4C)\u001b[29;107H157,1\u001b[9X\u001b[9C90%\u001b[K\u001b[1;30r\u001b[28;1H"]
[51.745869, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4Cargs = parser.parse_args()\u001b[29;107H158,1\u001b[9X\u001b[9C90%\u001b[K\u001b[1;30r\u001b[28;1H"]
[51.78441, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[29;107H159,0-1\u001b[7X\u001b[7C91%\u001b[K\u001b[1;30r\u001b[28;1H"]
[51.803585, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4C\u001b[33mif\u001b[39m args.seed \u001b[33mis\u001b[39m \u001b[33mnot\u001b[39m \u001b[36m\u001b[1mNone\u001b(B\u001b[m:\u001b[29;107H160,1\u001b[9X\u001b[9C92%\u001b[K\u001b[1;30r\u001b[28;1H"]
[51.841731, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[8Crandom.seed(args.seed)\u001b[29;107H161,1\u001b[9X\u001b[9C93%\u001b[K\u001b[1;30r\u001b[28;1H"]
[51.880614, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[29;107H162,0-1\u001b[7X\u001b[7C93%\u001b[K\u001b[1;30r\u001b[28;1H"]
[51.900064, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4Cbinary_data = load_file(args.file_name)\u001b[29;107H163,1\u001b[9X\u001b[9C94%\u001b[K\u001b[1;30r\u001b[28;1H"]
[51.938289, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4Clogger = setup_logger(args.log_dir)\u001b[29;107H164,1\u001b[9X\u001b[9C95%\u001b[K\u001b[1;30r\u001b[28;1H"]
[51.957191, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4Clogger.info(f\u001b[38;5;130m\"Batch size: {args.batch_size}\"\u001b[39m)\u001b[29;107H165,1\u001b[9X\u001b[9C95%\u001b[K\u001b[1;30r\u001b[28;1H"]
[51.996728, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4Clogger.info(f\u001b[38;5;130m\"Total commands: {len(binary_data)}\"\u001b[39m)\u001b[29;107H166,1\u001b[9X\u001b[9C96%\u001b[K\u001b[1;30r\u001b[28;1H"]
[52.01612, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[29;107H167,0-1\u001b[7X\u001b[7C97%\u001b[K\u001b[1;30r\u001b[28;1H"]
[52.054148, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4Cscore_all(binary_data, args.batch_size, args.host, args.port, args.log_dir)\u001b[29;107H168,1\u001b[9X\u001b[9C97%\u001b[K\u001b[1;30r\u001b[28;1H"]
[52.09264, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[29;107H169,0-1\u001b[7X\u001b[7C98%\u001b[K\u001b[1;30r\u001b[28;1H"]
[52.112129, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[33mif\u001b[39m __name__ == \u001b[38;5;130m\"__main__\"\u001b[39m:\u001b[29;107H170,1\u001b[9X\u001b[9C99%\u001b[K\u001b[1;30r\u001b[28;1H"]
[52.151438, "o", "\u001b[1;28r\u001b[28;1H\n\u001b[K\u001b[4Cmain()\u001b[29;107H171,1\u001b[9X\u001b[9CBot\u001b[K\u001b[1;30r\u001b[28;1H"]
[52.170682, "o", "\u0007"]
[53.146025, "o", "\r\n:\u001b[105C\u001b[K\u001b[2G"]
[53.508467, "o", "q"]
[53.722425, "o", "!"]
[54.495596, "o", "\r"]
[54.49913, "o", "\u001b[?25l\u001b[?12l\u001b[?25h\u001b[?25l\u001b[?2004l\u001b[K"]
[54.499617, "o", "\u001b[H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ ls -l\u001b[K\r\ntotal 36\u001b[K\r\ndrwxrwxr-x 6 gaz gaz  4096 Jan  3 18:47 \u001b[34m\u001b[1mcasts\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 4 gaz gaz 12288 Jan  3 19:01 \u001b[34m\u001b[1mdata\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 4 gaz gaz  4096 Jan  3 18:46 \u001b[34m\u001b[1mdata.bak\u001b(B\u001b[m\u001b[K\r\ndrwxrwxr-x 2 gaz gaz  4096 Dec 31 18:28 \u001b[34m\u001b[1mlog\u001b(B\u001b[m\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  3176 Jan  3 19:02 Makefile\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  2550 Jan  1 07:28 README.md\u001b[K\r\ndrwxrwxr-x 2 gaz gaz  4096 Jan  3 19:02 \u001b[34m\u001b[1mscripts\u001b(B\u001b[m\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim Makefile \u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim scripts/02.popularity_contest.py \u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[12d\u001b[?12l\u001b[?25h"]
[54.501519, "o", "\u001b[?2004h"]
[54.501665, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ "]
[54.501947, "o", "\u001b[?25l\u001b[?12l\u001b[?25h"]
[54.652833, "o", "\u001b[?25l\u001b[30m\u001b[44m\u001b[30;1H[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:03 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[12;38H"]
[55.177783, "o", "\u001b[?25l\u001b[30m\u001b[44m\u001b[30;1H[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:04 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[12;38H"]
[57.375653, "o", "m"]
[57.440947, "o", "a"]
[57.62614, "o", "k"]
[57.650089, "o", "e"]
[58.743869, "o", " "]
[59.135697, "o", "d"]
[59.140138, "o", "a"]
[59.304889, "o", "t"]
[59.349206, "o", "a"]
[59.690666, "o", "/"]
[60.085927, "o", "0\u0007"]
[60.617472, "o", "2"]
[60.851789, "o", "a.popularity-contest "]
[63.39869, "o", "\r\n\u001b[?2004l"]
[63.40334, "o", "02 - Running popularity contest\r\n"]
[63.711797, "o", "2025-01-03 19:04:08,569 - INFO - Batch size: 10\r\n"]
[63.712014, "o", "2025-01-03 19:04:08,569 - INFO - Total commands: 43907\r\n"]
[63.920748, "o", "\u001b[?25l\u001b[30m\u001b[44m\u001b[30d[0] 0:sudo- 1:make*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:04 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[16;1H"]
[72.677895, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[Hdrwxrwxr-x 6 gaz gaz  4096 Jan  3 18:47 \u001b[34m\u001b[1mcasts\u001b(B\u001b[m\u001b[17X\r\ndrwxrwxr-x 4 gaz gaz 12288 Jan  3 19:01 \u001b[34m\u001b[1mdata\u001b(B\u001b[m\u001b[18X\r\ndrwxrwxr-x 4 gaz gaz  4096 Jan  3 18:46 \u001b[34m\u001b[1mdata.bak\u001b(B\u001b[m\u001b[14X\r\ndrwxrwxr-x 2 gaz gaz  4096 Dec 31 18:28 \u001b[34m\u001b[1mlog\u001b(B\u001b[m\u001b[19X\r\n-rw-rw-r-- 1 gaz gaz  3176 Jan  3 19:02 Makefile\u001b[14X\r\n-rw-rw-r-- 1 gaz gaz  2550 Jan  1 07:28 README.md\u001b[13X\r\ndrwxrwxr-x 2 gaz gaz  4096 Jan  3 19:02 \u001b[34m\u001b[1mscripts\u001b(B\u001b[m\u001b[15X\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim Makefile \u001b[12X\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim scripts/02.popularity\u001b[10;62H\u001b[1K\r_contest.py \r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ make data/02a.popularity-\u001b[12;62H\u001b[1K\rcontest \r\n02 - Running popularity contest\u001b[31X\r\n2025-01-03 19:04:08,569 - INFO - Batch size: 10\u001b[15X\r\n2025-01-03 19:04:08,569 - INFO - Total commands: 43907\u001b[8X\u001b[16;62H\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\n\u001b[1K\u001b[1;64H\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:make*                                                                                   \"orin\" 19:04 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;64H"]
[72.678204, "o", "\u001b[?25l\bâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                                   \"orin\" 19:04 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;64H"]
[72.759852, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ \u001b[?2004h"]
[72.760175, "o", "\u001b[?25l\u001b[21Dâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                            \"gaz@orin: ~\" 19:04 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[1;84H"]
[74.913811, "o", "c"]
[74.98129, "o", "d"]
[75.06288, "o", " "]
[75.6359, "o", "s"]
[75.706343, "o", "r"]
[75.947285, "o", "c"]
[76.09581, "o", "/"]
[76.396906, "o", "u"]
[76.700538, "o", "g"]
[77.276066, "o", "\b\u001b[K"]
[77.516371, "o", "h"]
[77.64469, "o", "-halp-data/"]
[78.090644, "o", "\u001b[16;1H2025-01-03 19:04:22,947 - INFO - 10/43907 - winner: avr-gcc\u001b[1;104H\u001b[17;1H2025-01-03 19:04:22,947 - INFO - 10/43907 - winner: avr-gcc\u001b[1;104H"]
[78.35169, "o", "\u001b[2;64H\u001b[?2004l"]
[78.351867, "o", "\u001b[?2004h(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ "]
[78.352606, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:04 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[2;101H"]
[86.111968, "o", "\u001b[18;1H2025-01-03 19:04:30,969 - INFO - 20/43907 - winner: irssi\u001b[2;101H\u001b[19;1H2025-01-03 19:04:30,969 - INFO - 20/43907 - winner: irssi\u001b[2;101H"]
[92.891933, "o", "\u001b[20;1H2025-01-03 19:04:37,749 - INFO - 30/43907 - winner: rhost\u001b[2;101H\u001b[21;1H2025-01-03 19:04:37,749 - INFO - 30/43907 - winner: rhost\u001b[2;101H"]
[99.384348, "o", "\u001b[22;1H2025-01-03 19:04:44,241 - INFO - 40/43907 - winner: dp\u001b[2;101H\u001b[23;1H2025-01-03 19:04:44,241 - INFO - 40/43907 - winner: dp\u001b[2;101H"]
[100.866992, "o", "t"]
[100.966312, "o", "a"]
[101.108031, "o", "u"]
[101.431286, "o", "l"]
[101.784686, "o", "\b\u001b[K"]
[102.079079, "o", "\b\u001b[K"]
[102.923671, "o", "\b\u001b[K"]
[103.059597, "o", "\b\u001b[K"]
[103.551445, "o", "\u001b[?25l\u001b[H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~\u001b(B\u001b[m$ cd src/uh-halp-data/\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*Z                                                                 \"gaz@orin: ~/src/uh-ha\" 19:04 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[2;38H"]
[103.551928, "o", "\r(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K"]
[103.552223, "o", "\u001b[?25l\u001b[?12l\u001b[?25h"]
[104.786392, "o", "t"]
[104.873128, "o", "a"]
[104.931536, "o", "i"]
[105.159801, "o", "l"]
[105.244867, "o", " "]
[105.456868, "o", "-"]
[107.312971, "o", "f"]
[107.448625, "o", " "]
[110.206765, "o", "d"]
[110.269694, "o", "a"]
[110.400871, "o", "t"]
[110.450472, "o", "a"]
[110.883351, "o", "\u0007"]
[111.549394, "o", "/"]
[111.863499, "o", "0"]
[111.975562, "o", "2"]
[112.184542, "o", "a.popularity-contest.2025-01-03_1\u0007"]
[113.508942, "o", "\u0007"]
[113.677557, "o", "\r\n02a.popularity-contest.2025-01-03_185627.tmp  02a.popularity-contest.2025-01-03_190154.tmp\r\n"]
[113.677873, "o", "02a.popularity-contest.2025-01-03_185841.tmp  02a.popularity-contest.2025-01-03_190408.tmp\r\n02a.popularity-contest.2025-01-03_190010.tmp  \r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ tail -f data/02a.popularity-contest.2025-01-03_1"]
[113.678037, "o", "\u001b[?25l\u001b[?12l\u001b[?25h"]
[115.181558, "o", "\u001b[?25l\u001b[30m\u001b[44m\u001b[30;1H[0] 0:sudo- 1:bash*Z                                                                 \"gaz@orin: ~/src/uh-ha\" 19:05 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[6;86H"]
[121.24858, "o", "^C\r\n\u001b[?2004l"]
[121.248873, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[?2004h"]
[121.249161, "o", "\u001b[?25l\u001b[?12l\u001b[?25h"]
[121.74889, "o", "l"]
[121.856238, "o", "s"]
[122.056264, "o", " "]
[122.390941, "o", "d"]
[122.43462, "o", "a"]
[122.604528, "o", "t"]
[122.67373, "o", "a"]
[122.802589, "o", " "]
[123.202918, "o", "/"]
[124.142216, "o", "\b\u001b[K"]
[124.771092, "o", "\b\u001b[K"]
[124.9902, "o", "/"]
[125.427605, "o", "0"]
[125.564835, "o", "2"]
[125.906643, "o", "a"]
[126.448747, "o", "*"]
[127.307503, "o", " "]
[127.411677, "o", "-"]
[127.607692, "o", "l"]
[128.043136, "o", "t"]
[128.110138, "o", "r"]
[128.461936, "o", "\r\n\u001b[?2004l"]
[128.465174, "o", "-rw-rw-r-- 1 gaz gaz   0 Jan  3 18:56 data/02a.popularity-contest.2025-01-03_185627.tmp\r\n-rw-rw-r-- 1 gaz gaz   0 Jan  3 18:58 data/02a.popularity-contest.2025-01-03_185841.tmp\r\n-rw-rw-r-- 1 gaz gaz   0 Jan  3 19:00 data/02a.popularity-contest.2025-01-03_190010.tmp\r\n-rw-rw-r-- 1 gaz gaz   0 Jan  3 19:01 data/02a.popularity-contest.2025-01-03_190154.tmp\r\n-rw-rw-r-- 1 gaz gaz 779 Jan  3 19:05 data/02a.popularity-contest.2025-01-03_190408.tmp\r\n"]
[128.465774, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[?2004h"]
[128.466164, "o", "\u001b[?25l\u001b[?12l\u001b[?25h"]
[135.342673, "o", "r"]
[135.429973, "o", "m"]
[135.515042, "o", " "]
[137.801133, "o", "\b\u001b[K"]
[138.305196, "o", "\b\u001b[K"]
[138.325798, "o", "\b\u001b[K"]
[138.36498, "o", "\u0007"]
[138.385297, "o", "\u0007"]
[142.255712, "o", "t"]
[142.355522, "o", "a"]
[142.396472, "o", "i"]
[142.606683, "o", "l"]
[142.9475, "o", " "]
[143.204663, "o", "-"]
[143.310581, "o", "f"]
[143.389758, "o", " "]
[144.175156, "o", "\u001b[7mdata/02a.popularity-contest.2025-01-03_190408.tmp\u001b(B\u001b[m"]
[144.88859, "o", "\u001b[46Gdata/02a.popularity-contest.2025-01-03_190408.tmp\r\n\u001b[?2004l"]
[144.890952, "o", "10 pts\r\n1 s390x-linux-gnu-gccgo\r\n2 phenix.pdb.hierarchy\r\n3 autosp\r\n4 aodh-api\r\n5 DrawGram\r\n6 davix-tester\r\n7 onionprobe\r\n8 botch-graphml2dot\r\n9 pamtofits\r\n"]
[145.243358, "o", "\u001b[1;29r\u001b[1;1H\u001b[4S\u001b[20d1 h2paspp-3.2.2\r\n2 kgb\r\n3 js115\r\n4 med-dental\r\n5 mpinsert\r\n6 xen-update-image\r\n7 mips-linux-gnu-gm2-9\u001b[K\r\n8 cdffixtime\u001b[K\r\n9 printcal\u001b[K\r\n\u001b[K\u001b[1;30r\u001b[29;1H"]
[145.438104, "o", "\u001b[?25l\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:tail*Z                                                                 \"gaz@orin: ~/src/uh-ha\" 19:05 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[29;1H"]
[148.65354, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim Makefile \u001b[12X\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ vim scripts/02.popularity\u001b[3;62H\u001b[1K\r_contest.py \r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ make data/02a.popularity-\u001b[5;62H\u001b[1K\rcontest \r\n02 - Running popularity contest\u001b[31X\r\n2025-01-03 19:04:08,569 - INFO - Batch size: 10\u001b[15X\r\n2025-01-03 19:04:08,569 - INFO - Total commands: 43907\u001b[8X\r\n2025-01-03 19:04:22,947 - INFO - 10/43907 - winner: avr-gcc\u001b[3X\r\n2025-01-03 19:04:22,947 - INFO - 10/43907 - winner: avr-gcc\u001b[3X\r\n2025-01-03 19:04:30,969 - INFO - 20/43907 - winner: irssi\u001b[5X\r\n2025-01-03 19:04:30,969 - INFO - 20/43907 - winner: irssi\u001b[5X\r\n2025-01-03 19:04:37,749 - INFO - 30/43907 - winner: rhost\u001b[5X\r\n2025-01-03 19:04:37,749 - INFO - 30/43907 - winner: rhost\u001b[5X\r\n2025-01-03 19:04:44,241 - INFO - 40/43907 - winner: dp\u001b[8X\r\n2025-01-03 19:04:44,241 - INFO - 40/43907 - winner: dp\u001b[8X\r\n2025-01-03 19:04:51,596 - INFO - 50/43907 - winner: wifi\u001b[6X\r\n2025-01-03 19:04:51,596 - INFO - 50/43907 - winner: wifi\u001b[6X\r\n2025-01-03 19:04:59,721 - INFO - 60/43907 - winner: ndptool\u001b[3X\r\n2025-01-03 19:04:59,721 - INFO - 60/43907 - winner: ndptool\u001b[3X\r\n2025-01-03 19:05:08,591 - INFO - 70/43907 - winner: ksu.mit\u001b[3X\r\n2025-01-03 19:05:08,591 - INFO - 70/43907 - winner: ksu.mit\u001b[3X\r\n2025-01-03 19:05:15,281 - INFO - 80/43907 - winner: pts\u001b[7X\r\n2025-01-03 19:05:15,281 - INFO - 80/43907 - winner: pts\u001b[7X\r\n2025-01-03 19:05:22,332 - INFO - 90/43907 - winner: pamtofits\u001b[1X\r\n2025-01-03 19:05:22,332 - INFO - 90/43907 - winner: pamtofits\u001b[1X\r\n2025-01-03 19:05:30,100 - INFO - 100/43907 - winner: printcal\u001b[1X\r\n2025-01-03 19:05:30,100 - INFO - 100/43907 - winner: printcal\u001b[1X\n\u001b[1K\u001b[1;64Htest.2025-01-03_185841.tmp\u001b[K\u001b[2;64H-rw-rw-r-- 1 gaz gaz   0 Jan  3 19:00 data/02a.popularity-con\u001b[3;64Htest.2025-01-03_190010.tmp\u001b[K\u001b[4;64H-rw-rw-r-- 1 gaz gaz   0 Jan  3 19:01 data/02a.popularity-con\u001b[5;64Htest.2025-01-03_190154.tmp\u001b[K\u001b[6;64H-rw-rw-r-- 1 gaz gaz 779 Jan  3 19:05 data/02a.popularity-con\u001b[7;64Htest.2025-01-03_190408.tmp\u001b[K\u001b[8;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ tail -f data/02a.popular\u001b[9;64Hity-contest.2025-01-03_190408.tmp\u001b[K\u001b[10;64H10 pts\u001b[K\u001b[11;64H1 s390x-linux-gnu-gccgo\u001b[K\u001b[12;64H2 phenix.pdb.hierarchy\u001b[K\u001b[13;64H3 autosp\u001b[K\u001b[14;64H4 aodh-api\u001b[K\u001b[15;64H5 DrawGram\u001b[K\u001b[16;64H6 davix-tester\u001b[K\u001b[17;64H7 onionprobe\u001b[K\u001b[18;64H8 botch-graphml2dot\u001b[K\u001b[19;64H9 pamtofits\u001b[K\u001b[20;64H1 h2paspp-3.2.2\u001b[K\u001b[21;64H2 kgb\u001b[K\u001b[22;64H3 js115\u001b[K\u001b[23;64H4 med-dental\u001b[K\u001b[24;64H5 mpinsert\u001b[K\u001b[25;64H6 xen-update-image\u001b[K\u001b[26;64H7 mips-linux-gnu-gm2-9\u001b[K\u001b[27;64H8 cdffixtime\u001b[K\u001b[28;64H9 printcal\u001b[K\u001b[29;64H\u001b[K\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:tail*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:05 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[29;64H"]
[149.912278, "o", "\u001b[?25l\u001b[1d-rw-rw-r-- 1 gaz gaz   0 Jan  3 19:00 data/02a.popularity-con\u001b[2;64Htest.2025-01-03_190010.tmp\u001b[K\u001b[3;64H-rw-rw-r-- 1 gaz gaz   0 Jan  3 19:01 data/02a.popularity-con\u001b[4;64Htest.2025-01-03_190154.tmp\u001b[K\u001b[5;64H-rw-rw-r-- 1 gaz gaz 779 Jan  3 19:05 data/02a.popularity-con\u001b[6;64Htest.2025-01-03_190408.tmp\u001b[K\u001b[7;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ tail -f data/02a.popular\u001b[8;64Hity-contest.2025-01-03_190408.tmp\u001b[K\u001b[9;64H10 pts\u001b[K\u001b[10;64H1 s390x-linux-gnu-gccgo\u001b[K\u001b[11;64H2 phenix.pdb.hierarchy\u001b[K\u001b[12;64H3 autosp\u001b[K\u001b[13;64H4 aodh-api\u001b[K\u001b[14;64H5 DrawGram\u001b[K\u001b[15;64H6 davix-tester\u001b[K\u001b[16;64H7 onionprobe\u001b[K\u001b[17;64H8 botch-graphml2dot\u001b[K\u001b[18;64H9 pamtofits\u001b[K\u001b[19;64H1 h2paspp-3.2.2\u001b[K\u001b[20;64H2 kgb\u001b[K\u001b[21;64H3 js115\u001b[K\u001b[22;64H4 med-dental\u001b[K\u001b[23;64H5 mpinsert\u001b[K\u001b[24;64H6 xen-update-image\u001b[K\u001b[25;64H7 mips-linux-gnu-gm2-9\u001b[K\u001b[26;64H8 cdffixtime\u001b[K\u001b[27;64H9 printcal\u001b[K\u001b[28;64H\u001b[K\n\u001b[K\u001b[?12l\u001b[?25h"]
[150.08565, "o", "\u001b[?25l\u001b[1dtest.2025-01-03_190010.tmp\u001b[K\u001b[2;64H-rw-rw-r-- 1 gaz gaz   0 Jan  3 19:01 data/02a.popularity-con\u001b[3;64Htest.2025-01-03_190154.tmp\u001b[K\u001b[4;64H-rw-rw-r-- 1 gaz gaz 779 Jan  3 19:05 data/02a.popularity-con\u001b[5;64Htest.2025-01-03_190408.tmp\u001b[K\u001b[6;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ tail -f data/02a.popular\u001b[7;64Hity-contest.2025-01-03_190408.tmp\u001b[K\u001b[8;64H10 pts\u001b[K\u001b[9;64H1 s390x-linux-gnu-gccgo\u001b[K\u001b[10;64H2 phenix.pdb.hierarchy\u001b[K\u001b[11;64H3 autosp\u001b[K\u001b[12;64H4 aodh-api\u001b[K\u001b[13;64H5 DrawGram\u001b[K\u001b[14;64H6 davix-tester\u001b[K\u001b[15;64H7 onionprobe\u001b[K\u001b[16;64H8 botch-graphml2dot\u001b[K\u001b[17;64H9 pamtofits\u001b[K\u001b[18;64H1 h2paspp-3.2.2\u001b[K\u001b[19;64H2 kgb\u001b[K\u001b[20;64H3 js115\u001b[K\u001b[21;64H4 med-dental\u001b[K\u001b[22;64H5 mpinsert\u001b[K\u001b[23;64H6 xen-update-image\u001b[K\u001b[24;64H7 mips-linux-gnu-gm2-9\u001b[K\u001b[25;64H8 cdffixtime\u001b[K\u001b[26;64H9 printcal\u001b[K\u001b[27;64H\u001b[K\n\u001b[K\n\u001b[K\u001b[?12l\u001b[?25h"]
[150.252232, "o", "\u001b[?25l\u001b[1d-rw-rw-r-- 1 gaz gaz   0 Jan  3 19:01 data/02a.popularity-con\u001b[2;64Htest.2025-01-03_190154.tmp\u001b[K\u001b[3;64H-rw-rw-r-- 1 gaz gaz 779 Jan  3 19:05 data/02a.popularity-con\u001b[4;64Htest.2025-01-03_190408.tmp\u001b[K\u001b[5;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ tail -f data/02a.popular\u001b[6;64Hity-contest.2025-01-03_190408.tmp\u001b[K\u001b[7;64H10 pts\u001b[K\u001b[8;64H1 s390x-linux-gnu-gccgo\u001b[K\u001b[9;64H2 phenix.pdb.hierarchy\u001b[K\u001b[10;64H3 autosp\u001b[K\u001b[11;64H4 aodh-api\u001b[K\u001b[12;64H5 DrawGram\u001b[K\u001b[13;64H6 davix-tester\u001b[K\u001b[14;64H7 onionprobe\u001b[K\u001b[15;64H8 botch-graphml2dot\u001b[K\u001b[16;64H9 pamtofits\u001b[K\u001b[17;64H1 h2paspp-3.2.2\u001b[K\u001b[18;64H2 kgb\u001b[K\u001b[19;64H3 js115\u001b[K\u001b[20;64H4 med-dental\u001b[K\u001b[21;64H5 mpinsert\u001b[K\u001b[22;64H6 xen-update-image\u001b[K\u001b[23;64H7 mips-linux-gnu-gm2-9\u001b[K\u001b[24;64H8 cdffixtime\u001b[K\u001b[25;64H9 printcal\u001b[K\u001b[26;64H\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\u001b[?12l\u001b[?25h"]
[150.359069, "o", "\u001b[?25l\u001b[1dtest.2025-01-03_190154.tmp\u001b[K\u001b[2;64H-rw-rw-r-- 1 gaz gaz 779 Jan  3 19:05 data/02a.popularity-con\u001b[3;64Htest.2025-01-03_190408.tmp\u001b[K\u001b[4;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ tail -f data/02a.popular\u001b[5;64Hity-contest.2025-01-03_190408.tmp\u001b[K\u001b[6;64H10 pts\u001b[K\u001b[7;64H1 s390x-linux-gnu-gccgo\u001b[K\u001b[8;64H2 phenix.pdb.hierarchy\u001b[K\u001b[9;64H3 autosp\u001b[K\u001b[10;64H4 aodh-api\u001b[K\u001b[11;64H5 DrawGram\u001b[K\u001b[12;64H6 davix-tester\u001b[K\u001b[13;64H7 onionprobe\u001b[K\u001b[14;64H8 botch-graphml2dot\u001b[K\u001b[15;64H9 pamtofits\u001b[K\u001b[16;64H1 h2paspp-3.2.2\u001b[K\u001b[17;64H2 kgb\u001b[K\u001b[18;64H3 js115\u001b[K\u001b[19;64H4 med-dental\u001b[K\u001b[20;64H5 mpinsert\u001b[K\u001b[21;64H6 xen-update-image\u001b[K\u001b[22;64H7 mips-linux-gnu-gm2-9\u001b[K\u001b[23;64H8 cdffixtime\u001b[K\u001b[24;64H9 printcal\u001b[K\u001b[25;64H\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\u001b[?12l\u001b[?25h"]
[150.68501, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[H_contest.py \r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ make data/02a.popularity-\u001b[3;62H\u001b[1K\rcontest \r\n02 - Running popularity contest\u001b[31X\r\n2025-01-03 19:04:08,569 - INFO - Batch size: 10\u001b[15X\r\n2025-01-03 19:04:08,569 - INFO - Total commands: 43907\u001b[8X\r\n2025-01-03 19:04:22,947 - INFO - 10/43907 - winner: avr-gcc\u001b[3X\r\n2025-01-03 19:04:22,947 - INFO - 10/43907 - winner: avr-gcc\u001b[3X\r\n2025-01-03 19:04:30,969 - INFO - 20/43907 - winner: irssi\u001b[5X\r\n2025-01-03 19:04:30,969 - INFO - 20/43907 - winner: irssi\u001b[5X\r\n2025-01-03 19:04:37,749 - INFO - 30/43907 - winner: rhost\u001b[5X\r\n2025-01-03 19:04:37,749 - INFO - 30/43907 - winner: rhost\u001b[5X\r\n2025-01-03 19:04:44,241 - INFO - 40/43907 - winner: dp\u001b[8X\r\n2025-01-03 19:04:44,241 - INFO - 40/43907 - winner: dp\u001b[8X\r\n2025-01-03 19:04:51,596 - INFO - 50/43907 - winner: wifi\u001b[6X\r\n2025-01-03 19:04:51,596 - INFO - 50/43907 - winner: wifi\u001b[6X\r\n2025-01-03 19:04:59,721 - INFO - 60/43907 - winner: ndptool\u001b[3X\r\n2025-01-03 19:04:59,721 - INFO - 60/43907 - winner: ndptool\u001b[3X\r\n2025-01-03 19:05:08,591 - INFO - 70/43907 - winner: ksu.mit\u001b[3X\r\n2025-01-03 19:05:08,591 - INFO - 70/43907 - winner: ksu.mit\u001b[3X\r\n2025-01-03 19:05:15,281 - INFO - 80/43907 - winner: pts\u001b[7X\r\n2025-01-03 19:05:15,281 - INFO - 80/43907 - winner: pts\u001b[7X\r\n2025-01-03 19:05:22,332 - INFO - 90/43907 - winner: pamtofits\u001b[1X\r\n2025-01-03 19:05:22,332 - INFO - 90/43907 - winner: pamtofits\u001b[1X\r\n2025-01-03 19:05:30,100 - INFO - 100/43907 - winner: printcal\u001b[1X\r\n2025-01-03 19:05:30,100 - INFO - 100/43907 - winner: printcal\u001b[1X\r\n2025-01-03 19:05:35,541 - INFO - 110/43907 - winner: condor_tr\u001b[28;62H\u001b[1K\ransfer_data\u001b[29;62H\u001b[1K\u001b[1;64H4 aodh-api\u001b[K\u001b[2;64H5 DrawGram\u001b[K\u001b[3;64H6 davix-tester\u001b[K\u001b[4;64H7 onionprobe\u001b[K\u001b[5;64H8 botch-graphml2dot\u001b[K\u001b[6;64H9 pamtofits\u001b[K\u001b[7;64H1 h2paspp-3.2.2\u001b[K\u001b[8;64H2 kgb\u001b[K\u001b[9;64H3 js115\u001b[K\u001b[10;64H4 med-dental\u001b[K\u001b[11;64H5 mpinsert\u001b[K\u001b[12;64H6 xen-update-image\u001b[K\u001b[13;64H7 mips-linux-gnu-gm2-9\u001b[K\u001b[14;64H8 cdffixtime\u001b[K\u001b[15;64H9 printcal\u001b[K\u001b[16;64H\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n1 sxmo_dtmf.sh\u001b[K\u001b[21;64H2 z80-unknown-coff-ld\u001b[K\u001b[22;64H3 fetch-url\u001b[K\u001b[23;64H4 gvmap.sh\u001b[K\u001b[24;64H5 mosquitto_pub\u001b[K\u001b[25;64H6 osdshconfig\u001b[K\u001b[26;64H7 lssubsys\u001b[K\u001b[27;64H8 voms-proxy-init2\u001b[K\u001b[28;64H9 condor_transfer_data\u001b[K\u001b[29;64H\u001b[K\u001b[?12l\u001b[?25h"]
[150.685121, "o", "\u001b[?25l\u001b[1;62H\u001b[1K\u001b[Hcontest \r\n02 - Running popularity contest\u001b[31X\r\n2025-01-03 19:04:08,569 - INFO - Batch size: 10\u001b[15X\r\n2025-01-03 19:04:08,569 - INFO - Total commands: 43907\u001b[8X\r\n2025-01-03 19:04:22,947 - INFO - 10/43907 - winner: avr-gcc\u001b[3X\r\n2025-01-03 19:04:22,947 - INFO - 10/43907 - winner: avr-gcc\u001b[3X\r\n2025-01-03 19:04:30,969 - INFO - 20/43907 - winner: irssi\u001b[5X\r\n2025-01-03 19:04:30,969 - INFO - 20/43907 - winner: irssi\u001b[5X\r\n2025-01-03 19:04:37,749 - INFO - 30/43907 - winner: rhost\u001b[5X\r\n2025-01-03 19:04:37,749 - INFO - 30/43907 - winner: rhost\u001b[5X\r\n2025-01-03 19:04:44,241 - INFO - 40/43907 - winner: dp\u001b[8X\r\n2025-01-03 19:04:44,241 - INFO - 40/43907 - winner: dp\u001b[8X\r\n2025-01-03 19:04:51,596 - INFO - 50/43907 - winner: wifi\u001b[6X\r\n2025-01-03 19:04:51,596 - INFO - 50/43907 - winner: wifi\u001b[6X\r\n2025-01-03 19:04:59,721 - INFO - 60/43907 - winner: ndptool\u001b[3X\r\n2025-01-03 19:04:59,721 - INFO - 60/43907 - winner: ndptool\u001b[3X\r\n2025-01-03 19:05:08,591 - INFO - 70/43907 - winner: ksu.mit\u001b[3X\r\n2025-01-03 19:05:08,591 - INFO - 70/43907 - winner: ksu.mit\u001b[3X\r\n2025-01-03 19:05:15,281 - INFO - 80/43907 - winner: pts\u001b[7X\r\n2025-01-03 19:05:15,281 - INFO - 80/43907 - winner: pts\u001b[7X\r\n2025-01-03 19:05:22,332 - INFO - 90/43907 - winner: pamtofits\u001b[1X\r\n2025-01-03 19:05:22,332 - INFO - 90/43907 - winner: pamtofits\u001b[1X\r\n2025-01-03 19:05:30,100 - INFO - 100/43907 - winner: printcal\u001b[1X\r\n2025-01-03 19:05:30,100 - INFO - 100/43907 - winner: printcal\u001b[1X\r\n2025-01-03 19:05:35,541 - INFO - 110/43907 - winner: condor_tr\u001b[26;62H\u001b[1K\ransfer_data\r\n2025-01-03 19:05:35,541 - INFO - 110/43907 - winner: condor_tr\u001b[28;62H\u001b[1K\ransfer_data\u001b[29;62H\u001b[1K\u001b[?12l\u001b[?25h\u001b[2C"]
[158.2945, "o", "\u001b[?25l\u001b[H2025-01-03 19:04:08,569 - INFO - Batch size: 10\u001b[15X\r\n2025-01-03 19:04:08,569 - INFO - Total commands: 43907\u001b[8X\r\n2025-01-03 19:04:22,947 - INFO - 10/43907 - winner: avr-gcc\u001b[3X\r\n2025-01-03 19:04:22,947 - INFO - 10/43907 - winner: avr-gcc\u001b[3X\r\n2025-01-03 19:04:30,969 - INFO - 20/43907 - winner: irssi\u001b[5X\r\n2025-01-03 19:04:30,969 - INFO - 20/43907 - winner: irssi\u001b[5X\r\n2025-01-03 19:04:37,749 - INFO - 30/43907 - winner: rhost\u001b[5X\r\n2025-01-03 19:04:37,749 - INFO - 30/43907 - winner: rhost\u001b[5X\r\n2025-01-03 19:04:44,241 - INFO - 40/43907 - winner: dp\u001b[8X\r\n2025-01-03 19:04:44,241 - INFO - 40/43907 - winner: dp\u001b[8X\r\n2025-01-03 19:04:51,596 - INFO - 50/43907 - winner: wifi\u001b[6X\r\n2025-01-03 19:04:51,596 - INFO - 50/43907 - winner: wifi\u001b[6X\r\n2025-01-03 19:04:59,721 - INFO - 60/43907 - winner: ndptool\u001b[3X\r\n2025-01-03 19:04:59,721 - INFO - 60/43907 - winner: ndptool\u001b[3X\r\n2025-01-03 19:05:08,591 - INFO - 70/43907 - winner: ksu.mit\u001b[3X\r\n2025-01-03 19:05:08,591 - INFO - 70/43907 - winner: ksu.mit\u001b[3X\r\n2025-01-03 19:05:15,281 - INFO - 80/43907 - winner: pts\u001b[7X\r\n2025-01-03 19:05:15,281 - INFO - 80/43907 - winner: pts\u001b[7X\r\n2025-01-03 19:05:22,332 - INFO - 90/43907 - winner: pamtofits\u001b[1X\r\n2025-01-03 19:05:22,332 - INFO - 90/43907 - winner: pamtofits\u001b[1X\r\n2025-01-03 19:05:30,100 - INFO - 100/43907 - winner: printcal\u001b[1X\r\n2025-01-03 19:05:30,100 - INFO - 100/43907 - winner: printcal\u001b[1X\r\n2025-01-03 19:05:35,541 - INFO - 110/43907 - winner: condor_tr\u001b[24;62H\u001b[1K\ransfer_data\r\n2025-01-03 19:05:35,541 - INFO - 110/43907 - winner: condor_tr\u001b[26;62H\u001b[1K\ransfer_data\r\n2025-01-03 19:05:43,151 - INFO - 120/43907 - winner: expect_lp\u001b[28;62H\u001b[1K\runlock\u001b[29;62H\u001b[1K\u001b[1;64H4 med-dental\u001b[K\u001b[2;64H5 mpinsert\u001b[K\u001b[3;64H6 xen-update-image\u001b[K\u001b[4;64H7 mips-linux-gnu-gm2-9\u001b[K\u001b[5;64H8 cdffixtime\u001b[K\u001b[6;64H9 printcal\u001b[K\u001b[7;64H\u001b[K\n\u001b[K\n\u001b[K\n\u001b[K\n1 sxmo_dtmf.sh\u001b[K\u001b[12;64H2 z80-unknown-coff-ld\u001b[K\u001b[13;64H3 fetch-url\u001b[K\u001b[14;64H4 gvmap.sh\u001b[K\u001b[15;64H5 mosquitto_pub\u001b[K\u001b[16;64H6 osdshconfig\u001b[K\u001b[17;64H7 lssubsys\u001b[K\u001b[18;64H8 voms-proxy-init2\u001b[K\u001b[19;64H9 condor_transfer_data\u001b[K\u001b[20;64H1 sepl\u001b[K\u001b[21;64H2 i686-linux-gnu-gnatmake-10\u001b[K\u001b[22;64H3 shmemrun\u001b[K\u001b[23;64H4 mipsel-linux-gnu-g++\u001b[K\u001b[24;64H5 btrfs-image\u001b[K\u001b[25;64H6 proteinortho_graphMinusRemovegraph\u001b[K\u001b[26;64H7 vdb_render\u001b[K\u001b[27;64H8 carmetal\u001b[K\u001b[28;64H9 expect_lpunlock\u001b[K\u001b[29;64H\u001b[K\u001b[?12l\u001b[?25h"]
[158.29486, "o", "\u001b[?25l\u001b[H2025-01-03 19:04:22,947 - INFO - 10/43907 - winner: avr-gcc\u001b[3X\r\n2025-01-03 19:04:22,947 - INFO - 10/43907 - winner: avr-gcc\u001b[3X\r\n2025-01-03 19:04:30,969 - INFO - 20/43907 - winner: irssi\u001b[5X\r\n2025-01-03 19:04:30,969 - INFO - 20/43907 - winner: irssi\u001b[5X\r\n2025-01-03 19:04:37,749 - INFO - 30/43907 - winner: rhost\u001b[5X\r\n2025-01-03 19:04:37,749 - INFO - 30/43907 - winner: rhost\u001b[5X\r\n2025-01-03 19:04:44,241 - INFO - 40/43907 - winner: dp\u001b[8X\r\n2025-01-03 19:04:44,241 - INFO - 40/43907 - winner: dp\u001b[8X\r\n2025-01-03 19:04:51,596 - INFO - 50/43907 - winner: wifi\u001b[6X\r\n2025-01-03 19:04:51,596 - INFO - 50/43907 - winner: wifi\u001b[6X\r\n2025-01-03 19:04:59,721 - INFO - 60/43907 - winner: ndptool\u001b[3X\r\n2025-01-03 19:04:59,721 - INFO - 60/43907 - winner: ndptool\u001b[3X\r\n2025-01-03 19:05:08,591 - INFO - 70/43907 - winner: ksu.mit\u001b[3X\r\n2025-01-03 19:05:08,591 - INFO - 70/43907 - winner: ksu.mit\u001b[3X\r\n2025-01-03 19:05:15,281 - INFO - 80/43907 - winner: pts\u001b[7X\r\n2025-01-03 19:05:15,281 - INFO - 80/43907 - winner: pts\u001b[7X\r\n2025-01-03 19:05:22,332 - INFO - 90/43907 - winner: pamtofits\u001b[1X\r\n2025-01-03 19:05:22,332 - INFO - 90/43907 - winner: pamtofits\u001b[1X\r\n2025-01-03 19:05:30,100 - INFO - 100/43907 - winner: printcal\u001b[1X\r\n2025-01-03 19:05:30,100 - INFO - 100/43907 - winner: printcal\u001b[1X\r\n2025-01-03 19:05:35,541 - INFO - 110/43907 - winner: condor_tr\u001b[22;62H\u001b[1K\ransfer_data\r\n2025-01-03 19:05:35,541 - INFO - 110/43907 - winner: condor_tr\u001b[24;62H\u001b[1K\ransfer_data\r\n2025-01-03 19:05:43,151 - INFO - 120/43907 - winner: expect_lp\u001b[26;62H\u001b[1K\runlock\r\n2025-01-03 19:05:43,151 - INFO - 120/43907 - winner: expect_lp\u001b[28;62H\u001b[1K\runlock\u001b[29;62H\u001b[1K\u001b[?12l\u001b[?25h\u001b[2C"]
[164.986373, "o", "\u001b[?25l\u001b[1d\u001b[K\n1 sxmo_dtmf.sh\u001b[K\u001b[3;64H2 z80-unknown-coff-ld\u001b[K\u001b[4;64H3 fetch-url\u001b[K\u001b[5;64H4 gvmap.sh\u001b[K\u001b[6;64H5 mosquitto_pub\u001b[K\u001b[7;64H6 osdshconfig\u001b[K\u001b[8;64H7 lssubsys\u001b[K\u001b[9;64H8 voms-proxy-init2\u001b[K\u001b[10;64H9 condor_transfer_data\u001b[K\u001b[11;64H1 sepl\u001b[K\u001b[12;64H2 i686-linux-gnu-gnatmake-10\u001b[K\u001b[13;64H3 shmemrun\u001b[K\u001b[14;64H4 mipsel-linux-gnu-g++\u001b[K\u001b[15;64H5 btrfs-image\u001b[K\u001b[16;64H6 proteinortho_graphMinusRemovegraph\u001b[K\u001b[17;64H7 vdb_render\u001b[K\u001b[18;64H8 carmetal\u001b[K\u001b[19;64H9 expect_lpunlock\u001b[K\u001b[20;64H1 bowtie-build-s-debug\u001b[K\u001b[21;64H2 plookup\u001b[K\u001b[22;64H3 mmk_m3\u001b[K\u001b[23;64H4 relion_manualpick\u001b[K\u001b[24;64H5 mmtbx.altloc_remediate\u001b[K\u001b[25;64H6 mash\u001b[K\u001b[26;64H7 ophcrack-cli\u001b[K\u001b[27;64H8 taskd\u001b[K\u001b[28;64H9 mythmediaserver\u001b[K\u001b[29;64H\u001b[K\u001b[?12l\u001b[?25h"]
[164.986712, "o", "\u001b[?25l\u001b[H2025-01-03 19:04:37,749 - INFO - 30/43907 - winner: rhost\u001b[5X\r\n2025-01-03 19:04:37,749 - INFO - 30/43907 - winner: rhost\u001b[5X\r\n2025-01-03 19:04:44,241 - INFO - 40/43907 - winner: dp\u001b[8X\r\n2025-01-03 19:04:44,241 - INFO - 40/43907 - winner: dp\u001b[8X\r\n2025-01-03 19:04:51,596 - INFO - 50/43907 - winner: wifi\u001b[6X\r\n2025-01-03 19:04:51,596 - INFO - 50/43907 - winner: wifi\u001b[6X\r\n2025-01-03 19:04:59,721 - INFO - 60/43907 - winner: ndptool\u001b[3X\r\n2025-01-03 19:04:59,721 - INFO - 60/43907 - winner: ndptool\u001b[3X\r\n2025-01-03 19:05:08,591 - INFO - 70/43907 - winner: ksu.mit\u001b[3X\r\n2025-01-03 19:05:08,591 - INFO - 70/43907 - winner: ksu.mit\u001b[3X\r\n2025-01-03 19:05:15,281 - INFO - 80/43907 - winner: pts\u001b[7X\r\n2025-01-03 19:05:15,281 - INFO - 80/43907 - winner: pts\u001b[7X\r\n2025-01-03 19:05:22,332 - INFO - 90/43907 - winner: pamtofits\u001b[1X\r\n2025-01-03 19:05:22,332 - INFO - 90/43907 - winner: pamtofits\u001b[1X\r\n2025-01-03 19:05:30,100 - INFO - 100/43907 - winner: printcal\u001b[1X\r\n2025-01-03 19:05:30,100 - INFO - 100/43907 - winner: printcal\u001b[1X\r\n2025-01-03 19:05:35,541 - INFO - 110/43907 - winner: condor_tr\u001b[18;62H\u001b[1K\ransfer_data\r\n2025-01-03 19:05:35,541 - INFO - 110/43907 - winner: condor_tr\u001b[20;62H\u001b[1K\ransfer_data\r\n2025-01-03 19:05:43,151 - INFO - 120/43907 - winner: expect_lp\u001b[22;62H\u001b[1K\runlock\r\n2025-01-03 19:05:43,151 - INFO - 120/43907 - winner: expect_lp\u001b[24;62H\u001b[1K\runlock\r\n2025-01-03 19:05:49,843 - INFO - 130/43907 - winner: mythmedia\u001b[26;62H\u001b[1K\rserver\r\n2025-01-03 19:05:49,843 - INFO - 130/43907 - winner: mythmedia\u001b[28;62H\u001b[1K\rserver\u001b[29;62H\u001b[1K\u001b[?12l\u001b[?25h\u001b[2C"]
[167.916799, "o", "\u001b[?25l\u001b[H\u001b[K\r\n1 sxmo_dtmf.sh\u001b[K\r\n2 z80-unknown-coff-ld\u001b[K\r\n3 fetch-url\u001b[K\r\n4 gvmap.sh\u001b[K\r\n5 mosquitto_pub\u001b[K\r\n6 osdshconfig\u001b[K\r\n7 lssubsys\u001b[K\r\n8 voms-proxy-init2\u001b[K\r\n9 condor_transfer_data\u001b[K\r\n1 sepl\u001b[K\r\n2 i686-linux-gnu-gnatmake-10\u001b[K\r\n3 shmemrun\u001b[K\r\n4 mipsel-linux-gnu-g++\u001b[K\r\n5 btrfs-image\u001b[K\r\n6 proteinortho_graphMinusRemovegraph\u001b[K\r\n7 vdb_render\u001b[K\r\n8 carmetal\u001b[K\r\n9 expect_lpunlock\u001b[K\r\n1 bowtie-build-s-debug\u001b[K\r\n2 plookup\u001b[K\r\n3 mmk_m3\u001b[K\r\n4 relion_manualpick\u001b[K\r\n5 mmtbx.altloc_remediate\u001b[K\r\n6 mash\u001b[K\r\n7 ophcrack-cli\u001b[K\r\n8 taskd\u001b[K\r\n9 mythmediaserver\u001b[K\r\n\u001b[K\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:tail*Z                                                                 \"gaz@orin: ~/src/uh-ha\" 19:05 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[29;1H"]
[169.886012, "o", "^C"]
[169.886659, "o", "\u001b[?25l\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*Z                                                                 \"gaz@orin: ~/src/uh-ha\" 19:05 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[29;3H"]
[169.903151, "o", "\u001b[1;29r\u001b[29;1H\n\u001b[K\u001b[1;30r\u001b[29;1H"]
[169.903494, "o", "\u001b[?2004h(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ "]
[169.903735, "o", "\u001b[?25l\u001b[?12l\u001b[?25h"]
[172.935291, "o", "l"]
[172.996715, "o", "s"]
[173.117661, "o", " "]
[173.25778, "o", "-"]
[173.394188, "o", "l"]
[173.536469, "o", "t"]
[173.56347, "o", "r"]
[174.284779, "o", " "]
[174.511104, "o", "l"]
[174.691018, "o", "o"]
[174.893295, "o", "g"]
[175.041843, "o", "/"]
[175.192522, "o", "\u001b[?25l\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*Z                                                                 \"gaz@orin: ~/src/uh-ha\" 19:06 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[29;50H"]
[176.716243, "o", "*"]
[177.20497, "o", "\b\u001b[K"]
[177.429574, "o", "0"]
[177.51778, "o", "2"]
[178.503219, "o", "*"]
[179.173367, "o", "\u001b[1;29r\u001b[29;1H\n\u001b[K\u001b[1;30r\u001b[29;1H\u001b[?2004l"]
[179.176368, "o", "ls: cannot access 'log/02*'"]
[179.176592, "o", "\u001b[1;29r\u001b[29;1H\n\u001b[28;28H: No such file or directory\r\n\u001b[K\u001b[1;30r\u001b[29;1H"]
[179.177025, "o", "(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[?2004h"]
[179.177425, "o", "\u001b[?25l\u001b[?12l\u001b[?25h"]
[181.795073, "o", "ls -ltr log/02*"]
[182.112082, "o", "\b\u001b[K"]
[182.275297, "o", "\b\u001b[K"]
[182.39883, "o", "\b\u001b[K"]
[183.453959, "o", "\u001b[1;29r\u001b[29;1H\n\u001b[K\u001b[1;30r\u001b[29;1H\u001b[?2004l"]
[183.457715, "o", "\u001b[1;29r\u001b[29;1H\n\u001b[Atotal 31244\r\n\u001b[K\u001b[1;30r\u001b[29;1H\u001b[1;29r\u001b[1;1H\u001b[16S\u001b[12B-rw-rw-r-- 1 gaz gaz    1023 Dec 30 03:13 03d.base-build.log\r\n-rw-rw-r-- 1 gaz gaz 1511137 Dec 30 03:58 03d.build-ubuntu-500-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz     671 Dec 30 03:58 failed-packages-ubuntu-500-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  774975 Dec 30 04:48 03d.build-ubuntu-1000-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz    1269 Dec 30 04:48 failed-packages-ubuntu-1000-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  717604 Dec 30 05:19 03d.build-ubuntu-1500-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz    1632 Dec 30 05:19 failed-packages-ubuntu-1500-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  914215 Dec 30 05:56 03d.build-ubuntu-2000-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz    2408 Dec 30 05:57 failed-packages-ubuntu-2000-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  673414 Dec 30 06:33 03d.build-ubuntu-2500-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz    2766 Dec 30 06:33 failed-packages-ubuntu-2500-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  627313 Dec 30 07:13 03d.build-ubuntu-3000-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz    3082 Dec 30 07:13 failed-packages-ubuntu-3000-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  568893 Dec 30 07:48 03d.build-ubuntu-3500-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz    3402 Dec 30 07:48 failed-packages-ubuntu-3500-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  551399 Dec 30 08:33 03d.build-ubuntu-4000-aarch64.log\u001b[K\r\n\u001b[K\u001b[1;30r\u001b[29;1H"]
[183.458452, "o", "\u001b[1;29r\u001b[1;1H\u001b[29S-rw-rw-r-- 1 gaz gaz  527757 Dec 30 15:27 03d.build-ubuntu-8000-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz    7872 Dec 30 15:27 failed-packages-ubuntu-8000-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  557080 Dec 30 16:31 03d.build-ubuntu-8500-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz    8195 Dec 30 16:31 failed-packages-ubuntu-8500-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  555912 Dec 30 17:33 03d.build-ubuntu-9000-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz    9204 Dec 30 17:33 failed-packages-ubuntu-9000-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  618250 Dec 30 18:59 03d.build-ubuntu-9500-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz    9534 Dec 30 18:59 failed-packages-ubuntu-9500-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz 1993525 Dec 30 20:17 03d.build-ubuntu-10000-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz   10555 Dec 30 20:17 failed-packages-ubuntu-10000-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz 1330978 Dec 30 23:18 03d.build-ubuntu-10500-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz   10694 Dec 30 23:18 failed-packages-ubuntu-10500-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  864864 Dec 31 00:55 03d.build-ubuntu-11000-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz   10694 Dec 31 00:55 failed-packages-ubuntu-11000-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  805882 Dec 31 02:23 03d.build-ubuntu-11500-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz   12550 Dec 31 02:23 failed-packages-ubuntu-11500-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  983960 Dec 31 04:10 03d.build-ubuntu-12000-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz   12550 Dec 31 04:10 failed-packages-ubuntu-12000-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  893828 Dec 31 05:52 03d.build-ubuntu-12500-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz   12921 Dec 31 05:52 failed-packages-ubuntu-12500-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz 1174887 Dec 31 08:48 03d.build-ubuntu-13000-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz   12921 Dec 31 08:48 failed-packages-ubuntu-13000-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz 1174642 Dec 31 12:07 03d.build-ubuntu-13500-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz   12921 Dec 31 12:07 failed-packages-ubuntu-13500-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  729181 Dec 31 14:00 03d.build-ubuntu-14000-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz   13245 Dec 31 14:00 failed-packages-ubuntu-14000-aarch64.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz 8552151 Dec 31 23:14 04.generate-help.log\u001b[K\r\n-rw-rw-r-- 1 gaz gaz  224737 Jan  3 19:06 binary_ranking_debug.log\u001b[K\r\n\u001b[K\u001b[1;30r\u001b[29;1H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ "]
[183.459057, "o", "\u001b[?25l\u001b[?12l\u001b[?25h\u001b[?2004h"]
[189.392827, "o", "t"]
[189.463501, "o", "a"]
[189.505579, "o", "i"]
[189.709612, "o", "l"]
[189.857804, "o", " "]
[190.110645, "o", "-"]
[190.402042, "o", " "]
[190.675723, "o", "\b\u001b[K"]
[191.054146, "o", "f"]
[191.12404, "o", " "]
[192.409191, "o", "l"]
[192.554717, "o", "o"]
[192.764775, "o", "g"]
[193.004198, "o", "/"]
[194.049189, "o", "\u001b[7mbinary_ranking_debug.log\u001b(B\u001b[m"]
[197.964055, "o", "\u001b[1;29r\u001b[29;1H\n\u001b[28;50Hbinary_ranking_debug.log\r\n\u001b[K\u001b[1;30r\u001b[29;1H"]
[197.964412, "o", "\u001b[?2004l"]
[197.967253, "o", "\u001b[1;29r\u001b[1;1H\u001b[18S\u001b[10B{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:19.498589624Z\",\"response\":\".get\",\"done\":false}\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:19.603366779Z\",\"response\":\"_info\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:19.706146326Z\",\"response\":\".py\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:19.809638706Z\",\"response\":\"\\n\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:19.914117186Z\",\"response\":\"osg\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.01864376Z\",\"response\":\"terrain\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.122865135Z\",\"response\":\"\",\"done\":true,\"done_reason\":\"stop\",\"context\":[128006,9125,128007,271,2675,527,28121,37780,2320,8948,11,459,15592,2068,430,28727,902,11545,279,1217,374,1455,4461,311,955,13,5688,374,264,1160,315,70837,13,9442,374,459,11713,1160,555,29736,315,1694,10862,389,279,13939,13,40633,449,1120,279,3290,5144,304,2015,315,29736,13,128009,128006,882,128007,271,14736,18843,198,2005,20533,33245,11409,198,92512,47882,198,59312,2325,4942,64,12,18,13,17,13,17,198,9117,2062,73299,198,79,9996,22,198,267,75,669,23716,198,53321,82,673,3186,7345,198,76,3527,15,62,24,998,16,62,15,198,2984,25453,88,128009,128006,78191,128007,271,59312,2325,4942,64,12,18,13,17,13,17,198,14736,18843,198,2005,20533,33245,11409,198,2984,25453,88,198,9117,2062,73299,198,79,9996,22,198,267,75,669,23716,198,76,3527,15,62,24,998,16,62,15,198,53321,82,673,3186,7345,198,92512,47882],\"total_duration\":6061012737,\"load_duration\":68290353,\"prompt_eval_count\":123,\"prompt_eval_duration\":83000000,\"eval_count\":55,\"eval_duration\":5908000000}\u001b[K\r\n\u001b[K\r\n2025-01-03 19:06:20,142 - INFO - 170/43907 - winner: grab_vcsa-3.2.2\u001b[K\r\n2025-01-03 19:06:20,142 - INFO - 170/43907 - winner: grab_vcsa-3.2.2\u001b[K\r\n\u001b[K\u001b[1;30r\u001b[29;1H"]
[198.470168, "o", "\u001b[?25l\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:tail*Z                                                                 \"gaz@orin: ~/src/uh-ha\" 19:06 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[29;1H"]
[202.375645, "o", "\u001b[1;29r\u001b[29;1H\n\u001b[K\u001b[1;30r\u001b[29;1H"]
[202.512741, "o", "\u001b[1;29r\u001b[29;1H\n\u001b[K\u001b[1;30r\u001b[29;1H"]
[203.599273, "o", "\u001b[1;29r\u001b[1;1H\u001b[11S\u001b[18d2025-01-03 19:06:28,455 - DEBUG - Full response: {\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.537782625Z\",\"response\":\"1\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.648025683Z\",\"response\":\".\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.751741321Z\",\"response\":\" dx\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.855286661Z\",\"response\":\"\\n\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.958924926Z\",\"response\":\"2\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.071494283Z\",\"response\":\".\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.17614857Z\",\"response\":\" apply\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.280558515Z\",\"response\":\"cal\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.385130086Z\",\"response\":\"\\n\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.489270187Z\",\"response\":\"3\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"202\u001b[K\u001b[1;30r\u001b[29;36H\u001b[1;29r\u001b[1;1H\u001b[29S{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.158510475Z\",\"response\":\"ring\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.262627224Z\",\"response\":\"-build\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.366409044Z\",\"response\":\"\\n\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.470399175Z\",\"response\":\"6\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.574467351Z\",\"response\":\".\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.677814471Z\",\"response\":\" g\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.78242067Z\",\"response\":\"nu\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.886437776Z\",\"response\":\"-step\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.990445506Z\",\"response\":\"-config\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.094373627Z\",\"response\":\"\\n\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.198225368Z\",\"response\":\"7\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.301958265Z\",\"response\":\".\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.41410391Z\",\"response\":\" m\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.518302963Z\",\"response\":\"ips\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.623598735Z\",\"response\":\"el\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.728775889Z\",\"response\":\"-linux\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.834386335Z\",\"response\":\"-gnu\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.940052491Z\",\"response\":\"-g\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.046149765Z\",\"response\":\"nat\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.152003052Z\",\"response\":\"ls\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.257867923Z\",\"response\":\"-\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.36384626Z\",\"response\":\"11\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.469442695Z\",\"response\":\"\\n\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.575228273Z\",\"response\":\"8\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.680648299Z\",\"response\":\".\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.786465204Z\",\"response\":\" alpha\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.8923926Z\",\"response\":\"-linux\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.998228672Z\",\"response\":\"-gnu\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"crea\u001b[K\u001b[1;30r\u001b[29;24H"]
[203.599993, "o", "\u001b[1;29r\u001b[1;1H\u001b[29S{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.481842839Z\",\"response\":\"12\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.587687429Z\",\"response\":\"\\n\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.691332885Z\",\"response\":\"10\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.802967907Z\",\"response\":\".\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.909069605Z\",\"response\":\" g\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.014715101Z\",\"response\":\"olang\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.121045305Z\",\"response\":\"-if\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.2264096Z\",\"response\":\"ace\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.331659532Z\",\"response\":\"assert\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.436717664Z\",\"response\":\"\",\"done\":true,\"done_reason\":\"stop\",\"context\":[128006,9125,128007,271,2675,527,28121,37780,2320,8948,11,459,15592,2068,430,28727,902,11545,279,1217,374,1455,4461,311,955,13,5688,374,264,1160,315,70837,13,9442,374,459,11713,1160,555,29736,315,1694,10862,389,279,13939,13,40633,449,1120,279,3290,5144,304,2015,315,29736,13,128009,128006,882,128007,271,13009,198,70,38387,45737,580,2256,198,7288,47475,86816,2427,34397,1580,198,76,3153,47475,86816,2427,34397,12,717,198,15769,12928,33245,198,17557,3292,79,10079,198,5010,592,752,26187,198,76,3153,301,47475,86816,2427,34397,4835,12,806,198,10492,5531,198,359,96605,19,128009,128006,78191,128007,271,16,13,14142,198,17,13,3881,5531,198,18,13,65985,89,19,198,19,13,1755,3292,79,10079,198,20,13,17004,12928,33245,198,21,13,342,9110,30308,26187,198,22,13,296,3153,301,47475,86816,2427,34397,4835,12,806,198,23,13,8451,47475,86816,2427,34397,1580,198,24,13,296,3153,47475,86816,2427,34397,12,717,198,605,13,342,38387,45737,580,2256],\"total_duration\":8290849746,\"load_duration\":61595561,\"prompt_eval_count\":124,\"prompt_eval_duration\":101000000,\"eval_count\":76,\"eval_duration\":8122000000}\u001b[K\r\n\u001b[K\r\n2025-01-03 19:06:28,455 - DEBUG - Full response: {\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.537782625Z\",\"response\":\"1\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.648025683Z\",\"response\":\".\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.751741321Z\",\"response\":\" dx\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.855286661Z\",\"response\":\"\\n\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.958924926Z\",\"response\":\"2\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.071494283Z\",\"response\":\".\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.17614857Z\",\"response\":\" apply\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.280558515Z\",\"response\":\"cal\",\"done\":false}\u001b[K\u001b[1;30r\u001b[29;95H\u001b[1;29r\u001b[1;1H\u001b[29S{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:22.846063084Z\",\"response\":\"5\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:22.95031336Z\",\"response\":\".\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.054352575Z\",\"response\":\" jet\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.158510475Z\",\"response\":\"ring\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.262627224Z\",\"response\":\"-build\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.366409044Z\",\"response\":\"\\n\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.470399175Z\",\"response\":\"6\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.574467351Z\",\"response\":\".\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.677814471Z\",\"response\":\" g\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.78242067Z\",\"response\":\"nu\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.886437776Z\",\"response\":\"-step\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_a"]
[203.600372, "o", "t\":\"2025-01-03T19:06:23.990445506Z\",\"response\":\"-config\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.094373627Z\",\"response\":\"\\n\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.198225368Z\",\"response\":\"7\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.301958265Z\",\"response\":\".\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.41410391Z\",\"response\":\" m\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.518302963Z\",\"response\":\"ips\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.623598735Z\",\"response\":\"el\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.728775889Z\",\"response\":\"-linux\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.834386335Z\",\"response\":\"-gnu\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.940052491Z\",\"response\":\"-g\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.046149765Z\",\"response\":\"nat\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.152003052Z\",\"response\":\"ls\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.257867923Z\",\"response\":\"-\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.36384626Z\",\"response\":\"11\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.469442695Z\",\"response\":\"\\n\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.575228273Z\",\"response\":\"8\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.680648299Z\",\"response\":\".\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.786465204Z\",\"response\":\" alpha\",\"done\"\u001b[K\u001b[1;30r\u001b[29;91H\u001b[1;29r\u001b[1;1H\u001b[29S{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:26.845924236Z\",\"response\":\"ips\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:26.951868787Z\",\"response\":\"-linux\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.057962964Z\",\"response\":\"-gnu\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.164072887Z\",\"response\":\"-g\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.269995362Z\",\"response\":\"nat\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.37575698Z\",\"response\":\"-\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.481842839Z\",\"response\":\"12\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.587687429Z\",\"response\":\"\\n\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.691332885Z\",\"response\":\"10\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.802967907Z\",\"response\":\".\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.909069605Z\",\"response\":\" g\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.014715101Z\",\"response\":\"olang\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.121045305Z\",\"response\":\"-if\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.2264096Z\",\"response\":\"ace\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.331659532Z\",\"response\":\"assert\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.436717664Z\",\"response\":\"\",\"done\":true,\"done_reason\":\"stop\",\"context\":[128006,9125,128007,271,2675,527,28121,37780,2320,8948,11,459,15592,2068,430,28727,902,11545,279,1217,374,1455,4461,311,955,13,5688,374,264,1160,315,70837,13,9442,374,459,11713,1160,555,29736,315,1694,10862,389,279,13939,13,40633,449,1120,279,3290,5144,304,2015,315,29736,13,128009,128006,882,128007,271,13009,198,70,38387,45737,580,2256,198,7288,47475,86816,2427,34397,1580,198,76,3153,47475,86816,2427,34397,12,717,198,15769,12928,33245,198,17557,3292,79,10079,198,5010,592,752,26187,198,76,3153,301,47475,86816,2427,34397,4835,12,806,198,10492,5531,198,359,96605,19,128009,128006,78191,128007,271,16,13,14142,198,17,13,3881,5531,198,18,13,65985,89,19,198,19,13,1755,3292,79,10079,198,20,13,17004,12928,33245,198,21,13,3"]
[203.600626, "o", "42,9110,30308,26187,198,22,13,296,3153,301,47475,86816,2427,34397,4835,12,806,198,23,13,8451,47475,86816,2427,34397,1580,198,24,13,296,3153,47475,86816,2427,34397,12,717,198,605,13,342,38387,45737,580,2256],\"total_duration\":8290849746,\"load_duration\":61595561,\"prompt_eval_count\":124,\"prompt_eval_duration\":101000000,\"eval_count\":76,\"eval_duration\":8122000000}\u001b[K\r\n\u001b[K\r\n2025-01-03 19:06:28,456 - INFO - 180/43907 - winner: dx\u001b[K\r\n2025-01-03 19:06:28,456 - INFO - 180/43907 - winner: dx\u001b[K\r\n\u001b[K\u001b[1;30r\u001b[29;1H"]
[208.518851, "o", "^C"]
[208.519496, "o", "\u001b[?25l\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*Z                                                                 \"gaz@orin: ~/src/uh-ha\" 19:06 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[29;3H"]
[208.527347, "o", "\u001b[1;29r\u001b[29;1H\n\u001b[K\u001b[1;30r\u001b[29;1H"]
[208.527578, "o", "\u001b[?2004h(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ "]
[208.527965, "o", "\u001b[?25l\u001b[?12l\u001b[?25h"]
[210.432845, "o", "\u001b[?25l\u001b[H{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:26.422558561Z\",\"response\":\"\\n\",\"done\":false}\u001b[24X\u001b[30m\u001b[43m\u001b[24C[5/297]\u001b[39m\u001b[49m\u001b[2;1H{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:26.528328015Z\",\"response\":\"9\",\"done\":false}\u001b[25X\u001b[25C       \u001b[3;1H{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:26.634376305Z\",\"response\":\".\",\"done\":false}\u001b[25X\u001b[25C       \u001b[4;1H{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:26.740280601Z\",\"response\":\" m\",\"done\":false}\u001b[24X\u001b[24C       \u001b[5;1H{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:26.845924236Z\",\"response\":\"ips\",\"done\":false}\u001b[23X\u001b[23C       \u001b[6;1H{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:26.951868787Z\",\"response\":\"-linux\",\"done\":false}\u001b[20X\u001b[20C       \u001b[7;1H{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.057962964Z\",\"response\":\"-gnu\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.164072887Z\",\"response\":\"-g\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.269995362Z\",\"response\":\"nat\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.37575698Z\",\"response\":\"-\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.481842839Z\",\"response\":\"12\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.587687429Z\",\"response\":\"\\n\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.691332885Z\",\"response\":\"10\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.802967907Z\",\"response\":\".\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.909069605Z\",\"response\":\" g\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.014715101Z\",\"response\":\"olang\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.121045305Z\",\"response\":\"-if\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.2264096Z\",\"response\":\"ace\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.331659532Z\",\"response\":\"assert\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.436717664Z\",\"response\":\"\",\"done\":true,\"done_reason\":\"stop\",\"context\":[12\u001b[21;1H8006,9125,128007,271,2675,527,28121,37780,2320,8948,11,459,15592,2068,430,28727,902,11545,279,1217,374,1455,4461,311,955,13,\u001b[22;1H5688,374,264,1160,315,70837,13,9442,374,459,11713,1160,555,29736,315,1694,10862,389,279,13939,13,40633,449,1120,279,3290,514\u001b[23;1H4,304,2015,315,29736,13,128009,128006,882,128007,271,13009,198,70,38387,45737,580,2256,198,7288,47475,86816,2427,34397,1580,\u001b[24;1H198,76,3153,47475,86816,2427,34397,12,717,198,15769,12928,33245,198,17557,3292,79,10079,198,5010,592,752,26187,198,76,3153,3\u001b[25;1H01,47475,86816,2427,34397,4835,12,806,198,10492,5531,198,359,96605,19,128009,128006,78191,128007,271,16,13,14142,198,17,13,3\u001b[26;1H881,5531,198,18,13,65985,89,19,198,19,13,1755,3292,79,10079,198,20,13,17004,12928,33245,198,21,13,342,9110,30308,26187,198,2\u001b[27;1H2,13,296,3153,301,47475,86816,2427,34397,4835,12,806,198,23,13,8451,47475,86816,2427,34397,1580,198,24,13,296,3153,47475,868\u001b[28;1H16,2427,34397,12,717,198,605,13,342,38387,45737,580,2256],\"total_duration\":8290849746,\"load_duration\":61595561,\"prompt_eval_\u001b[29;1Hcount\":124,\"prompt_eval_duration\":101000000,\"eval_count\":76,\"eval_duration\":8122000000}\u001b[K\u001b[?12l\u001b[?25h\u001b[?2004l"]
[210.433721, "o", "\u001b[?25l\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:[tmux]*Z                                                               \"gaz@orin: ~/src/uh-ha\" 19:06 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[29;88H"]
[210.436329, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;118H\u001b[30m\u001b[43m[6/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:26.316091025Z\",\"response\":\"html\",\"done\":false}\u001b[2;118H       \u001b[29;124H$\u001b[1;1H\u001b[1L\u001b[1;118H\u001b[30m\u001b[43m[7/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:26.210240679Z\",\"response\":\"nat\",\"done\":false}\u001b[2;118H       \u001b[29;124H$\u001b[1;1H\u001b[1L\u001b[1;118H\u001b[30m\u001b[43m[8/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:26.104083754Z\",\"response\":\"-g\",\"done\":false}\u001b[2;118H       \u001b[29;124H$\u001b[1;1H\u001b[1L\u001b[1;118H\u001b[30m\u001b[43m[9/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.998228672Z\",\"response\":\"-gnu\",\"done\":false}\u001b[2;118H       \u001b[29;124H$\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[10/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.8923926Z\",\"response\":\"-linux\",\"done\":false}\u001b[2;118H       \u001b[29;124H$\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[11/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.786465204Z\",\"response\":\" alpha\",\"done\":false}\u001b[2;117H        \u001b[29;124H$\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[12/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.680648299Z\",\"response\":\".\",\"done\":false}\u001b[2;117H        \u001b[29;124H$\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[13/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.575228273Z\",\"response\":\"8\",\"done\":false}\u001b[2;117H        \u001b[29;124H$\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[14/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.469442695Z\",\"response\":\"\\n\",\"done\":false}\u001b[2;117H        \u001b[29;124H$\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[15/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.36384626Z\",\"response\":\"11\",\"done\":false}\u001b[2;117H        \u001b[2;1H\u001b[1;30r\u001b[29;98H"]
[210.455836, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[16/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.257867923Z\",\"response\":\"-\",\"done\":false}\u001b[2;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[17/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.152003052Z\",\"response\":\"ls\",\"done\":false}\u001b[2;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[18/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.046149765Z\",\"response\":\"nat\",\"done\":false}\u001b[2;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[19/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.940052491Z\",\"response\":\"-g\",\"done\":false}\u001b[2;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[20/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.834386335Z\",\"response\":\"-gnu\",\"done\":false}\u001b[2;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[21/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.728775889Z\",\"response\":\"-linux\",\"done\":false}\u001b[2;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[22/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.623598735Z\",\"response\":\"el\",\"done\":false}\u001b[2;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[23/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.518302963Z\",\"response\":\"ips\",\"done\":false}\u001b[2;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[24/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.41410391Z\",\"response\":\" m\",\"done\":false}\u001b[2;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[25/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.301958265Z\",\"response\":\".\",\"done\":false}\u001b[2;117H        \u001b[2;1H\u001b[1;30r\u001b[29;95H"]
[210.47452, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[26/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.198225368Z\",\"response\":\"7\",\"done\":false}\u001b[2;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[27/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.094373627Z\",\"response\":\"\\n\",\"done\":false}\u001b[2;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[28/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.990445506Z\",\"response\":\"-config\",\"done\":false}\u001b[2;117H        \u001b[29;118H       \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[29/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.886437776Z\",\"response\":\"-step\",\"done\":false}\u001b[2;117H        \u001b[29;118H       \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[30/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.78242067Z\",\"response\":\"nu\",\"done\":false}\u001b[2;117H        \u001b[29;118H       \u001b[29;1H\u001b[1;30r\u001b[29;94H"]
[210.493841, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[31/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.677814471Z\",\"response\":\" g\",\"done\":false}\u001b[2;117H        \u001b[29;118H       \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[32/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.574467351Z\",\"response\":\".\",\"done\":false}\u001b[2;117H        \u001b[29;118H       \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[33/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.470399175Z\",\"response\":\"6\",\"done\":false}\u001b[2;117H        \u001b[29;118H       \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[34/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.366409044Z\",\"response\":\"\\n\",\"done\":false}\u001b[2;117H        \u001b[29;118H       \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[35/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.262627224Z\",\"response\":\"-build\",\"done\":false}\u001b[2;117H        \u001b[29;118H       \u001b[29;1H\u001b[1;30r\u001b[29;95H"]
[210.513006, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[36/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.158510475Z\",\"response\":\"ring\",\"done\":false}\u001b[2;117H        \u001b[29;118H       \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[37/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.054352575Z\",\"response\":\" jet\",\"done\":false}\u001b[2;117H        \u001b[29;118H       \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[38/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:22.95031336Z\",\"response\":\".\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[39/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:22.846063084Z\",\"response\":\"5\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[40/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:22.742140473Z\",\"response\":\"\\n\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[29;1H\u001b[1;30r\u001b[29;93H"]
[210.531745, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[41/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:22.638206919Z\",\"response\":\"stat\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[42/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:22.533638001Z\",\"response\":\"p\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[43/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:22.429156631Z\",\"response\":\"_x\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[44/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:22.325037549Z\",\"response\":\" expect\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[45/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:22.219878994Z\",\"response\":\".\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[29;1H\u001b[1;30r\u001b[29;94H"]
[210.551537, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[46/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:22.114868847Z\",\"response\":\"4\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[47/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:22.009567386Z\",\"response\":\"\\n\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[48/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.904577626Z\",\"response\":\"4\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[49/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.799658167Z\",\"response\":\"z\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[50/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.696109303Z\",\"response\":\" unl\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[29;1H\u001b[1;30r\u001b[29;94H"]
[210.571265, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[51/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.593638311Z\",\"response\":\".\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[52/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.489270187Z\",\"response\":\"3\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[53/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.385130086Z\",\"response\":\"\\n\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[54/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.280558515Z\",\"response\":\"cal\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[55/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.17614857Z\",\"response\":\" apply\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[29;1H\u001b[1;30r\u001b[29;94H"]
[210.590638, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[56/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.071494283Z\",\"response\":\".\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[57/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.958924926Z\",\"response\":\"2\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[58/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.855286661Z\",\"response\":\"\\n\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[59/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.751741321Z\",\"response\":\" dx\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[60/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.648025683Z\",\"response\":\".\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[29;1H\u001b[1;30r\u001b[29;93H"]
[210.627981, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[61/297]\u001b[1;1H\u001b[39m\u001b[49m\"1\",\"done\":false}\u001b[14C                                                                                     \n        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[62/297]\u001b[1;1H\u001b[39m\u001b[49m2025-01-03 19:06:28,455 - DEBUG - Full response: {\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.537782625Z\",\"re\n        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[63/297]\u001b[1;1H\u001b[39m\u001b[49m                                                                                                                    \nsponse\":\u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[64/297]\u001b[1;1H\u001b[39m\u001b[49mcount\":124,\"prompt_eval_duration\":101000000,\"eval_count\":76,\"eval_duration\":8122000000}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[65/297]\u001b[1;1H\u001b[39m\u001b[49m16,2427,34397,12,717,198,605,13,342,38387,45737,580,2256],\"total_duration\":8290849746,\"load_duration\":61595561,\"prom\n        \u001b[29;117H        \u001b[29;1H\u001b[1;30r\u001b[29;96H"]
[210.723485, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[66/297]\u001b[1;1H\u001b[39m\u001b[49m2,13,296,3153,301,47475,86816,2427,34397,4835,12,806,198,23,13,8451,47475,86816,2427,34397,1580,198,24,13,296,3153,4\npt_eval_\u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[67/297]\u001b[1;1H\u001b[39m\u001b[49m881,5531,198,18,13,65985,89,19,198,19,13,1755,3292,79,10079,198,20,13,17004,12928,33245,198,21,13,342,9110,30308,261\n7475,868\u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[68/297]\u001b[1;1H\u001b[39m\u001b[49m01,47475,86816,2427,34397,4835,12,806,198,10492,5531,198,359,96605,19,128009,128006,78191,128007,271,16,13,14142,198\n87,198,2\u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[69/297]\u001b[1;1H\u001b[39m\u001b[49m198,76,3153,47475,86816,2427,34397,12,717,198,15769,12928,33245,198,17557,3292,79,10079,198,5010,592,752,26187,198,7\n,17,13,3\u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[70/297]\u001b[1;1H\u001b[39m\u001b[49m4,304,2015,315,29736,13,128009,128006,882,128007,271,13009,198,70,38387,45737,580,2256,198,7288,47475,86816,2427,343\n6,3153,3\u001b[29;117H        \u001b[29;1H\u001b[1;30r\u001b[29;93H"]
[210.802047, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[71/297]\u001b[1;1H\u001b[39m\u001b[49m5688,374,264,1160,315,70837,13,9442,374,459,11713,1160,555,29736,315,1694,10862,389,279,13939,13,40633,449,1120,279,\n97,1580,\u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[72/297]\u001b[1;1H\u001b[39m\u001b[49m8006,9125,128007,271,2675,527,28121,37780,2320,8948,11,459,15592,2068,430,28727,902,11545,279,1217,374,1455,4461,311\n3290,514\u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[73/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.436717664Z\",\"response\":\"\",\"done\":true,\"done_reason\":\"stop\",\"cont\n,955,13,\u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[74/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.331659532Z\",\"response\":\"assert\",\"done\":false}\u001b[2;117Hext\":[12\u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[75/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.2264096Z\",\"response\":\"ace\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[29;1H\u001b[1;30r\u001b[29;94H"]
[211.171149, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[76/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.121045305Z\",\"response\":\"-if\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[77/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.014715101Z\",\"response\":\"olang\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[78/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.909069605Z\",\"response\":\" g\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[79/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.802967907Z\",\"response\":\".\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[80/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.691332885Z\",\"response\":\"10\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[29;1H\u001b[1;30r\u001b[29;93H"]
[211.245434, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[81/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.587687429Z\",\"response\":\"\\n\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[82/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.481842839Z\",\"response\":\"12\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[83/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.37575698Z\",\"response\":\"-\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[84/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.269995362Z\",\"response\":\"nat\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[85/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.164072887Z\",\"response\":\"-g\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[29;1H\u001b[1;30r\u001b[29;93H"]
[211.896822, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[86/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.057962964Z\",\"response\":\"-gnu\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[87/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:26.951868787Z\",\"response\":\"-linux\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[88/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:26.845924236Z\",\"response\":\"ips\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[89/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:26.740280601Z\",\"response\":\" m\",\"done\":false}\u001b[2;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[90/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:26.634376305Z\",\"response\":\".\",\"done\":false}\u001b[2;117H        \u001b[29;124H$\u001b[29;1H\u001b[1;30r\u001b[29;124H"]
[211.936423, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[91/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:26.528328015Z\",\"response\":\"9\",\"done\":false}\u001b[2;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[92/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:26.422558561Z\",\"response\":\"\\n\",\"done\":false}\u001b[2;117H        \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[93/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:26.316091025Z\",\"response\":\"html\",\"done\":false}\u001b[2;117H        \u001b[29;124H$\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[94/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:26.210240679Z\",\"response\":\"nat\",\"done\":false}\u001b[2;117H        \u001b[29;124H$\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[95/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:26.104083754Z\",\"response\":\"-g\",\"done\":false}\u001b[2;117H        \u001b[29;124H$\u001b[29;1H\u001b[1;30r\u001b[29;124H"]
[211.975174, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[96/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.998228672Z\",\"response\":\"-gnu\",\"done\":false}\u001b[2;117H        \u001b[29;124H$\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[97/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.8923926Z\",\"response\":\"-linux\",\"done\":false}\u001b[2;117H        \u001b[29;124H$\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[98/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.786465204Z\",\"response\":\" alpha\",\"done\":false}\u001b[2;117H        \u001b[29;124H$\u001b[1;1H\u001b[1L\u001b[1;117H\u001b[30m\u001b[43m[99/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.680648299Z\",\"response\":\".\",\"done\":false}\u001b[2;117H        \u001b[29;124H$\u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[100/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.575228273Z\",\"response\":\"8\",\"done\":false}\u001b[2;117H        \u001b[29;124H$\u001b[29;1H\u001b[1;30r\u001b[29;124H"]
[212.030516, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[101/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.469442695Z\",\"response\":\"\\n\",\"done\":false}\u001b[2;116H         \u001b[29;124H$\u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[102/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.36384626Z\",\"response\":\"11\",\"done\":false}\u001b[2;116H         \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[103/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.257867923Z\",\"response\":\"-\",\"done\":false}\u001b[2;116H         \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[104/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.152003052Z\",\"response\":\"ls\",\"done\":false}\u001b[2;116H         \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[105/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:25.046149765Z\",\"response\":\"nat\",\"done\":false}\u001b[2;116H         \u001b[29;117H        \u001b[29;1H\u001b[1;30r\u001b[29;97H"]
[212.127393, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[106/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.940052491Z\",\"response\":\"-g\",\"done\":false}\u001b[2;116H         \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[107/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.834386335Z\",\"response\":\"-gnu\",\"done\":false}\u001b[2;116H         \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[108/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.728775889Z\",\"response\":\"-linux\",\"done\":false}\u001b[2;116H         \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[109/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.623598735Z\",\"response\":\"el\",\"done\":false}\u001b[2;116H         \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[110/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.518302963Z\",\"response\":\"ips\",\"done\":false}\u001b[2;116H         \u001b[29;117H        \u001b[29;1H\u001b[1;30r\u001b[29;94H"]
[212.819821, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[111/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.41410391Z\",\"response\":\" m\",\"done\":false}\u001b[2;116H         \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[112/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.301958265Z\",\"response\":\".\",\"done\":false}\u001b[2;116H         \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[113/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.198225368Z\",\"response\":\"7\",\"done\":false}\u001b[2;116H         \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[114/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:24.094373627Z\",\"response\":\"\\n\",\"done\":false}\u001b[2;116H         \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[115/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.990445506Z\",\"response\":\"-config\",\"done\":false}\u001b[2;116H         \u001b[29;117H        \u001b[29;1H\u001b[1;30r\u001b[29;98H"]
[212.824744, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[116/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.886437776Z\",\"response\":\"-step\",\"done\":false}\u001b[2;116H         \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[117/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.78242067Z\",\"response\":\"nu\",\"done\":false}\u001b[2;116H         \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[118/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.677814471Z\",\"response\":\" g\",\"done\":false}\u001b[2;116H         \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[119/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.574467351Z\",\"response\":\".\",\"done\":false}\u001b[2;116H         \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[120/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.470399175Z\",\"response\":\"6\",\"done\":false}\u001b[2;116H         \u001b[29;117H        \u001b[29;1H\u001b[1;30r\u001b[29;94H"]
[212.845351, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[121/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.366409044Z\",\"response\":\"\\n\",\"done\":false}\u001b[2;116H         \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[122/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.262627224Z\",\"response\":\"-build\",\"done\":false}\u001b[2;116H         \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[123/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.158510475Z\",\"response\":\"ring\",\"done\":false}\u001b[2;116H         \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[124/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:23.054352575Z\",\"response\":\" jet\",\"done\":false}\u001b[2;116H         \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[125/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:22.95031336Z\",\"response\":\".\",\"done\":false}\u001b[2;116H         \u001b[29;117H        \u001b[29;1H\u001b[1;30r\u001b[29;96H"]
[212.863983, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[126/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:22.846063084Z\",\"response\":\"5\",\"done\":false}\u001b[2;116H         \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[127/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:22.742140473Z\",\"response\":\"\\n\",\"done\":false}\u001b[2;116H         \u001b[29;117H        \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[128/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:22.638206919Z\",\"response\":\"stat\",\"done\":false}\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[129/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:22.533638001Z\",\"response\":\"p\",\"done\":false}\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[130/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:22.429156631Z\",\"response\":\"_x\",\"done\":false}\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[131/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:22.325037549Z\",\"response\":\" expect\",\"done\":false}\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[132/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:22.219878994Z\",\"response\":\".\",\"done\":false}\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[133/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:22.114868847Z\",\"response\":\"4\",\"done\":false}\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[134/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:22.009567386Z\",\"response\":\"\\n\",\"done\":false}\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[135/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.904577626Z\",\"response\":\"4\",\"done\":false}\u001b[2;116H         \u001b[29;116H         \u001b[29;1H\u001b[1;30r\u001b[29;96H"]
[212.882531, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[136/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.799658167Z\",\"response\":\"z\",\"done\":false}\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[137/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.696109303Z\",\"response\":\" unl\",\"done\":false}\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[138/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.593638311Z\",\"response\":\".\",\"done\":false}\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[139/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.489270187Z\",\"response\":\"3\",\"done\":false}\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[140/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.385130086Z\",\"response\":\"\\n\",\"done\":false}\u001b[2;116H         \u001b[29;116H         \u001b[29;1H\u001b[1;30r\u001b[29;93H"]
[212.922213, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[141/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.280558515Z\",\"response\":\"cal\",\"done\":false}\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[142/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.17614857Z\",\"response\":\" apply\",\"done\":false}\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[143/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.071494283Z\",\"response\":\".\",\"done\":false}\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[144/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.958924926Z\",\"response\":\"2\",\"done\":false}\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[145/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.855286661Z\",\"response\":\"\\n\",\"done\":false}\u001b[2;116H         \u001b[29;116H         \u001b[29;1H\u001b[1;30r\u001b[29;93H"]
[212.960769, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[146/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.751741321Z\",\"response\":\" dx\",\"done\":false}\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[147/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.648025683Z\",\"response\":\".\",\"done\":false}\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[148/297]\u001b[1;1H\u001b[39m\u001b[49m\"1\",\"done\":false}\u001b[14C                                                                                    \n         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[149/297]\u001b[1;1H\u001b[39m\u001b[49m2025-01-03 19:06:28,455 - DEBUG - Full response: {\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.537782625Z\",\"r\n         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[150/297]\u001b[1;1H\u001b[39m\u001b[49m                                                                                                                   \nesponse\":\u001b[29;116H         \u001b[29;1H\u001b[1;30r\u001b[29;98H"]
[212.97978, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[151/297]\u001b[1;1H\u001b[39m\u001b[49m                                                                                                                   \n         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[152/297]\u001b[1;1H\u001b[39m\u001b[49m2025-01-03 19:06:20,142 - INFO - 170/43907 - winner: grab_vcsa-3.2.2\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[153/297]\u001b[1;1H\u001b[39m\u001b[49m2025-01-03 19:06:20,142 - INFO - 170/43907 - winner: grab_vcsa-3.2.2\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[154/297]\u001b[1;1H\u001b[39m\u001b[49m                                                                                                                   \n         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[155/297]\u001b[1;1H\u001b[39m\u001b[49m123,\"prompt_eval_duration\":83000000,\"eval_count\":55,\"eval_duration\":5908000000}\u001b[2;116H         \u001b[29;116H         \u001b[29;1H\u001b[1;30r\u001b[29;94H"]
[213.017738, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[156/297]\u001b[1;1H\u001b[39m\u001b[49m,62,15,198,53321,82,673,3186,7345,198,92512,47882],\"total_duration\":6061012737,\"load_duration\":68290353,\"prompt_eva\n         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[157/297]\u001b[1;1H\u001b[39m\u001b[49m2005,20533,33245,11409,198,2984,25453,88,198,9117,2062,73299,198,79,9996,22,198,267,75,669,23716,198,76,3527,15,62,\nl_count\":\u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[158/297]\u001b[1;1H\u001b[39m\u001b[49m2,24,998,16,62,15,198,2984,25453,88,128009,128006,78191,128007,271,59312,2325,4942,64,12,18,13,17,13,17,198,14736,1\n24,998,16\u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[159/297]\u001b[1;1H\u001b[39m\u001b[49m942,64,12,18,13,17,13,17,198,9117,2062,73299,198,79,9996,22,198,267,75,669,23716,198,53321,82,673,3186,7345,198,76,\n8843,198,\u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[160/297]\u001b[1;1H\u001b[39m\u001b[49m4,304,2015,315,29736,13,128009,128006,882,128007,271,14736,18843,198,2005,20533,33245,11409,198,92512,47882,198,593\n3527,15,6\u001b[29;116H         \u001b[29;1H\u001b[1;30r\u001b[29;93H"]
[213.095237, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[161/297]\u001b[1;1H\u001b[39m\u001b[49m5688,374,264,1160,315,70837,13,9442,374,459,11713,1160,555,29736,315,1694,10862,389,279,13939,13,40633,449,1120,279\n12,2325,4\u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[162/297]\u001b[1;1H\u001b[39m\u001b[49m8006,9125,128007,271,2675,527,28121,37780,2320,8948,11,459,15592,2068,430,28727,902,11545,279,1217,374,1455,4461,31\n,3290,514\u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[163/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.122865135Z\",\"response\":\"\",\"done\":true,\"done_reason\":\"stop\",\"con\n1,955,13,\u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[164/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.01864376Z\",\"response\":\"terrain\",\"done\":false}\u001b[2;116Htext\":[12\u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[165/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:19.914117186Z\",\"response\":\"osg\",\"done\":false}\u001b[2;116H         \u001b[29;116H         \u001b[29;1H\u001b[1;30r\u001b[29;96H"]
[213.134448, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[166/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:19.809638706Z\",\"response\":\"\\n\",\"done\":false}\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[167/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:19.706146326Z\",\"response\":\".py\",\"done\":false}\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[168/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:19.603366779Z\",\"response\":\"_info\",\"done\":false}\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[169/297]\u001b[1;1H\u001b[39m\u001b[49m{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:19.498589624Z\",\"response\":\".get\",\"done\":false}\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[170/297]\u001b[1;1H\u001b[39m\u001b[49m(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ tail -f log/binary_ranking_debug.log\u001b[2;116H         \u001b[29;116H         \u001b[29;1H\u001b[1;30r\u001b[29;97H"]
[213.154538, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[171/297]\u001b[1;1H\u001b[39m\u001b[49m-rw-rw-r-- 1 gaz gaz  224737 Jan  3 19:06 binary_ranking_debug.log\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[172/297]\u001b[1;1H\u001b[39m\u001b[49m-rw-rw-r-- 1 gaz gaz 8552151 Dec 31 23:14 04.generate-help.log\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[173/297]\u001b[1;1H\u001b[39m\u001b[49m-rw-rw-r-- 1 gaz gaz   13245 Dec 31 14:00 failed-packages-ubuntu-14000-aarch64.log\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[174/297]\u001b[1;1H\u001b[39m\u001b[49m-rw-rw-r-- 1 gaz gaz  729181 Dec 31 14:00 03d.build-ubuntu-14000-aarch64.log\u001b[2;116H         \u001b[29;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[175/297]\u001b[1;1H\u001b[39m\u001b[49m-rw-rw-r-- 1 gaz gaz   12921 Dec 31 12:07 failed-packages-ubuntu-13500-aarch64.log\u001b[2;116H         \u001b[29;116H         \u001b[29;1H\u001b[1;30r\u001b[29;93H"]
[213.194169, "o", "\u001b[1;29r\u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[176/297]\u001b[1;1H\u001b[39m\u001b[49m-rw-rw-r-- 1 gaz gaz 1174642 Dec 31 12:07 03d.build-ubuntu-13500-aarch64.log\u001b[2;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[177/297]\u001b[1;1H\u001b[39m\u001b[49m-rw-rw-r-- 1 gaz gaz   12921 Dec 31 08:48 failed-packages-ubuntu-13000-aarch64.log\u001b[2;116H         \u001b[29;124H$\u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[178/297]\u001b[1;1H\u001b[39m\u001b[49m-rw-rw-r-- 1 gaz gaz 1174887 Dec 31 08:48 03d.build-ubuntu-13000-aarch64.log\u001b[2;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[179/297]\u001b[1;1H\u001b[39m\u001b[49m-rw-rw-r-- 1 gaz gaz   12921 Dec 31 05:52 failed-packages-ubuntu-12500-aarch64.log\u001b[2;116H         \u001b[1;1H\u001b[1L\u001b[1;116H\u001b[30m\u001b[43m[180/297]\u001b[1;1H\u001b[39m\u001b[49m-rw-rw-r-- 1 gaz gaz  893828 Dec 31 05:52 03d.build-ubuntu-12500-aarch64.log\u001b[2;116H         \u001b[29;116H         \u001b[29;1H\u001b[1;30r\u001b[29;69H"]
[213.432123, "o", "\u001b[1;29r\u001b[1;1H\u001b[1M\u001b[1;116H\u001b[30m\u001b[43m[179/297]\u001b[2;116H\u001b[39m\u001b[49m         \u001b[28;116H         \u001b[28;116H         \u001b[1;1H\u001b[1M\u001b[1;116H\u001b[30m\u001b[43m[178/297]\u001b[2;116H\u001b[39m\u001b[49m         \u001b[1;1H\u001b[1M\u001b[29;1H2025-01-03 19:06:28,455 - DEBUG\u001b[C- Full response: {\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.537782625Z\",\"response\":\u001b[1;116H\u001b[30m\u001b[43m[177/297]\u001b[2;116H\u001b[39m\u001b[49m         \u001b[29;32H \u001b[91C$\u001b[1;1H\u001b[1M\u001b[29;1H\"1\",\"done\":false}\u001b[1;116H\u001b[30m\u001b[43m[176/297]\u001b[2;116H\u001b[39m\u001b[49m         \u001b[28;124H:\u001b[1;1H\u001b[1M\u001b[29;1H{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.648025683Z\",\"response\":\".\",\"done\":false}\u001b[1;116H\u001b[30m\u001b[43m[175/297]\u001b[2;116H\u001b[39m\u001b[49m         \u001b[2;1H\u001b[1;30r\u001b[29;93H"]
[213.522859, "o", "\u001b[1;29r\u001b[1;1H\u001b[1M\u001b[29;1H{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.751741321Z\",\"response\":\" dx\",\"done\":false}\u001b[1;116H\u001b[30m\u001b[43m[174/297]\u001b[2;116H\u001b[39m\u001b[49m         \u001b[1;1H\u001b[1M\u001b[29;1H{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.855286661Z\",\"response\":\"\\n\",\"done\":false}\u001b[1;116H\u001b[30m\u001b[43m[173/297]\u001b[2;116H\u001b[39m\u001b[49m         \u001b[1;1H\u001b[1M\u001b[29;1H{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:20.958924926Z\",\"response\":\"2\",\"done\":false}\u001b[1;116H\u001b[30m\u001b[43m[172/297]\u001b[2;116H\u001b[39m\u001b[49m         \u001b[1;1H\u001b[1M\u001b[29;1H{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.071494283Z\",\"response\":\".\",\"done\":false}\u001b[1;116H\u001b[30m\u001b[43m[171/297]\u001b[2;116H\u001b[39m\u001b[49m         \u001b[1;1H\u001b[1M\u001b[29;1H{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:21.17614857Z\",\"response\":\" apply\",\"done\":false}\u001b[1;116H\u001b[30m\u001b[43m[170/297]\u001b[2;116H\u001b[39m\u001b[49m         \u001b[2;1H\u001b[1;30r\u001b[29;97H"]
[215.959428, "o", "\u001b[?25l\u001b[H{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:26.951868787Z\",\"response\":\"-linux\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.057962964Z\",\"response\":\"-gnu\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.164072887Z\",\"response\":\"-g\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.269995362Z\",\"response\":\"nat\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.37575698Z\",\"response\":\"-\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.481842839Z\",\"response\":\"12\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.587687429Z\",\"response\":\"\\n\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.691332885Z\",\"response\":\"10\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.802967907Z\",\"response\":\".\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:27.909069605Z\",\"response\":\" g\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.014715101Z\",\"response\":\"olang\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.121045305Z\",\"response\":\"-if\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.2264096Z\",\"response\":\"ace\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.331659532Z\",\"response\":\"assert\",\"done\":false}\u001b[K\r\n{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.436717664Z\",\"response\":\"\",\"done\":true,\"done_reason\":\"stop\",\"context\":[128006,9125,128007,271,2675,527,28121,37780,2320,8948,11,459,15592,2068,430,28727,902,11545,279,1217,374,1455,4461,311,955,13,5688,374,264,1160,315,70837,13,9442,374,459,11713,1160,555,29736,315,1694,10862,389,279,13939,13,40633,449,1120,279,3290,5144,304,2015,315,29736,13,128009,128006,882,128007,271,13009,198,70,38387,45737,580,2256,198,7288,47475,86816,2427,34397,1580,198,76,3153,47475,86816,2427,34397,12,717,198,15769,12928,33245,198,17557,3292,79,10079,198,5010,592,752,26187,198,76,3153,301,47475,86816,2427,34397,4835,12,806,198,10492,5531,198,359,96605,19,128009,128006,78191,128007,271,16,13,14142,198,17,13,3881,5531,198,18,13,65985,89,19,198,19,13,1755,3292,79,10079,198,20,13,17004,12928,33245,198,21,13,342,9110,30308,26187,198,22,13,296,3153,301,47475,86816,2427,34397,4835,12,806,198,23,13,8451,47475,86816,2427,34397,1580,198,24,13,296,3153,47475,86816,2427,34397,12,717,198,605,13,342,38387,45737,580,2256],\"total_duration\":8290849746,\"load_duration\":61595561,\"prompt_eval_count\":124,\"prompt_eval_duration\":101000000,\"eval_count\":76,\"eval_duration\":8122000000}\u001b[K\r\n\u001b[K\r\n2025-01-03 19:06:28,456 - INFO - 180/43907 - winner: dx\u001b[K\r\n2025-01-03 19:06:28,456 - INFO - 180/43907 - winner: dx\u001b[K\r\n^C\u001b[K\r\n(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\u001b[?12l\u001b[?25h\u001b[?2004h"]
[215.960016, "o", "\u001b[?25l\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*Z                                                                 \"gaz@orin: ~/src/uh-ha\" 19:06 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[29;38H"]
[216.765935, "o", "\u0007"]
[219.063444, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[H2025-01-03 19:05:43,151 - INFO - 120/43907 - winner: expect_lp\u001b[2;62H\u001b[1K\runlock\r\n2025-01-03 19:05:49,843 - INFO - 130/43907 - winner: mythmedia\u001b[4;62H\u001b[1K\rserver\r\n2025-01-03 19:05:49,843 - INFO - 130/43907 - winner: mythmedia\u001b[6;62H\u001b[1K\rserver\r\n2025-01-03 19:05:58,541 - INFO - 140/43907 - winner: dbscan\u001b[3X\r\n2025-01-03 19:05:58,541 - INFO - 140/43907 - winner: dbscan\u001b[3X\r\n2025-01-03 19:06:05,573 - INFO - 150/43907 - winner: ec2-descr\r\nibe-reserved-instances-modifications\u001b[26X\r\n2025-01-03 19:06:05,573 - INFO - 150/43907 - winner: ec2-descr\r\nibe-reserved-instances-modifications\u001b[26X\r\n2025-01-03 19:06:14,058 - INFO - 160/43907 - winner: byobu-exp\u001b[14;62H\u001b[1K\rort\r\n2025-01-03 19:06:14,058 - INFO - 160/43907 - winner: byobu-exp\u001b[16;62H\u001b[1K\rort\r\n2025-01-03 19:06:20,142 - INFO - 170/43907 - winner: grab_vcsa\u001b[18;62H\u001b[1K\r-3.2.2\r\n2025-01-03 19:06:20,142 - INFO - 170/43907 - winner: grab_vcsa\u001b[20;62H\u001b[1K\r-3.2.2\r\n2025-01-03 19:06:28,456 - INFO - 180/43907 - winner: dx\u001b[7X\r\n2025-01-03 19:06:28,456 - INFO - 180/43907 - winner: dx\u001b[7X\r\n2025-01-03 19:06:38,394 - INFO - 190/43907 - winner: tree-sitt\u001b[24;62H\u001b[1K\rer\r\n2025-01-03 19:06:38,394 - INFO - 190/43907 - winner: tree-sitt\u001b[26;62H\u001b[1K\rer\r\n2025-01-03 19:06:43,915 - INFO - 200/43907 - winner: emd\u001b[6X\r\n2025-01-03 19:06:43,915 - INFO - 200/43907 - winner: emd\u001b[6X\u001b[29;62H\u001b[1K\u001b[1;64H{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.2264096Z\"\u001b[2;64H,\"response\":\"ace\",\"done\":false}\u001b[K\u001b[3;64H{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.331659532\u001b[4;64HZ\",\"response\":\"assert\",\"done\":false}\u001b[K\u001b[5;64H{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.436717664\u001b[6;64HZ\",\"response\":\"\",\"done\":true,\"done_reason\":\"stop\",\"context\":[\u001b[7;64H128006,9125,128007,271,2675,527,28121,37780,2320,8948,11,459,\u001b[8;64H15592,2068,430,28727,902,11545,279,1217,374,1455,4461,311,955\u001b[9;64H,13,5688,374,264,1160,315,70837,13,9442,374,459,11713,1160,55\u001b[10;64H5,29736,315,1694,10862,389,279,13939,13,40633,449,1120,279,32\u001b[11;64H90,5144,304,2015,315,29736,13,128009,128006,882,128007,271,13\u001b[12;64H009,198,70,38387,45737,580,2256,198,7288,47475,86816,2427,343\u001b[13;64H97,1580,198,76,3153,47475,86816,2427,34397,12,717,198,15769,1\u001b[14;64H2928,33245,198,17557,3292,79,10079,198,5010,592,752,26187,198\u001b[15;64H,76,3153,301,47475,86816,2427,34397,4835,12,806,198,10492,553\u001b[16;64H1,198,359,96605,19,128009,128006,78191,128007,271,16,13,14142\u001b[17;64H,198,17,13,3881,5531,198,18,13,65985,89,19,198,19,13,1755,329\u001b[18;64H2,79,10079,198,20,13,17004,12928,33245,198,21,13,342,9110,303\u001b[19;64H08,26187,198,22,13,296,3153,301,47475,86816,2427,34397,4835,1\u001b[20;64H2,806,198,23,13,8451,47475,86816,2427,34397,1580,198,24,13,29\u001b[21;64H6,3153,47475,86816,2427,34397,12,717,198,605,13,342,38387,457\u001b[22;64H37,580,2256],\"total_duration\":8290849746,\"load_duration\":6159\u001b[23;64H5561,\"prompt_eval_count\":124,\"prompt_eval_duration\":101000000\u001b[24;64H,\"eval_count\":76,\"eval_duration\":8122000000}\u001b[K\u001b[25;64H\u001b[K\n2025-01-03 19:06:28,456 - INFO - 180/43907 - winner: dx\u001b[K\u001b[27;64H2025-01-03 19:06:28,456 - INFO - 180/43907 - winner: dx\u001b[K\u001b[28;64H^C\u001b[K\u001b[29;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:06 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[29;101H"]
[219.063948, "o", "\u001b[37D(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ \u001b[K"]
[219.064406, "o", "\u001b[?25l\u001b[1;63Hâ”‚\u001b[2;63Hâ”‚\u001b[3;63Hâ”‚\u001b[4;63Hâ”‚\u001b[5;63Hâ”‚\u001b[6;63Hâ”‚\u001b[7;63Hâ”‚\u001b[8;63Hâ”‚\u001b[9;63Hâ”‚\u001b[10;63Hâ”‚\u001b[11;63Hâ”‚\u001b[12;63Hâ”‚\u001b[13;63Hâ”‚\u001b[14;63Hâ”‚\u001b[15;63Hâ”‚\u001b[16;63H\u001b[34mâ”‚\u001b[17;63Hâ”‚\u001b[18;63Hâ”‚\u001b[19;63Hâ”‚\u001b[20;63Hâ”‚\u001b[21;63Hâ”‚\u001b[22;63Hâ”‚\u001b[23;63Hâ”‚\u001b[24;63Hâ”‚\u001b[25;63Hâ”‚\u001b[26;63Hâ”‚\u001b[27;63Hâ”‚\u001b[28;63Hâ”‚\u001b[29;63Hâ”‚\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[37C"]
[219.659837, "o", "e"]
[220.112548, "o", "x"]
[220.314571, "o", "i"]
[220.503113, "o", "t"]
[220.768175, "o", "\u001b[?25l\u001b[1;64H,\"response\":\"ace\",\"done\":false}\u001b[K\u001b[2;64H{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.331659532\u001b[3;64HZ\",\"response\":\"assert\",\"done\":false}\u001b[K\u001b[4;64H{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.436717664\u001b[5;64HZ\",\"response\":\"\",\"done\":true,\"done_reason\":\"stop\",\"context\":[\u001b[6;64H128006,9125,128007,271,2675,527,28121,37780,2320,8948,11,459,\u001b[7;64H15592,2068,430,28727,902,11545,279,1217,374,1455,4461,311,955\u001b[8;64H,13,5688,374,264,1160,315,70837,13,9442,374,459,11713,1160,55\u001b[9;64H5,29736,315,1694,10862,389,279,13939,13,40633,449,1120,279,32\u001b[10;64H90,5144,304,2015,315,29736,13,128009,128006,882,128007,271,13\u001b[11;64H009,198,70,38387,45737,580,2256,198,7288,47475,86816,2427,343\u001b[12;64H97,1580,198,76,3153,47475,86816,2427,34397,12,717,198,15769,1\u001b[13;64H2928,33245,198,17557,3292,79,10079,198,5010,592,752,26187,198\u001b[14;64H,76,3153,301,47475,86816,2427,34397,4835,12,806,198,10492,553\u001b[15;64H1,198,359,96605,19,128009,128006,78191,128007,271,16,13,14142\u001b[16;64H,198,17,13,3881,5531,198,18,13,65985,89,19,198,19,13,1755,329\u001b[17;64H2,79,10079,198,20,13,17004,12928,33245,198,21,13,342,9110,303\u001b[18;64H08,26187,198,22,13,296,3153,301,47475,86816,2427,34397,4835,1\u001b[19;64H2,806,198,23,13,8451,47475,86816,2427,34397,1580,198,24,13,29\u001b[20;64H6,3153,47475,86816,2427,34397,12,717,198,605,13,342,38387,457\u001b[21;64H37,580,2256],\"total_duration\":8290849746,\"load_duration\":6159\u001b[22;64H5561,\"prompt_eval_count\":124,\"prompt_eval_duration\":101000000\u001b[23;64H,\"eval_count\":76,\"eval_duration\":8122000000}\u001b[K\u001b[24;64H\u001b[K\n2025-01-03 19:06:28,456 - INFO - 180/43907 - winner: dx\u001b[K\u001b[26;64H2025-01-03 19:06:28,456 - INFO - 180/43907 - winner: dx\u001b[K\u001b[27;64H^C\u001b[K\u001b[28;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ exit\u001b[K\u001b[29;64H\u001b[K\u001b[?12l\u001b[?25h\u001b[?2004l"]
[220.768721, "o", "\u001b[?25l\u001b[1d{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.331659532\u001b[2;64HZ\",\"response\":\"assert\",\"done\":false}\u001b[K\u001b[3;64H{\"model\":\"llama3\",\"created_at\":\"2025-01-03T19:06:28.436717664\u001b[4;64HZ\",\"response\":\"\",\"done\":true,\"done_reason\":\"stop\",\"context\":[\u001b[5;64H128006,9125,128007,271,2675,527,28121,37780,2320,8948,11,459,\u001b[6;64H15592,2068,430,28727,902,11545,279,1217,374,1455,4461,311,955\u001b[7;64H,13,5688,374,264,1160,315,70837,13,9442,374,459,11713,1160,55\u001b[8;64H5,29736,315,1694,10862,389,279,13939,13,40633,449,1120,279,32\u001b[9;64H90,5144,304,2015,315,29736,13,128009,128006,882,128007,271,13\u001b[10;64H009,198,70,38387,45737,580,2256,198,7288,47475,86816,2427,343\u001b[11;64H97,1580,198,76,3153,47475,86816,2427,34397,12,717,198,15769,1\u001b[12;64H2928,33245,198,17557,3292,79,10079,198,5010,592,752,26187,198\u001b[13;64H,76,3153,301,47475,86816,2427,34397,4835,12,806,198,10492,553\u001b[14;64H1,198,359,96605,19,128009,128006,78191,128007,271,16,13,14142\u001b[15;64H,198,17,13,3881,5531,198,18,13,65985,89,19,198,19,13,1755,329\u001b[16;64H2,79,10079,198,20,13,17004,12928,33245,198,21,13,342,9110,303\u001b[17;64H08,26187,198,22,13,296,3153,301,47475,86816,2427,34397,4835,1\u001b[18;64H2,806,198,23,13,8451,47475,86816,2427,34397,1580,198,24,13,29\u001b[19;64H6,3153,47475,86816,2427,34397,12,717,198,605,13,342,38387,457\u001b[20;64H37,580,2256],\"total_duration\":8290849746,\"load_duration\":6159\u001b[21;64H5561,\"prompt_eval_count\":124,\"prompt_eval_duration\":101000000\u001b[22;64H,\"eval_count\":76,\"eval_duration\":8122000000}\u001b[K\u001b[23;64H\u001b[K\n2025-01-03 19:06:28,456 - INFO - 180/43907 - winner: dx\u001b[K\u001b[25;64H2025-01-03 19:06:28,456 - INFO - 180/43907 - winner: dx\u001b[K\u001b[26;64H^C\u001b[K\u001b[27;64H(.venv) \u001b[34m\u001b[1mgaz@orin\u001b(B\u001b[m:\u001b[34m\u001b[1m~/src/uh-halp-data\u001b(B\u001b[m$ exit\u001b[K\u001b[28;64Hlogout\u001b[K\u001b[29;64H\u001b[K\u001b[?12l\u001b[?25h"]
[220.777303, "o", "\u001b[?25l\u001b[H2025-01-03 19:05:08,591 - INFO - 70/43907 - winner: ksu.mit\u001b[K\r\n2025-01-03 19:05:08,591 - INFO - 70/43907 - winner: ksu.mit\u001b[K\r\n2025-01-03 19:05:15,281 - INFO - 80/43907 - winner: pts\u001b[K\r\n2025-01-03 19:05:15,281 - INFO - 80/43907 - winner: pts\u001b[K\r\n2025-01-03 19:05:22,332 - INFO - 90/43907 - winner: pamtofits\u001b[K\r\n2025-01-03 19:05:22,332 - INFO - 90/43907 - winner: pamtofits\u001b[K\r\n2025-01-03 19:05:30,100 - INFO - 100/43907 - winner: printcal\u001b[K\r\n2025-01-03 19:05:30,100 - INFO - 100/43907 - winner: printcal\u001b[K\r\n2025-01-03 19:05:35,541 - INFO - 110/43907 - winner: condor_transfer_data\u001b[K\r\n2025-01-03 19:05:35,541 - INFO - 110/43907 - winner: condor_transfer_data\u001b[K\r\n2025-01-03 19:05:43,151 - INFO - 120/43907 - winner: expect_lpunlock\u001b[K\r\n2025-01-03 19:05:43,151 - INFO - 120/43907 - winner: expect_lpunlock\u001b[K\r\n2025-01-03 19:05:49,843 - INFO - 130/43907 - winner: mythmediaserver\u001b[K\r\n2025-01-03 19:05:49,843 - INFO - 130/43907 - winner: mythmediaserver\u001b[K\r\n2025-01-03 19:05:58,541 - INFO - 140/43907 - winner: dbscan\u001b[K\r\n2025-01-03 19:05:58,541 - INFO - 140/43907 - winner: dbscan\u001b[K\r\n2025-01-03 19:06:05,573 - INFO - 150/43907 - winner: ec2-describe-reserved-instances-modifications\u001b[K\r\n2025-01-03 19:06:05,573 - INFO - 150/43907 - winner: ec2-describe-reserved-instances-modifications\u001b[K\r\n2025-01-03 19:06:14,058 - INFO - 160/43907 - winner: byobu-export\u001b[K\r\n2025-01-03 19:06:14,058 - INFO - 160/43907 - winner: byobu-export\u001b[K\r\n2025-01-03 19:06:20,142 - INFO - 170/43907 - winner: grab_vcsa-3.2.2\u001b[K\r\n2025-01-03 19:06:20,142 - INFO - 170/43907 - winner: grab_vcsa-3.2.2\u001b[K\r\n2025-01-03 19:06:28,456 - INFO - 180/43907 - winner: dx\u001b[K\r\n2025-01-03 19:06:28,456 - INFO - 180/43907 - winner: dx\u001b[K\r\n2025-01-03 19:06:38,394 - INFO - 190/43907 - winner: tree-sitter\u001b[K\r\n2025-01-03 19:06:38,394 - INFO - 190/43907 - winner: tree-sitter\u001b[K\r\n2025-01-03 19:06:43,915 - INFO - 200/43907 - winner: emd\u001b[K\r\n2025-01-03 19:06:43,915 - INFO - 200/43907 - winner: emd\u001b[K\r\n\u001b[K\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:bash*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:06 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[29;1H"]
[221.216119, "o", "\u001b[?25l\u001b[30m\u001b[44m\r\n[0] 0:sudo- 1:make*                                                                  \"gaz@orin: ~/src/uh-ha\" 19:06 03-Jan-25\u001b(B\u001b[m\u001b[?12l\u001b[?25h\u001b[29;1H"]
[222.685889, "o", "\u001b[1;30r\u001b(B\u001b[m\u001b[?1l\u001b>\u001b[H\u001b[2J\u001b[?12l\u001b[?25h\u001b[?1000l\u001b[?1002l\u001b[?1003l\u001b[?1006l\u001b[?1005l\u001b[?7727l\u001b[?1004l\u001b[?1049l\u001b[23;0;0t"]
[222.686319, "o", "[detached (from session 0)]\r\n"]
